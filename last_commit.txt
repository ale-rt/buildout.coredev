Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2017-03-14T15:17:12+01:00
Author: Stephan Geulette (sgeulette) <s.geulette@imio.be>
Commit: https://github.com/plone/plone.app.robotframework/commit/9ecc1ca425dea6871ba687c0b94e37aa53a23971

Manage datetime and date field types in "set field value" keyword

Files changed:
M CHANGES.rst
M CONTRIBUTORS.rst
M src/plone/app/robotframework/content.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 6af5242..7b7124b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ king changes:
 
 New features:
 
-- *add item here*
+- Manage datetime and date field types in "set field value" keyword
+  [sgeulette]
 
 Bug fixes:
 
diff --git a/CONTRIBUTORS.rst b/CONTRIBUTORS.rst
index f1a29c0..71b2897 100644
--- a/CONTRIBUTORS.rst
+++ b/CONTRIBUTORS.rst
@@ -22,6 +22,7 @@
 - Roman Kozlovskyi
 - Silvio Tomatis
 - Steffen Lindner
+- Stephan Geulette
 - Timo Stollenwerk
 - Victor Fernandez de Alba
 - zotya
diff --git a/src/plone/app/robotframework/content.py b/src/plone/app/robotframework/content.py
index c33e065..adde094 100644
--- a/src/plone/app/robotframework/content.py
+++ b/src/plone/app/robotframework/content.py
@@ -1,4 +1,5 @@
 # -*- coding: utf-8 -*-
+from datetime import datetime
 import os
 
 from Products.CMFCore.utils import getToolByName
@@ -173,6 +174,20 @@ def set_field_value(self, uid, field, value, field_type):
                 value = int(value)
             if field_type == 'list':
                 value = eval(value)
+            if field_type.startswith('datetime'):
+                # field_type must begin with 'datetime'
+                # followed by optional format 'datetime%Y%m%d%H%M'
+                # without format: %Y%m%d%H%M is used
+                field_type = field_type[8:]
+                fmt = field_type and field_type or '%Y%m%d%H%M'
+                value = datetime.strptime(value, fmt)
+            if field_type.startswith('date'):
+                # field_type must begin with 'date'
+                # followed by optional format 'date%Y%m%d'
+                # without format: %Y%m%d is used
+                field_type = field_type[4:]
+                fmt = field_type and field_type or '%Y%m%d'
+                value = datetime.strptime(value, fmt).date()
             if field_type == 'reference' and HAS_DEXTERITY_RELATIONS:
                 results_referenced = pc.unrestrictedSearchResults(UID=value)
                 referenced_obj = results_referenced[0]._unrestrictedGetObject()


Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2017-03-14T16:30:08+02:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.robotframework/commit/fdac6b1b92948ee1108fdf1e39e22d1fd002bb50

Merge pull request #65 from IMIO/master

Manage datetime and date field types in "set field value" keyword

Files changed:
M CHANGES.rst
M CONTRIBUTORS.rst
M src/plone/app/robotframework/content.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 6af5242..7b7124b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ king changes:
 
 New features:
 
-- *add item here*
+- Manage datetime and date field types in "set field value" keyword
+  [sgeulette]
 
 Bug fixes:
 
diff --git a/CONTRIBUTORS.rst b/CONTRIBUTORS.rst
index f1a29c0..71b2897 100644
--- a/CONTRIBUTORS.rst
+++ b/CONTRIBUTORS.rst
@@ -22,6 +22,7 @@
 - Roman Kozlovskyi
 - Silvio Tomatis
 - Steffen Lindner
+- Stephan Geulette
 - Timo Stollenwerk
 - Victor Fernandez de Alba
 - zotya
diff --git a/src/plone/app/robotframework/content.py b/src/plone/app/robotframework/content.py
index c33e065..adde094 100644
--- a/src/plone/app/robotframework/content.py
+++ b/src/plone/app/robotframework/content.py
@@ -1,4 +1,5 @@
 # -*- coding: utf-8 -*-
+from datetime import datetime
 import os
 
 from Products.CMFCore.utils import getToolByName
@@ -173,6 +174,20 @@ def set_field_value(self, uid, field, value, field_type):
                 value = int(value)
             if field_type == 'list':
                 value = eval(value)
+            if field_type.startswith('datetime'):
+                # field_type must begin with 'datetime'
+                # followed by optional format 'datetime%Y%m%d%H%M'
+                # without format: %Y%m%d%H%M is used
+                field_type = field_type[8:]
+                fmt = field_type and field_type or '%Y%m%d%H%M'
+                value = datetime.strptime(value, fmt)
+            if field_type.startswith('date'):
+                # field_type must begin with 'date'
+                # followed by optional format 'date%Y%m%d'
+                # without format: %Y%m%d is used
+                field_type = field_type[4:]
+                fmt = field_type and field_type or '%Y%m%d'
+                value = datetime.strptime(value, fmt).date()
             if field_type == 'reference' and HAS_DEXTERITY_RELATIONS:
                 results_referenced = pc.unrestrictedSearchResults(UID=value)
                 referenced_obj = results_referenced[0]._unrestrictedGetObject()


