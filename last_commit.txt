Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2016-11-02T14:44:11+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.upgrade/commit/a6c42f17923a1f80833f879e5fb676f204933c75

Fix upgrade step for PasswordResetTool if there was never a different value than the default was set

Files changed:
M CHANGES.rst
M plone/app/upgrade/v51/betas.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 87669e2..e613929 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -62,6 +62,9 @@ Bug fixes:
 - Be sure smtp_port is an integer.
   [ale-rt]
 
+- Fix upgrade step for PasswordResetTool if there was never da different value than the default was set.
+  [jensens]
+
 
 1.3.27 (2016-08-16)
 -------------------
diff --git a/plone/app/upgrade/v51/betas.py b/plone/app/upgrade/v51/betas.py
index 44cf382..899886d 100644
--- a/plone/app/upgrade/v51/betas.py
+++ b/plone/app/upgrade/v51/betas.py
@@ -11,6 +11,8 @@
 
 logger = logging.getLogger('plone.app.upgrade')
 
+_marker = dict()
+
 
 def to51beta1(context):
     loadMigrationProfile(context, 'profile-plone.app.upgrade.v51:to51beta1')
@@ -70,14 +72,18 @@ def remove_jquery_cookie_from_stub_js_modules(context):
 def move_pw_reset_tool(context):
     """ Move PasswordResetTool from its own product to CMFPlone
     """
-
     pw_reset_tool = getToolByName(context, 'portal_password_reset')
-    old_days_timeout = pw_reset_tool._timedelta
-    old_user_check = pw_reset_tool._user_check
+    # Need to use getattr here. The _timedelta and _check_user are a class
+    # attributes and not available in the instance dict until set
+    # in case of defaults the do not exist in the <persistent broken ...>
+    # object we fetch here.
+    old_days_timeout = getattr(pw_reset_tool, '_timedelta', _marker)
+    old_user_check = getattr(pw_reset_tool, '_user_check', _marker)
     portal = getToolByName(context, 'portal_url').getPortalObject()
     del portal['portal_password_reset']
     loadMigrationProfile(context, 'profile-plone.app.upgrade.v51:to51beta1')
     pw_reset_tool = getToolByName(context, 'portal_password_reset')
-    pw_reset_tool._timedelta = int(old_days_timeout / 24)
-    pw_reset_tool._user_check = bool(old_user_check)
-
+    if old_days_timeout is not _marker:
+        pw_reset_tool._timedelta = int(old_days_timeout / 24)
+    if old_user_check is not _marker:
+        pw_reset_tool._user_check = bool(old_user_check)


