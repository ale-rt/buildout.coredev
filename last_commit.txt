Repository: plone.protect


Branch: refs/heads/master
Date: 2016-07-05T23:17:21+02:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.protect/commit/b25ed378a56e4920c6d049b3af4bca5d46a5227c

Use zope.interface decorator

This not only makes code more pleasent to read,
but also makes the code python 3 compatible
(while maintaining python 2 compatibility).

Files changed:
M CHANGES.rst
M plone/protect/authenticator.py
M plone/protect/auto.py
M plone/protect/views.py

diff --git a/CHANGES.rst b/CHANGES.rst
index db7b2c5..d2e6308 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -13,7 +13,8 @@ New:
 
 Fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 3.0.18 (2016-02-25)
diff --git a/plone/protect/authenticator.py b/plone/protect/authenticator.py
index 2267ba7..2883bdb 100644
--- a/plone/protect/authenticator.py
+++ b/plone/protect/authenticator.py
@@ -4,7 +4,7 @@
 from Products.Five import BrowserView
 from zExceptions import Forbidden
 from zope.component import getUtility
-from zope.interface import implements
+from zope.interface import implementer
 from ZPublisher.HTTPRequest import HTTPRequest
 
 import hmac
@@ -93,8 +93,8 @@ def createToken(extra='', manager=None):
     return hmac.new(secret, user + extra, sha).hexdigest()
 
 
+@implementer(IAuthenticatorView)
 class AuthenticatorView(BrowserView):
-    implements(IAuthenticatorView)
 
     def token(self, extra=''):
         return createToken(extra)
diff --git a/plone/protect/auto.py b/plone/protect/auto.py
index 80d1650..14d7013 100644
--- a/plone/protect/auto.py
+++ b/plone/protect/auto.py
@@ -30,7 +30,7 @@
 from zope.component import ComponentLookupError
 from zope.component import adapts
 from zope.component import getUtility
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 from zope.globalrequest import getRequest
 
 try:
@@ -46,14 +46,13 @@
     ('true', 't', 'yes', 'y', '1')
 
 
+@implementer(ITransform)
 class ProtectTransform(object):
     """
     XXX Need to be extremely careful with everything we do in here
     since an error here would mean the transform is skipped
     and no CSRF protection...
     """
-
-    implements(ITransform)
     adapts(Interface, Interface)  # any context, any request
 
     # should be last lxml related transform
diff --git a/plone/protect/views.py b/plone/protect/views.py
index 5da242c..253cc83 100644
--- a/plone/protect/views.py
+++ b/plone/protect/views.py
@@ -1,7 +1,8 @@
 from plone.protect.interfaces import IConfirmView
 from Products.Five import BrowserView
-from zope.interface import implements
+from zope.interface import implementer
 
 
+@implementer(IConfirmView)
 class ConfirmView(BrowserView):
-    implements(IConfirmView)
+    pass


Repository: plone.protect


Branch: refs/heads/master
Date: 2016-07-07T00:57:24+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.protect/commit/75634b413d7fe26e55b2859c25dc16269e8398ff

Merge pull request #50 from plone/gforcada-use-zope-decorators

Use zope.interface decorator

Files changed:
M CHANGES.rst
M plone/protect/authenticator.py
M plone/protect/auto.py
M plone/protect/views.py

diff --git a/CHANGES.rst b/CHANGES.rst
index db7b2c5..d2e6308 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -13,7 +13,8 @@ New:
 
 Fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 3.0.18 (2016-02-25)
diff --git a/plone/protect/authenticator.py b/plone/protect/authenticator.py
index 2267ba7..2883bdb 100644
--- a/plone/protect/authenticator.py
+++ b/plone/protect/authenticator.py
@@ -4,7 +4,7 @@
 from Products.Five import BrowserView
 from zExceptions import Forbidden
 from zope.component import getUtility
-from zope.interface import implements
+from zope.interface import implementer
 from ZPublisher.HTTPRequest import HTTPRequest
 
 import hmac
@@ -93,8 +93,8 @@ def createToken(extra='', manager=None):
     return hmac.new(secret, user + extra, sha).hexdigest()
 
 
+@implementer(IAuthenticatorView)
 class AuthenticatorView(BrowserView):
-    implements(IAuthenticatorView)
 
     def token(self, extra=''):
         return createToken(extra)
diff --git a/plone/protect/auto.py b/plone/protect/auto.py
index 80d1650..14d7013 100644
--- a/plone/protect/auto.py
+++ b/plone/protect/auto.py
@@ -30,7 +30,7 @@
 from zope.component import ComponentLookupError
 from zope.component import adapts
 from zope.component import getUtility
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 from zope.globalrequest import getRequest
 
 try:
@@ -46,14 +46,13 @@
     ('true', 't', 'yes', 'y', '1')
 
 
+@implementer(ITransform)
 class ProtectTransform(object):
     """
     XXX Need to be extremely careful with everything we do in here
     since an error here would mean the transform is skipped
     and no CSRF protection...
     """
-
-    implements(ITransform)
     adapts(Interface, Interface)  # any context, any request
 
     # should be last lxml related transform
diff --git a/plone/protect/views.py b/plone/protect/views.py
index 5da242c..253cc83 100644
--- a/plone/protect/views.py
+++ b/plone/protect/views.py
@@ -1,7 +1,8 @@
 from plone.protect.interfaces import IConfirmView
 from Products.Five import BrowserView
-from zope.interface import implements
+from zope.interface import implementer
 
 
+@implementer(IConfirmView)
 class ConfirmView(BrowserView):
-    implements(IConfirmView)
+    pass


