Repository: plone.schemaeditor


Branch: refs/heads/master
Date: 2016-07-05T23:17:52+02:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.schemaeditor/commit/cb007573831a4c94f3c36708dd5e49499e582689

Use zope.interface decorator

This not only makes code more pleasent to read,
but also makes the code python 3 compatible
(while maintaining python 2 compatibility).

Files changed:
M CHANGES.rst
M plone/schemaeditor/browser/field/edit.py
M plone/schemaeditor/browser/field/traversal.py
M plone/schemaeditor/browser/schema/listing.py
M plone/schemaeditor/browser/schema/traversal.py
M plone/schemaeditor/fields.py
M plone/schemaeditor/utils.py

diff --git a/CHANGES.rst b/CHANGES.rst
index ecc7e5f..5e880f6 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 2.0.10 (2016-06-07)
diff --git a/plone/schemaeditor/browser/field/edit.py b/plone/schemaeditor/browser/field/edit.py
index b760c76..fcd3f54 100644
--- a/plone/schemaeditor/browser/field/edit.py
+++ b/plone/schemaeditor/browser/field/edit.py
@@ -1,6 +1,6 @@
 from Acquisition import aq_parent, aq_inner
 
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 from zope.interface.declarations import ObjectSpecificationDescriptor
 from zope.interface.declarations import getObjectSpecification
 from zope.cachedescriptors.property import Lazy as lazy_property
@@ -37,8 +37,8 @@ class IFieldTitle(Interface):
     )
 
 
+@implementer(IFieldTitle)
 class FieldTitleAdapter(object):
-    implements(IFieldTitle)
     adapts(IField)
 
     def __init__(self, field):
@@ -64,8 +64,8 @@ def __get__(self, inst, cls=None):
             return inst.__provides__
 
 
+@implementer(IFieldProxy)
 class FieldProxy(object):
-    implements(IFieldProxy)
 
     __providedBy__ = FieldProxySpecification()
 
@@ -75,8 +75,8 @@ def __init__(self, context):
         self.__dict__ = context.__dict__
 
 
+@implementer(IDataManager)
 class FieldDataManager(AttributeField):
-    implements(IDataManager)
     adapts(IFieldProxy, IField)
 
     def get(self):
@@ -98,8 +98,8 @@ def set(self, value):
         super(FieldDataManager, self).set(value)
 
 
+@implementer(IFieldEditForm)
 class FieldEditForm(AutoExtensibleForm, form.EditForm):
-    implements(IFieldEditForm)
     id = 'edit-field-form'
 
     def __init__(self, context, request):
diff --git a/plone/schemaeditor/browser/field/traversal.py b/plone/schemaeditor/browser/field/traversal.py
index 3ef197e..2a3c5b0 100644
--- a/plone/schemaeditor/browser/field/traversal.py
+++ b/plone/schemaeditor/browser/field/traversal.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.publisher.interfaces.browser import IBrowserPublisher
 from ZPublisher.BaseRequest import DefaultPublishTraverse
 from OFS.SimpleItem import SimpleItem
@@ -7,11 +7,11 @@
 from plone.schemaeditor.interfaces import IFieldContext
 
 
+@implementer(IFieldContext, IBrowserPublisher)
 class FieldContext(SimpleItem):
 
     """ wrapper for published zope 3 schema fields
     """
-    implements(IFieldContext, IBrowserPublisher)
 
     def __init__(self, context, request):
         super(FieldContext, self).__init__()
diff --git a/plone/schemaeditor/browser/schema/listing.py b/plone/schemaeditor/browser/schema/listing.py
index 3f6783e..748a4c6 100644
--- a/plone/schemaeditor/browser/schema/listing.py
+++ b/plone/schemaeditor/browser/schema/listing.py
@@ -1,6 +1,6 @@
 from zope.component import queryUtility
 from zope.event import notify
-from zope.interface import implements
+from zope.interface import implementer
 from z3c.form import button, form
 from z3c.form.interfaces import IEditForm, DISPLAY_MODE
 
@@ -21,8 +21,8 @@
 
 
 
+@implementer(IEditForm)
 class SchemaListing(AutoExtensibleForm, form.Form):
-    implements(IEditForm)
 
     ignoreContext = True
     ignoreRequest = True
diff --git a/plone/schemaeditor/browser/schema/traversal.py b/plone/schemaeditor/browser/schema/traversal.py
index 18d108a..7ed16e6 100644
--- a/plone/schemaeditor/browser/schema/traversal.py
+++ b/plone/schemaeditor/browser/schema/traversal.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.publisher.interfaces.browser import IBrowserPublisher
 from ZPublisher.BaseRequest import DefaultPublishTraverse
 from OFS.SimpleItem import SimpleItem
@@ -7,14 +7,12 @@
 from plone.schemaeditor.interfaces import ISchemaContext
 
 
+@implementer(ISchemaContext, IBrowserPublisher)
 class SchemaContext(SimpleItem):
 
     """ This is a transient item that allows us to traverse through (a wrapper
         of) a zope 3 schema to (a wrapper of) a zope 3 schema field.
     """
-    # Implementing IBrowserPublisher tells the Zope 2 publish traverser to pay attention
-    # to the publishTraverse and browserDefault methods.
-    implements(ISchemaContext, IBrowserPublisher)
 
     schemaEditorView = None
     additionalSchemata = ()
diff --git a/plone/schemaeditor/fields.py b/plone/schemaeditor/fields.py
index 1d3f706..3f51dce 100644
--- a/plone/schemaeditor/fields.py
+++ b/plone/schemaeditor/fields.py
@@ -5,7 +5,7 @@
 from zope.component import adapter
 from zope.component import getUtilitiesFor
 from zope.globalrequest import getRequest
-from zope.interface import implements
+from zope.interface import implementer
 from zope.i18n import translate
 from zope import schema
 from zope.schema import interfaces as schema_ifaces
@@ -28,8 +28,8 @@ def getFirstFieldSchema(field):
             s.isOrExtends(schema_ifaces.IField)][0]
 
 
+@implementer(IFieldFactory)
 class FieldFactory(object):
-    implements(IFieldFactory)
 
     title = u''
 
@@ -105,8 +105,8 @@ def getChoiceFieldSchema(field):
     values=[])
 
 
+@interface.implementer(se_schema.ITextLineChoice)
 class TextLineChoiceField(object):
-    interface.implements(se_schema.ITextLineChoice)
     component.adapts(schema_ifaces.IChoice)
 
     def __init__(self, field):
@@ -225,8 +225,8 @@ def getMultiChoiceFieldSchema(field):
     value_type=schema.Choice(values=[]))
 
 
+@interface.implementer_only(se_schema.ITextLineChoice)
 class TextLineMultiChoiceField(TextLineChoiceField):
-    interface.implementsOnly(se_schema.ITextLineChoice)
     component.adapts(schema_ifaces.ISet)
 
     def __init__(self, field):
diff --git a/plone/schemaeditor/utils.py b/plone/schemaeditor/utils.py
index b9085f4..e00260f 100644
--- a/plone/schemaeditor/utils.py
+++ b/plone/schemaeditor/utils.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.interface.interfaces import IInterface
 from zope.component import adapts
 from zope.component.interfaces import ObjectEvent
@@ -43,13 +43,13 @@ def get_field_fieldset(schema, field_name):
         return None
 
 
+@implementer(IEditableSchema)
 class EditableSchema(object):
 
     """ Zope 3 schema adapter to allow addition/removal of schema fields
 
         XXX this needs to be made threadsafe
     """
-    implements(IEditableSchema)
     adapts(IInterface)
 
     def __init__(self, schema):
@@ -151,8 +151,9 @@ def changeFieldFieldset(self, field_name, next_fieldset):
                 current_fieldset.fields.remove(field_name)
 
 
+@implementer(ISchemaModifiedEvent)
 class SchemaModifiedEvent(ObjectEvent):
-    implements(ISchemaModifiedEvent)
+    pass
 
 
 class FieldModifiedEvent(SchemaModifiedEvent):


Repository: plone.schemaeditor


Branch: refs/heads/master
Date: 2016-07-07T01:00:11+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.schemaeditor/commit/e61e752f171412976967342f06f01c8dd3dc2ed2

Merge pull request #38 from plone/gforcada-use-zope-decorators

Use zope.interface decorator

Files changed:
M CHANGES.rst
M plone/schemaeditor/browser/field/edit.py
M plone/schemaeditor/browser/field/traversal.py
M plone/schemaeditor/browser/schema/listing.py
M plone/schemaeditor/browser/schema/traversal.py
M plone/schemaeditor/fields.py
M plone/schemaeditor/utils.py

diff --git a/CHANGES.rst b/CHANGES.rst
index ecc7e5f..5e880f6 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 2.0.10 (2016-06-07)
diff --git a/plone/schemaeditor/browser/field/edit.py b/plone/schemaeditor/browser/field/edit.py
index b760c76..fcd3f54 100644
--- a/plone/schemaeditor/browser/field/edit.py
+++ b/plone/schemaeditor/browser/field/edit.py
@@ -1,6 +1,6 @@
 from Acquisition import aq_parent, aq_inner
 
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 from zope.interface.declarations import ObjectSpecificationDescriptor
 from zope.interface.declarations import getObjectSpecification
 from zope.cachedescriptors.property import Lazy as lazy_property
@@ -37,8 +37,8 @@ class IFieldTitle(Interface):
     )
 
 
+@implementer(IFieldTitle)
 class FieldTitleAdapter(object):
-    implements(IFieldTitle)
     adapts(IField)
 
     def __init__(self, field):
@@ -64,8 +64,8 @@ def __get__(self, inst, cls=None):
             return inst.__provides__
 
 
+@implementer(IFieldProxy)
 class FieldProxy(object):
-    implements(IFieldProxy)
 
     __providedBy__ = FieldProxySpecification()
 
@@ -75,8 +75,8 @@ def __init__(self, context):
         self.__dict__ = context.__dict__
 
 
+@implementer(IDataManager)
 class FieldDataManager(AttributeField):
-    implements(IDataManager)
     adapts(IFieldProxy, IField)
 
     def get(self):
@@ -98,8 +98,8 @@ def set(self, value):
         super(FieldDataManager, self).set(value)
 
 
+@implementer(IFieldEditForm)
 class FieldEditForm(AutoExtensibleForm, form.EditForm):
-    implements(IFieldEditForm)
     id = 'edit-field-form'
 
     def __init__(self, context, request):
diff --git a/plone/schemaeditor/browser/field/traversal.py b/plone/schemaeditor/browser/field/traversal.py
index 3ef197e..2a3c5b0 100644
--- a/plone/schemaeditor/browser/field/traversal.py
+++ b/plone/schemaeditor/browser/field/traversal.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.publisher.interfaces.browser import IBrowserPublisher
 from ZPublisher.BaseRequest import DefaultPublishTraverse
 from OFS.SimpleItem import SimpleItem
@@ -7,11 +7,11 @@
 from plone.schemaeditor.interfaces import IFieldContext
 
 
+@implementer(IFieldContext, IBrowserPublisher)
 class FieldContext(SimpleItem):
 
     """ wrapper for published zope 3 schema fields
     """
-    implements(IFieldContext, IBrowserPublisher)
 
     def __init__(self, context, request):
         super(FieldContext, self).__init__()
diff --git a/plone/schemaeditor/browser/schema/listing.py b/plone/schemaeditor/browser/schema/listing.py
index 3f6783e..748a4c6 100644
--- a/plone/schemaeditor/browser/schema/listing.py
+++ b/plone/schemaeditor/browser/schema/listing.py
@@ -1,6 +1,6 @@
 from zope.component import queryUtility
 from zope.event import notify
-from zope.interface import implements
+from zope.interface import implementer
 from z3c.form import button, form
 from z3c.form.interfaces import IEditForm, DISPLAY_MODE
 
@@ -21,8 +21,8 @@
 
 
 
+@implementer(IEditForm)
 class SchemaListing(AutoExtensibleForm, form.Form):
-    implements(IEditForm)
 
     ignoreContext = True
     ignoreRequest = True
diff --git a/plone/schemaeditor/browser/schema/traversal.py b/plone/schemaeditor/browser/schema/traversal.py
index 18d108a..7ed16e6 100644
--- a/plone/schemaeditor/browser/schema/traversal.py
+++ b/plone/schemaeditor/browser/schema/traversal.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.publisher.interfaces.browser import IBrowserPublisher
 from ZPublisher.BaseRequest import DefaultPublishTraverse
 from OFS.SimpleItem import SimpleItem
@@ -7,14 +7,12 @@
 from plone.schemaeditor.interfaces import ISchemaContext
 
 
+@implementer(ISchemaContext, IBrowserPublisher)
 class SchemaContext(SimpleItem):
 
     """ This is a transient item that allows us to traverse through (a wrapper
         of) a zope 3 schema to (a wrapper of) a zope 3 schema field.
     """
-    # Implementing IBrowserPublisher tells the Zope 2 publish traverser to pay attention
-    # to the publishTraverse and browserDefault methods.
-    implements(ISchemaContext, IBrowserPublisher)
 
     schemaEditorView = None
     additionalSchemata = ()
diff --git a/plone/schemaeditor/fields.py b/plone/schemaeditor/fields.py
index 1d3f706..3f51dce 100644
--- a/plone/schemaeditor/fields.py
+++ b/plone/schemaeditor/fields.py
@@ -5,7 +5,7 @@
 from zope.component import adapter
 from zope.component import getUtilitiesFor
 from zope.globalrequest import getRequest
-from zope.interface import implements
+from zope.interface import implementer
 from zope.i18n import translate
 from zope import schema
 from zope.schema import interfaces as schema_ifaces
@@ -28,8 +28,8 @@ def getFirstFieldSchema(field):
             s.isOrExtends(schema_ifaces.IField)][0]
 
 
+@implementer(IFieldFactory)
 class FieldFactory(object):
-    implements(IFieldFactory)
 
     title = u''
 
@@ -105,8 +105,8 @@ def getChoiceFieldSchema(field):
     values=[])
 
 
+@interface.implementer(se_schema.ITextLineChoice)
 class TextLineChoiceField(object):
-    interface.implements(se_schema.ITextLineChoice)
     component.adapts(schema_ifaces.IChoice)
 
     def __init__(self, field):
@@ -225,8 +225,8 @@ def getMultiChoiceFieldSchema(field):
     value_type=schema.Choice(values=[]))
 
 
+@interface.implementer_only(se_schema.ITextLineChoice)
 class TextLineMultiChoiceField(TextLineChoiceField):
-    interface.implementsOnly(se_schema.ITextLineChoice)
     component.adapts(schema_ifaces.ISet)
 
     def __init__(self, field):
diff --git a/plone/schemaeditor/utils.py b/plone/schemaeditor/utils.py
index b9085f4..e00260f 100644
--- a/plone/schemaeditor/utils.py
+++ b/plone/schemaeditor/utils.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.interface.interfaces import IInterface
 from zope.component import adapts
 from zope.component.interfaces import ObjectEvent
@@ -43,13 +43,13 @@ def get_field_fieldset(schema, field_name):
         return None
 
 
+@implementer(IEditableSchema)
 class EditableSchema(object):
 
     """ Zope 3 schema adapter to allow addition/removal of schema fields
 
         XXX this needs to be made threadsafe
     """
-    implements(IEditableSchema)
     adapts(IInterface)
 
     def __init__(self, schema):
@@ -151,8 +151,9 @@ def changeFieldFieldset(self, field_name, next_fieldset):
                 current_fieldset.fields.remove(field_name)
 
 
+@implementer(ISchemaModifiedEvent)
 class SchemaModifiedEvent(ObjectEvent):
-    implements(ISchemaModifiedEvent)
+    pass
 
 
 class FieldModifiedEvent(SchemaModifiedEvent):


