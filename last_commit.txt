Repository: plone.app.ldap


Branch: refs/heads/master
Date: 2016-07-05T23:12:37+02:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.app.ldap/commit/08565f38f9978f40a00f14acd12679cf7f970b31

Use zope.interface decorator

This not only makes code more pleasent to read,
but also makes the code python 3 compatible
(while maintaining python 2 compatibility).

Files changed:
M CHANGES.rst
M plone/app/ldap/browser/schema.py
M plone/app/ldap/browser/server.py
M plone/app/ldap/engine/schema.py
M plone/app/ldap/engine/server.py
M plone/app/ldap/engine/storage.py
M plone/app/ldap/engine/vocabulary.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 28c7ca4..15a9a2a 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -36,6 +36,8 @@ Fixes:
 - Miscellaneous minor bugfixes and documentation improvements.
   [adaugherity]
 
+- Use zope.interface decorator.
+  [gforcada]
 
 1.3.2 (2015-03-02)
 ------------------
diff --git a/plone/app/ldap/browser/schema.py b/plone/app/ldap/browser/schema.py
index 4949a7e..eefd7c2 100644
--- a/plone/app/ldap/browser/schema.py
+++ b/plone/app/ldap/browser/schema.py
@@ -1,6 +1,6 @@
 from zope.component import adapts
 from zope.component import getUtility
-from zope.interface import implements
+from zope.interface import implementer
 from zope.traversing.interfaces import ITraversable
 from zope.publisher.interfaces.browser import IBrowserRequest
 from zope.formlib.form import FormFields
@@ -16,8 +16,8 @@
 from plone.app.ldap.browser.baseform import Adding
 
 
+@implementer(IPropertyAdding)
 class PropertyAdding(Adding):
-    implements(IPropertyAdding)
 
     def add(self, content):
         """Add the property to the schema
@@ -57,10 +57,10 @@ class PropertyEditForm(LDAPEditForm):
     fieldset = "schema"
 
 
+@implementer(ITraversable)
 class SchemaNamespace(object):
     """LDAP schema traversing.
     """
-    implements(ITraversable)
     adapts(ISiteRoot, IBrowserRequest)
 
     def __init__(self, context, request=None):
diff --git a/plone/app/ldap/browser/server.py b/plone/app/ldap/browser/server.py
index 880bb61..3fc02c8 100644
--- a/plone/app/ldap/browser/server.py
+++ b/plone/app/ldap/browser/server.py
@@ -13,14 +13,14 @@
 from zope.event import notify
 from zope.formlib.form import FormFields
 from zope.formlib.form import applyChanges
-from zope.interface import implements
+from zope.interface import implementer
 from zope.lifecycleevent import ObjectCreatedEvent
 from zope.publisher.interfaces.browser import IBrowserRequest
 from zope.traversing.interfaces import ITraversable
 
 
+@implementer(IServerAdding)
 class ServerAdding(Adding):
-    implements(IServerAdding)
 
     def add(self, content):
         """Add the server to the context
@@ -62,13 +62,13 @@ class ServerEditForm(LDAPEditForm):
     fieldset = "servers"
 
 
+@implementer(ITraversable)
 class ServerNamespace(object):
     """LDAP server traversing.
 
     Traversing to portal/++ldapserver++id will traverse to the ldap server and
     return it in the current context, acquisition-wrapped.
     """
-    implements(ITraversable)
     adapts(ISiteRoot, IBrowserRequest)
 
     def __init__(self, context, request=None):
diff --git a/plone/app/ldap/engine/schema.py b/plone/app/ldap/engine/schema.py
index 694a99a..b6869e0 100644
--- a/plone/app/ldap/engine/schema.py
+++ b/plone/app/ldap/engine/schema.py
@@ -1,10 +1,10 @@
 from OFS.SimpleItem import SimpleItem
-from zope.interface import implements
+from zope.interface import implementer
 from plone.app.ldap.engine.interfaces import ILDAPProperty
 
 
+@implementer(ILDAPProperty)
 class LDAPProperty(SimpleItem):
-    implements(ILDAPProperty)
 
     __name__ = None
     __parent__ = None
diff --git a/plone/app/ldap/engine/server.py b/plone/app/ldap/engine/server.py
index 5ff9696..8d17fe1 100644
--- a/plone/app/ldap/engine/server.py
+++ b/plone/app/ldap/engine/server.py
@@ -1,10 +1,10 @@
 from OFS.SimpleItem import SimpleItem
-from zope.interface import implements
+from zope.interface import implementer
 from plone.app.ldap.engine.interfaces import ILDAPServer
 
 
+@implementer(ILDAPServer)
 class LDAPServer(SimpleItem):
-    implements(ILDAPServer)
 
     __name__ = None
     __parent__ = None
diff --git a/plone/app/ldap/engine/storage.py b/plone/app/ldap/engine/storage.py
index dfe1ea9..4fddc02 100644
--- a/plone/app/ldap/engine/storage.py
+++ b/plone/app/ldap/engine/storage.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.container.ordered import OrderedContainer
 from zope.container.interfaces import INameChooser
 from plone.app.ldap.engine.interfaces import ILDAPServerStorage
@@ -9,8 +9,8 @@
 from plone.app.ldap.engine.schema import LDAPProperty
 
 
+@implementer(ILDAPConfiguration)
 class LDAPConfiguration(OrderedContainer):
-    implements(ILDAPConfiguration)
 
     ldap_type = u"LDAP"
     rdn_attribute = "uid"
@@ -65,13 +65,13 @@ def addItem(self, item):
         self[item_id]=item
 
 
+@implementer(ILDAPServerStorage)
 class LDAPServerStorage(LDAPContainer):
     """A container for LDAP servers.
     """
-    implements(ILDAPServerStorage)
 
 
+@implementer(ILDAPSchema)
 class LDAPSchema(LDAPContainer):
     """A container for LDAP properties.
     """
-    implements(ILDAPSchema)
diff --git a/plone/app/ldap/engine/vocabulary.py b/plone/app/ldap/engine/vocabulary.py
index b03faf9..3e1c288 100644
--- a/plone/app/ldap/engine/vocabulary.py
+++ b/plone/app/ldap/engine/vocabulary.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.schema.vocabulary import SimpleVocabulary
 from zope.schema.vocabulary import SimpleTerm
 from zope.component import getUtility
@@ -8,10 +8,10 @@
 from zope.schema.interfaces import IVocabularyFactory
 
 
+@implementer(IVocabularyFactory)
 class LDAPServerTypeVocabulary(object):
     """Vocabulary factory for LDAP server types.
     """
-    implements(IVocabularyFactory)
 
     def __call__(self, context):
         return SimpleVocabulary([
@@ -22,10 +22,10 @@ def __call__(self, context):
 LDAPServerTypeVocabularyFactory = LDAPServerTypeVocabulary()
 
 
+@implementer(IVocabularyFactory)
 class LDAPConnectionTypeVocabulary(object):
     """Vocabulary factory for LDAP connection types.
     """
-    implements(IVocabularyFactory)
 
     def __call__(self, context):
         return SimpleVocabulary([
@@ -37,10 +37,10 @@ def __call__(self, context):
 LDAPConnectionTypeVocabularyFactory = LDAPConnectionTypeVocabulary()
 
 
+@implementer(IVocabularyFactory)
 class LDAPScopeVocabulary(object):
     """Vocabulary factory for LDAP search scopes.
     """
-    implements(IVocabularyFactory)
 
     def __call__(self, context):
         return SimpleVocabulary([
@@ -51,10 +51,10 @@ def __call__(self, context):
 LDAPScopeVocabularyFactory = LDAPScopeVocabulary()
 
 
+@implementer(IVocabularyFactory)
 class LDAPAttributesVocabulary(object):
     """Vocabulary factory for LDAP attributes.
     """
-    implements(IVocabularyFactory)
 
     def __call__(self, context):
         config=getUtility(ILDAPConfiguration)
@@ -64,10 +64,10 @@ def __call__(self, context):
 LDAPAttributesVocabularyFactory = LDAPAttributesVocabulary()
 
 
+@implementer(IVocabularyFactory)
 class LDAPSingleValueAttributesVocabulary(object):
     """Vocabulary factory for LDAP attributes.
     """
-    implements(IVocabularyFactory)
 
     def __call__(self, context):
         config=getUtility(ILDAPConfiguration)
@@ -78,10 +78,10 @@ def __call__(self, context):
 LDAPSingleValueAttributesVocabularyFactory = LDAPSingleValueAttributesVocabulary()
 
 
+@implementer(IVocabularyFactory)
 class LDAPPasswordEncryptionVocabulary(object):
     """Vocabulary factory for LDAP Password encryption.
     """
-    implements(IVocabularyFactory)
 
     def __call__(self, context):
         return SimpleVocabulary([


Repository: plone.app.ldap


Branch: refs/heads/master
Date: 2016-07-09T08:50:39+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.ldap/commit/c24afe634a6d3764115a2419f659661c246820ab

Merge pull request #31 from plone/gforcada-use-zope-decorators

Use zope.interface decorator

Files changed:
M CHANGES.rst
M plone/app/ldap/browser/schema.py
M plone/app/ldap/browser/server.py
M plone/app/ldap/engine/schema.py
M plone/app/ldap/engine/server.py
M plone/app/ldap/engine/storage.py
M plone/app/ldap/engine/vocabulary.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 28c7ca4..15a9a2a 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -36,6 +36,8 @@ Fixes:
 - Miscellaneous minor bugfixes and documentation improvements.
   [adaugherity]
 
+- Use zope.interface decorator.
+  [gforcada]
 
 1.3.2 (2015-03-02)
 ------------------
diff --git a/plone/app/ldap/browser/schema.py b/plone/app/ldap/browser/schema.py
index 4949a7e..eefd7c2 100644
--- a/plone/app/ldap/browser/schema.py
+++ b/plone/app/ldap/browser/schema.py
@@ -1,6 +1,6 @@
 from zope.component import adapts
 from zope.component import getUtility
-from zope.interface import implements
+from zope.interface import implementer
 from zope.traversing.interfaces import ITraversable
 from zope.publisher.interfaces.browser import IBrowserRequest
 from zope.formlib.form import FormFields
@@ -16,8 +16,8 @@
 from plone.app.ldap.browser.baseform import Adding
 
 
+@implementer(IPropertyAdding)
 class PropertyAdding(Adding):
-    implements(IPropertyAdding)
 
     def add(self, content):
         """Add the property to the schema
@@ -57,10 +57,10 @@ class PropertyEditForm(LDAPEditForm):
     fieldset = "schema"
 
 
+@implementer(ITraversable)
 class SchemaNamespace(object):
     """LDAP schema traversing.
     """
-    implements(ITraversable)
     adapts(ISiteRoot, IBrowserRequest)
 
     def __init__(self, context, request=None):
diff --git a/plone/app/ldap/browser/server.py b/plone/app/ldap/browser/server.py
index 880bb61..3fc02c8 100644
--- a/plone/app/ldap/browser/server.py
+++ b/plone/app/ldap/browser/server.py
@@ -13,14 +13,14 @@
 from zope.event import notify
 from zope.formlib.form import FormFields
 from zope.formlib.form import applyChanges
-from zope.interface import implements
+from zope.interface import implementer
 from zope.lifecycleevent import ObjectCreatedEvent
 from zope.publisher.interfaces.browser import IBrowserRequest
 from zope.traversing.interfaces import ITraversable
 
 
+@implementer(IServerAdding)
 class ServerAdding(Adding):
-    implements(IServerAdding)
 
     def add(self, content):
         """Add the server to the context
@@ -62,13 +62,13 @@ class ServerEditForm(LDAPEditForm):
     fieldset = "servers"
 
 
+@implementer(ITraversable)
 class ServerNamespace(object):
     """LDAP server traversing.
 
     Traversing to portal/++ldapserver++id will traverse to the ldap server and
     return it in the current context, acquisition-wrapped.
     """
-    implements(ITraversable)
     adapts(ISiteRoot, IBrowserRequest)
 
     def __init__(self, context, request=None):
diff --git a/plone/app/ldap/engine/schema.py b/plone/app/ldap/engine/schema.py
index 694a99a..b6869e0 100644
--- a/plone/app/ldap/engine/schema.py
+++ b/plone/app/ldap/engine/schema.py
@@ -1,10 +1,10 @@
 from OFS.SimpleItem import SimpleItem
-from zope.interface import implements
+from zope.interface import implementer
 from plone.app.ldap.engine.interfaces import ILDAPProperty
 
 
+@implementer(ILDAPProperty)
 class LDAPProperty(SimpleItem):
-    implements(ILDAPProperty)
 
     __name__ = None
     __parent__ = None
diff --git a/plone/app/ldap/engine/server.py b/plone/app/ldap/engine/server.py
index 5ff9696..8d17fe1 100644
--- a/plone/app/ldap/engine/server.py
+++ b/plone/app/ldap/engine/server.py
@@ -1,10 +1,10 @@
 from OFS.SimpleItem import SimpleItem
-from zope.interface import implements
+from zope.interface import implementer
 from plone.app.ldap.engine.interfaces import ILDAPServer
 
 
+@implementer(ILDAPServer)
 class LDAPServer(SimpleItem):
-    implements(ILDAPServer)
 
     __name__ = None
     __parent__ = None
diff --git a/plone/app/ldap/engine/storage.py b/plone/app/ldap/engine/storage.py
index dfe1ea9..4fddc02 100644
--- a/plone/app/ldap/engine/storage.py
+++ b/plone/app/ldap/engine/storage.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.container.ordered import OrderedContainer
 from zope.container.interfaces import INameChooser
 from plone.app.ldap.engine.interfaces import ILDAPServerStorage
@@ -9,8 +9,8 @@
 from plone.app.ldap.engine.schema import LDAPProperty
 
 
+@implementer(ILDAPConfiguration)
 class LDAPConfiguration(OrderedContainer):
-    implements(ILDAPConfiguration)
 
     ldap_type = u"LDAP"
     rdn_attribute = "uid"
@@ -65,13 +65,13 @@ def addItem(self, item):
         self[item_id]=item
 
 
+@implementer(ILDAPServerStorage)
 class LDAPServerStorage(LDAPContainer):
     """A container for LDAP servers.
     """
-    implements(ILDAPServerStorage)
 
 
+@implementer(ILDAPSchema)
 class LDAPSchema(LDAPContainer):
     """A container for LDAP properties.
     """
-    implements(ILDAPSchema)
diff --git a/plone/app/ldap/engine/vocabulary.py b/plone/app/ldap/engine/vocabulary.py
index b03faf9..3e1c288 100644
--- a/plone/app/ldap/engine/vocabulary.py
+++ b/plone/app/ldap/engine/vocabulary.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.schema.vocabulary import SimpleVocabulary
 from zope.schema.vocabulary import SimpleTerm
 from zope.component import getUtility
@@ -8,10 +8,10 @@
 from zope.schema.interfaces import IVocabularyFactory
 
 
+@implementer(IVocabularyFactory)
 class LDAPServerTypeVocabulary(object):
     """Vocabulary factory for LDAP server types.
     """
-    implements(IVocabularyFactory)
 
     def __call__(self, context):
         return SimpleVocabulary([
@@ -22,10 +22,10 @@ def __call__(self, context):
 LDAPServerTypeVocabularyFactory = LDAPServerTypeVocabulary()
 
 
+@implementer(IVocabularyFactory)
 class LDAPConnectionTypeVocabulary(object):
     """Vocabulary factory for LDAP connection types.
     """
-    implements(IVocabularyFactory)
 
     def __call__(self, context):
         return SimpleVocabulary([
@@ -37,10 +37,10 @@ def __call__(self, context):
 LDAPConnectionTypeVocabularyFactory = LDAPConnectionTypeVocabulary()
 
 
+@implementer(IVocabularyFactory)
 class LDAPScopeVocabulary(object):
     """Vocabulary factory for LDAP search scopes.
     """
-    implements(IVocabularyFactory)
 
     def __call__(self, context):
         return SimpleVocabulary([
@@ -51,10 +51,10 @@ def __call__(self, context):
 LDAPScopeVocabularyFactory = LDAPScopeVocabulary()
 
 
+@implementer(IVocabularyFactory)
 class LDAPAttributesVocabulary(object):
     """Vocabulary factory for LDAP attributes.
     """
-    implements(IVocabularyFactory)
 
     def __call__(self, context):
         config=getUtility(ILDAPConfiguration)
@@ -64,10 +64,10 @@ def __call__(self, context):
 LDAPAttributesVocabularyFactory = LDAPAttributesVocabulary()
 
 
+@implementer(IVocabularyFactory)
 class LDAPSingleValueAttributesVocabulary(object):
     """Vocabulary factory for LDAP attributes.
     """
-    implements(IVocabularyFactory)
 
     def __call__(self, context):
         config=getUtility(ILDAPConfiguration)
@@ -78,10 +78,10 @@ def __call__(self, context):
 LDAPSingleValueAttributesVocabularyFactory = LDAPSingleValueAttributesVocabulary()
 
 
+@implementer(IVocabularyFactory)
 class LDAPPasswordEncryptionVocabulary(object):
     """Vocabulary factory for LDAP Password encryption.
     """
-    implements(IVocabularyFactory)
 
     def __call__(self, context):
         return SimpleVocabulary([


