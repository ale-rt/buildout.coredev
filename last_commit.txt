Repository: plone.app.event


Branch: refs/heads/master
Date: 2016-05-18T20:39:02+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.event/commit/28a3196272f2f5c854eb99e25a7753748e66be91

Don't validate empty start/end
Don't validate the ``validate_start_end`` invariant, if start or end are ``None``.
This can happen on non-required, default empty start or end fields during editing.

Files changed:
M CHANGES.rst
M plone/app/event/dx/behaviors.py
M plone/app/event/tests/test_dx_behaviors.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 15ac76c..58cf32c 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,9 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Don't validate the ``validate_start_end`` invariant, if start or end are ``None``.
+  This can happen on non-required, default empty start or end fields during editing.
+  [thet]
 
 
 2.0.9 (2016-05-15)
diff --git a/plone/app/event/dx/behaviors.py b/plone/app/event/dx/behaviors.py
index f30c365..755ff67 100644
--- a/plone/app/event/dx/behaviors.py
+++ b/plone/app/event/dx/behaviors.py
@@ -134,8 +134,12 @@ class IEventBasic(model.Schema, IDXEvent):
 
     @invariant
     def validate_start_end(data):
-        # data_postprocessing sets end=start if open_end
-        if data.start > data.end and not data.open_end:
+        if (
+            data.start
+            and data.end
+            and data.start > data.end
+            and not data.open_end
+        ):
             raise StartBeforeEnd(
                 _("error_end_must_be_after_start_date",
                   default=u"End date must be after start date.")
diff --git a/plone/app/event/tests/test_dx_behaviors.py b/plone/app/event/tests/test_dx_behaviors.py
index 3e6c756..c73ceda 100644
--- a/plone/app/event/tests/test_dx_behaviors.py
+++ b/plone/app/event/tests/test_dx_behaviors.py
@@ -444,6 +444,34 @@ def test_validate_invariants_openend(self):
         except:
             self.fail()
 
+    def test_validate_dont_validate_incomplete(self):
+        """Don't validate validate_start_end invariant, if start or end are
+        None.
+        """
+        mock = MockEvent()
+        mock.open_end = False
+
+        mock.start = datetime(2016, 5, 18)
+        mock.end = None
+        try:
+            IEventBasic.validateInvariants(mock)
+        except:
+            self.fail()
+
+        mock.start = None
+        mock.end = datetime(2016, 5, 18)
+        try:
+            IEventBasic.validateInvariants(mock)
+        except:
+            self.fail()
+
+        mock.start = None
+        mock.end = None
+        try:
+            IEventBasic.validateInvariants(mock)
+        except:
+            self.fail()
+
 
 class TestDXAnnotationStorageUpdate(unittest.TestCase):
     """ Unit tests for the Annotation Storage migration


Repository: plone.app.event


Branch: refs/heads/master
Date: 2016-05-23T12:30:37+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.event/commit/6818685956e4c011a7e9c9623ad79468ac63daba

Merge pull request #227 from plone/thet-novalidateempty

Don't validate empty start/end

Files changed:
M CHANGES.rst
M plone/app/event/dx/behaviors.py
M plone/app/event/tests/test_dx_behaviors.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 15ac76c..58cf32c 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,9 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Don't validate the ``validate_start_end`` invariant, if start or end are ``None``.
+  This can happen on non-required, default empty start or end fields during editing.
+  [thet]
 
 
 2.0.9 (2016-05-15)
diff --git a/plone/app/event/dx/behaviors.py b/plone/app/event/dx/behaviors.py
index f30c365..755ff67 100644
--- a/plone/app/event/dx/behaviors.py
+++ b/plone/app/event/dx/behaviors.py
@@ -134,8 +134,12 @@ class IEventBasic(model.Schema, IDXEvent):
 
     @invariant
     def validate_start_end(data):
-        # data_postprocessing sets end=start if open_end
-        if data.start > data.end and not data.open_end:
+        if (
+            data.start
+            and data.end
+            and data.start > data.end
+            and not data.open_end
+        ):
             raise StartBeforeEnd(
                 _("error_end_must_be_after_start_date",
                   default=u"End date must be after start date.")
diff --git a/plone/app/event/tests/test_dx_behaviors.py b/plone/app/event/tests/test_dx_behaviors.py
index 3e6c756..c73ceda 100644
--- a/plone/app/event/tests/test_dx_behaviors.py
+++ b/plone/app/event/tests/test_dx_behaviors.py
@@ -444,6 +444,34 @@ def test_validate_invariants_openend(self):
         except:
             self.fail()
 
+    def test_validate_dont_validate_incomplete(self):
+        """Don't validate validate_start_end invariant, if start or end are
+        None.
+        """
+        mock = MockEvent()
+        mock.open_end = False
+
+        mock.start = datetime(2016, 5, 18)
+        mock.end = None
+        try:
+            IEventBasic.validateInvariants(mock)
+        except:
+            self.fail()
+
+        mock.start = None
+        mock.end = datetime(2016, 5, 18)
+        try:
+            IEventBasic.validateInvariants(mock)
+        except:
+            self.fail()
+
+        mock.start = None
+        mock.end = None
+        try:
+            IEventBasic.validateInvariants(mock)
+        except:
+            self.fail()
+
 
 class TestDXAnnotationStorageUpdate(unittest.TestCase):
     """ Unit tests for the Annotation Storage migration


