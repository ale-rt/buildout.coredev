Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2016-11-04T18:46:32+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.upgrade/commit/3b88a2250874f3cb487d64ed0b744ffc5b978d99

Fixed ConstraintNotSatisfied when default_editor is not allowed.

Files changed:
M CHANGES.rst
M plone/app/upgrade/v50/alphas.py

diff --git a/CHANGES.rst b/CHANGES.rst
index e613929..161ce69 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -43,6 +43,10 @@ New features:
 
 Bug fixes:
 
+- Fixed ConstraintNotSatisfied when default_editor is not allowed.
+  5.0 alpha.
+  [maurits]
+
 - Enabled update from latest 4.3 profile revision.
   Otherwise we would skip a few upgrade steps when migrating to
   Plone 5.  [maurits]
diff --git a/plone/app/upgrade/v50/alphas.py b/plone/app/upgrade/v50/alphas.py
index f7af84d..85aeee0 100644
--- a/plone/app/upgrade/v50/alphas.py
+++ b/plone/app/upgrade/v50/alphas.py
@@ -19,6 +19,7 @@
 from zope.component import getSiteManager
 from zope.component import getUtility
 from zope.component.hooks import getSite
+from zope.schema.interfaces import ConstraintNotSatisfied
 
 
 logger = logging.getLogger('plone.app.upgrade')
@@ -191,8 +192,15 @@ def upgrade_editing_controlpanel_settings(context):
         # settings.available_editors = site_properties.available_editors
 
         # Kupu will not be available as editor in Plone 5. Therefore we just
-        # ignore the setting.
-        if site_properties.default_editor != 'Kupu':
+        # ignore the setting.  But there may be others (like an empty string)
+        # that will give an error too.  So we validate the value.
+        try:
+            IEditingSchema['default_editor'].validate(
+                site_properties.default_editor)
+        except ConstraintNotSatisfied:
+            logger.warn('Ignoring invalid site_properties.default_editor %r.',
+                        site_properties.default_editor)
+        else:
             settings.default_editor = site_properties.default_editor
         settings.lock_on_ttw_edit = get_property(
             site_properties,


Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2016-11-04T18:46:33+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.upgrade/commit/2d58730777dff4eb4b022ffc73c4c583a4f6586e

Fixed AttributeError use_content_negotiation when migrating old language tool.

Not all versions have the same properties available.
Now we only take over existing properties.

Files changed:
M CHANGES.rst
M plone/app/upgrade/v50/betas.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 161ce69..9da1044 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -43,6 +43,12 @@ New features:
 
 Bug fixes:
 
+- Fixed AttributeError ``use_content_negotiation`` when migrating old language tool.
+  Not all versions have the same properties available.
+  Now we only take over existing properties.
+  5.0 beta.
+  [maurits]
+
 - Fixed ConstraintNotSatisfied when default_editor is not allowed.
   5.0 alpha.
   [maurits]
diff --git a/plone/app/upgrade/v50/betas.py b/plone/app/upgrade/v50/betas.py
index c49cc8e..bd031cb 100644
--- a/plone/app/upgrade/v50/betas.py
+++ b/plone/app/upgrade/v50/betas.py
@@ -22,6 +22,23 @@
 
 logger = logging.getLogger('plone.app.upgrade')
 
+# Mapping of old portal_languages option to new language settings option.
+LANGUAGE_OPTION_MAPPING = {
+    # 'old': 'new',
+    'always_show_selector': 'always_show_selector',
+    'authenticated_users_only': 'authenticated_users_only',
+    'display_flags': 'display_flags',
+    'set_cookie_everywhere': 'set_cookie_always',  # different
+    'supported_langs': 'available_languages',  # different
+    'use_cctld_negotiation': 'use_cctld_negotiation',
+    'use_combined_language_codes': 'use_combined_language_codes',
+    'use_content_negotiation': 'use_content_negotiation',
+    'use_cookie_negotiation': 'use_cookie_negotiation',
+    'use_path_negotiation': 'use_path_negotiation',
+    'use_request_negotiation': 'use_request_negotiation',
+    'use_subdomain_negotiation': 'use_subdomain_negotiation',
+}
+
 
 def to50beta1(context):
     """5.0alpha3 -> 5.0beta1"""
@@ -55,23 +72,9 @@ def upgrade_portal_language(context):
     lang_settings.default_language = default_lang
     if hasattr(portal, 'portal_languages'):
         portal_languages = getSite().portal_languages
-        lang_settings.available_languages = portal_languages.supported_langs
-
-        lang_settings.use_combined_language_codes = portal_languages.use_combined_language_codes  # noqa
-        lang_settings.display_flags = portal_languages.display_flags
-
-        lang_settings.use_path_negotiation = portal_languages.use_path_negotiation  # noqa
-        lang_settings.use_content_negotiation = portal_languages.use_content_negotiation  # noqa
-        lang_settings.use_cookie_negotiation = portal_languages.use_cookie_negotiation  # noqa
-        if hasattr(portal_languages, 'set_cookie_everywhere'):
-            lang_settings.set_cookie_always = portal_languages.set_cookie_everywhere  # noqa
-        lang_settings.authenticated_users_only = portal_languages.authenticated_users_only  # noqa
-        lang_settings.use_request_negotiation = portal_languages.use_request_negotiation  # noqa
-        lang_settings.use_cctld_negotiation = portal_languages.use_cctld_negotiation  # noqa
-        lang_settings.use_subdomain_negotiation = portal_languages.use_subdomain_negotiation  # noqa
-        if hasattr(portal_languages, 'always_show_selector'):
-            lang_settings.always_show_selector = portal_languages.always_show_selector  # noqa
-
+        for old, new in LANGUAGE_OPTION_MAPPING.items():
+            if hasattr(portal_languages, old):
+                setattr(lang_settings, new, getattr(portal_languages, old))
         # Remove the old tool
         portal.manage_delObjects('portal_languages')
 


Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2016-11-04T18:46:33+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.upgrade/commit/31fbecdebea6b7f710d9c611d1444ba5a63cd036

Removed outdated TODO about LanguageTool.

The skin is removed in v50/profiles/to_beta1/skins.xml

Files changed:
M plone/app/upgrade/v50/betas.py

diff --git a/plone/app/upgrade/v50/betas.py b/plone/app/upgrade/v50/betas.py
index bd031cb..d3ac232 100644
--- a/plone/app/upgrade/v50/betas.py
+++ b/plone/app/upgrade/v50/betas.py
@@ -78,10 +78,6 @@ def upgrade_portal_language(context):
         # Remove the old tool
         portal.manage_delObjects('portal_languages')
 
-    # TODO: Remove portal skin
-    # <object name="LanguageTool" meta_type="Filesystem Directory View"
-    # directory="Products.PloneLanguageTool:skins/LanguageTool"/>
-
 
 def upgrade_mail_controlpanel_settings(context):
     registry = getUtility(IRegistry)


Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2016-11-04T19:18:55+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.upgrade/commit/108af5664293ac0d3903eee4f1a765e4ed9ed834

Install plone.app.theming in 5.0 alpha.

When it is already installed, upgrade it.

Files changed:
M CHANGES.rst
M plone/app/upgrade/v50/alphas.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 9da1044..7a7bc1d 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -43,6 +43,10 @@ New features:
 
 Bug fixes:
 
+- Install plone.app.theming in 5.0 alpha.
+  When it is already installed, upgrade it.
+  [maurits]
+
 - Fixed AttributeError ``use_content_negotiation`` when migrating old language tool.
   Not all versions have the same properties available.
   Now we only take over existing properties.
diff --git a/plone/app/upgrade/v50/alphas.py b/plone/app/upgrade/v50/alphas.py
index 85aeee0..c375192 100644
--- a/plone/app/upgrade/v50/alphas.py
+++ b/plone/app/upgrade/v50/alphas.py
@@ -8,6 +8,7 @@
 from Products.CMFPlone.interfaces import INavigationSchema
 from Products.CMFPlone.interfaces import ISearchSchema
 from Products.CMFPlone.interfaces import ISiteSchema
+from plone.app.theming.interfaces import IThemeSettings
 from plone.app.upgrade.utils import loadMigrationProfile
 from plone.app.upgrade.utils import get_property
 from plone.app.upgrade.v40.alphas import cleanUpToolRegistry
@@ -70,6 +71,25 @@ def to50alpha1(context):
             qi.installProduct('plonetheme.barceloneta')
 
     upgrade_keyring(context)
+    installOrUpgradePloneAppTheming(context)
+
+
+def installOrUpgradePloneAppTheming(context):
+    """Install plone.app.theming if not installed yet.
+
+    Upgrade it for good measure if it is already installed.
+    """
+    profile_id = 'profile-plone.app.theming:default'
+    portal_setup = getToolByName(context, 'portal_setup')
+    registry = getUtility(IRegistry)
+    try:
+        registry.forInterface(IThemeSettings)
+    except KeyError:
+        # plone.app.theming not yet installed
+        portal_setup.runAllImportStepsFromProfile(profile_id)
+    else:
+        # Might as well upgrade it if needed.
+        portal_setup.upgradeProfile(profile_id)
 
 
 def lowercase_email_login(context):


Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2016-11-04T21:08:52+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/53868e7d15cf3cd26803eec215d7fccf1ffbe41f

Merge pull request #98 from plone/fix-several-50-upgrade-steps

Fix several 50 upgrade steps

Files changed:
M CHANGES.rst
M plone/app/upgrade/v50/alphas.py
M plone/app/upgrade/v50/betas.py

diff --git a/CHANGES.rst b/CHANGES.rst
index e613929..7a7bc1d 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -43,6 +43,20 @@ New features:
 
 Bug fixes:
 
+- Install plone.app.theming in 5.0 alpha.
+  When it is already installed, upgrade it.
+  [maurits]
+
+- Fixed AttributeError ``use_content_negotiation`` when migrating old language tool.
+  Not all versions have the same properties available.
+  Now we only take over existing properties.
+  5.0 beta.
+  [maurits]
+
+- Fixed ConstraintNotSatisfied when default_editor is not allowed.
+  5.0 alpha.
+  [maurits]
+
 - Enabled update from latest 4.3 profile revision.
   Otherwise we would skip a few upgrade steps when migrating to
   Plone 5.  [maurits]
diff --git a/plone/app/upgrade/v50/alphas.py b/plone/app/upgrade/v50/alphas.py
index f7af84d..c375192 100644
--- a/plone/app/upgrade/v50/alphas.py
+++ b/plone/app/upgrade/v50/alphas.py
@@ -8,6 +8,7 @@
 from Products.CMFPlone.interfaces import INavigationSchema
 from Products.CMFPlone.interfaces import ISearchSchema
 from Products.CMFPlone.interfaces import ISiteSchema
+from plone.app.theming.interfaces import IThemeSettings
 from plone.app.upgrade.utils import loadMigrationProfile
 from plone.app.upgrade.utils import get_property
 from plone.app.upgrade.v40.alphas import cleanUpToolRegistry
@@ -19,6 +20,7 @@
 from zope.component import getSiteManager
 from zope.component import getUtility
 from zope.component.hooks import getSite
+from zope.schema.interfaces import ConstraintNotSatisfied
 
 
 logger = logging.getLogger('plone.app.upgrade')
@@ -69,6 +71,25 @@ def to50alpha1(context):
             qi.installProduct('plonetheme.barceloneta')
 
     upgrade_keyring(context)
+    installOrUpgradePloneAppTheming(context)
+
+
+def installOrUpgradePloneAppTheming(context):
+    """Install plone.app.theming if not installed yet.
+
+    Upgrade it for good measure if it is already installed.
+    """
+    profile_id = 'profile-plone.app.theming:default'
+    portal_setup = getToolByName(context, 'portal_setup')
+    registry = getUtility(IRegistry)
+    try:
+        registry.forInterface(IThemeSettings)
+    except KeyError:
+        # plone.app.theming not yet installed
+        portal_setup.runAllImportStepsFromProfile(profile_id)
+    else:
+        # Might as well upgrade it if needed.
+        portal_setup.upgradeProfile(profile_id)
 
 
 def lowercase_email_login(context):
@@ -191,8 +212,15 @@ def upgrade_editing_controlpanel_settings(context):
         # settings.available_editors = site_properties.available_editors
 
         # Kupu will not be available as editor in Plone 5. Therefore we just
-        # ignore the setting.
-        if site_properties.default_editor != 'Kupu':
+        # ignore the setting.  But there may be others (like an empty string)
+        # that will give an error too.  So we validate the value.
+        try:
+            IEditingSchema['default_editor'].validate(
+                site_properties.default_editor)
+        except ConstraintNotSatisfied:
+            logger.warn('Ignoring invalid site_properties.default_editor %r.',
+                        site_properties.default_editor)
+        else:
             settings.default_editor = site_properties.default_editor
         settings.lock_on_ttw_edit = get_property(
             site_properties,
diff --git a/plone/app/upgrade/v50/betas.py b/plone/app/upgrade/v50/betas.py
index c49cc8e..d3ac232 100644
--- a/plone/app/upgrade/v50/betas.py
+++ b/plone/app/upgrade/v50/betas.py
@@ -22,6 +22,23 @@
 
 logger = logging.getLogger('plone.app.upgrade')
 
+# Mapping of old portal_languages option to new language settings option.
+LANGUAGE_OPTION_MAPPING = {
+    # 'old': 'new',
+    'always_show_selector': 'always_show_selector',
+    'authenticated_users_only': 'authenticated_users_only',
+    'display_flags': 'display_flags',
+    'set_cookie_everywhere': 'set_cookie_always',  # different
+    'supported_langs': 'available_languages',  # different
+    'use_cctld_negotiation': 'use_cctld_negotiation',
+    'use_combined_language_codes': 'use_combined_language_codes',
+    'use_content_negotiation': 'use_content_negotiation',
+    'use_cookie_negotiation': 'use_cookie_negotiation',
+    'use_path_negotiation': 'use_path_negotiation',
+    'use_request_negotiation': 'use_request_negotiation',
+    'use_subdomain_negotiation': 'use_subdomain_negotiation',
+}
+
 
 def to50beta1(context):
     """5.0alpha3 -> 5.0beta1"""
@@ -55,30 +72,12 @@ def upgrade_portal_language(context):
     lang_settings.default_language = default_lang
     if hasattr(portal, 'portal_languages'):
         portal_languages = getSite().portal_languages
-        lang_settings.available_languages = portal_languages.supported_langs
-
-        lang_settings.use_combined_language_codes = portal_languages.use_combined_language_codes  # noqa
-        lang_settings.display_flags = portal_languages.display_flags
-
-        lang_settings.use_path_negotiation = portal_languages.use_path_negotiation  # noqa
-        lang_settings.use_content_negotiation = portal_languages.use_content_negotiation  # noqa
-        lang_settings.use_cookie_negotiation = portal_languages.use_cookie_negotiation  # noqa
-        if hasattr(portal_languages, 'set_cookie_everywhere'):
-            lang_settings.set_cookie_always = portal_languages.set_cookie_everywhere  # noqa
-        lang_settings.authenticated_users_only = portal_languages.authenticated_users_only  # noqa
-        lang_settings.use_request_negotiation = portal_languages.use_request_negotiation  # noqa
-        lang_settings.use_cctld_negotiation = portal_languages.use_cctld_negotiation  # noqa
-        lang_settings.use_subdomain_negotiation = portal_languages.use_subdomain_negotiation  # noqa
-        if hasattr(portal_languages, 'always_show_selector'):
-            lang_settings.always_show_selector = portal_languages.always_show_selector  # noqa
-
+        for old, new in LANGUAGE_OPTION_MAPPING.items():
+            if hasattr(portal_languages, old):
+                setattr(lang_settings, new, getattr(portal_languages, old))
         # Remove the old tool
         portal.manage_delObjects('portal_languages')
 
-    # TODO: Remove portal skin
-    # <object name="LanguageTool" meta_type="Filesystem Directory View"
-    # directory="Products.PloneLanguageTool:skins/LanguageTool"/>
-
 
 def upgrade_mail_controlpanel_settings(context):
     registry = getUtility(IRegistry)


