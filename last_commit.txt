Repository: plone.app.jquerytools


Branch: refs/heads/master
Date: 2016-08-24T11:40:34+03:00
Author: Petri Savolainen (petri) <petri.savolainen@koodaamo.fi>
Commit: https://github.com/plone/plone.app.jquerytools/commit/17916590c4da132a16ba45cbeca662b076581d55

support attaching overlay to hover or doubleclick also (implement #11)

Files changed:
M plone/app/jquerytools/browser/overlayhelpers.js

diff --git a/plone/app/jquerytools/browser/overlayhelpers.js b/plone/app/jquerytools/browser/overlayhelpers.js
index 66fdc8c..a166939 100644
--- a/plone/app/jquerytools/browser/overlayhelpers.js
+++ b/plone/app/jquerytools/browser/overlayhelpers.js
@@ -133,12 +133,32 @@ jQuery(function ($) {
                 // and attaching overlay to the target element. That's
                 // so we'll know the dimensions early.
                 // Others, like iframe, just use overlay.
+
+                register_handler = function(evt, o, hnd) {
+                   switch (evt) {
+                      case undefined:
+                         o.click(hnd);
+                         break;
+                      case 'click':
+                         o.click(hnd);
+                         break;
+                      case 'hover':
+                         o.hover(hnd);
+                         break;
+                      case 'dblclick':
+                         o.dblclick(hnd);
+                         break;
+                      default:
+                         throw "Unsupported event";
+                   }
+                }
+
                 switch (pbo.subtype) {
                 case 'image':
-                    o.click(pb.image_click);
+                    register_handler(pbo.event, o, pb.image_click);
                     break;
                 case 'ajax':
-                    o.click(pb.ajax_click);
+                    register_handler(pbo.event, o, pb.ajax_click);
                     break;
                 case 'iframe':
                     pb.create_content_div(pbo);


Repository: plone.app.jquerytools


Branch: refs/heads/master
Date: 2016-10-06T21:53:25+03:00
Author: Petri Savolainen (petri) <petri.savolainen@koodaamo.fi>
Commit: https://github.com/plone/plone.app.jquerytools/commit/29ab6470ee051f42163e9046179817c65c1b43cc

document the new prepOverlay ability to choose the trigger event

Files changed:
M CHANGES.rst
M README.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 948ca44..944275c 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,10 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- An overlay registered by the prepOverlay function can now be optionally be
+  triggered by a hover or doubleclick event, instead of click.
+  [petri]
+
 
 Bug fixes:
 
diff --git a/README.rst b/README.rst
index 7210f72..0e21c6a 100644
--- a/README.rst
+++ b/README.rst
@@ -132,6 +132,20 @@ The code::
              urlreplace: '_preview'
             });
 
+What if you want the lightbox-style larger image to open upon doubleclick or
+hover, instead? Just add a "event" attribute to override the default::
+
+    $('.newsImageContainer a')
+        .prepOverlay({
+             subtype: 'image',
+             urlmatch: '/image_view_fullscreen$',
+             urlreplace: '_preview',
+             event: 'dblclick'
+            });
+
+The optional "event" attribute takes one of three values: either the default
+"click", "dblclick", or "hover".
+
 Another quick example, one that provides full-image popups for images placed
 via kupu::
 


Repository: plone.app.jquerytools


Branch: refs/heads/master
Date: 2016-11-21T18:27:05+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.jquerytools/commit/56fb813a47d7dfaf34e55dfbf3d2005d84d6f473

Merge pull request #12 from plone/configurable-event

support attaching overlay to hover or doubleclick also (implement #11)

Files changed:
M CHANGES.rst
M README.rst
M plone/app/jquerytools/browser/overlayhelpers.js

diff --git a/CHANGES.rst b/CHANGES.rst
index 948ca44..944275c 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,10 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- An overlay registered by the prepOverlay function can now be optionally be
+  triggered by a hover or doubleclick event, instead of click.
+  [petri]
+
 
 Bug fixes:
 
diff --git a/README.rst b/README.rst
index 7210f72..0e21c6a 100644
--- a/README.rst
+++ b/README.rst
@@ -132,6 +132,20 @@ The code::
              urlreplace: '_preview'
             });
 
+What if you want the lightbox-style larger image to open upon doubleclick or
+hover, instead? Just add a "event" attribute to override the default::
+
+    $('.newsImageContainer a')
+        .prepOverlay({
+             subtype: 'image',
+             urlmatch: '/image_view_fullscreen$',
+             urlreplace: '_preview',
+             event: 'dblclick'
+            });
+
+The optional "event" attribute takes one of three values: either the default
+"click", "dblclick", or "hover".
+
 Another quick example, one that provides full-image popups for images placed
 via kupu::
 
diff --git a/plone/app/jquerytools/browser/overlayhelpers.js b/plone/app/jquerytools/browser/overlayhelpers.js
index 66fdc8c..a166939 100644
--- a/plone/app/jquerytools/browser/overlayhelpers.js
+++ b/plone/app/jquerytools/browser/overlayhelpers.js
@@ -133,12 +133,32 @@ jQuery(function ($) {
                 // and attaching overlay to the target element. That's
                 // so we'll know the dimensions early.
                 // Others, like iframe, just use overlay.
+
+                register_handler = function(evt, o, hnd) {
+                   switch (evt) {
+                      case undefined:
+                         o.click(hnd);
+                         break;
+                      case 'click':
+                         o.click(hnd);
+                         break;
+                      case 'hover':
+                         o.hover(hnd);
+                         break;
+                      case 'dblclick':
+                         o.dblclick(hnd);
+                         break;
+                      default:
+                         throw "Unsupported event";
+                   }
+                }
+
                 switch (pbo.subtype) {
                 case 'image':
-                    o.click(pb.image_click);
+                    register_handler(pbo.event, o, pb.image_click);
                     break;
                 case 'ajax':
-                    o.click(pb.ajax_click);
+                    register_handler(pbo.event, o, pb.ajax_click);
                     break;
                 case 'iframe':
                     pb.create_content_div(pbo);


