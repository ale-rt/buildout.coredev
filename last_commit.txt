Repository: plone.app.discussion


Branch: refs/heads/2.x
Date: 2017-11-13T12:19:45+01:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.app.discussion/commit/c5afe0820f44958639bc4746f1876c81c66ca0dd

index/reindex/unindex the object itself

Do not defer to p.a.discussion own tool.

That's needed so that collective.indexing can patch comments,
so in turn can be indexed by Solr.

Files changed:
M plone/app/discussion/subscribers.py
M plone/app/discussion/tool.py

diff --git a/plone/app/discussion/subscribers.py b/plone/app/discussion/subscribers.py
index c3717e53..35571b7e 100644
--- a/plone/app/discussion/subscribers.py
+++ b/plone/app/discussion/subscribers.py
@@ -5,12 +5,10 @@
 def index_object(obj, event):
     """Index the object when it is added/modified to the conversation.
     """
-    catalog = getToolByName(obj, 'portal_catalog')
-    return catalog.reindexObject(obj)
+    obj.indexObject()
 
 
 def unindex_object(obj, event):
     """Unindex the object when it is removed from the conversation.
     """
-    catalog = getToolByName(obj, 'portal_catalog')
-    return catalog.unindexObject(obj)
+    obj.unindexObject(obj)
diff --git a/plone/app/discussion/tool.py b/plone/app/discussion/tool.py
index 902e6a6f..fd271275 100644
--- a/plone/app/discussion/tool.py
+++ b/plone/app/discussion/tool.py
@@ -60,19 +60,3 @@ def searchResults(self, REQUEST=None, **kw):
 
         kw['object_provides'] = object_provides
         return catalog.searchResults(REQUEST, **kw)
-
-
-def index_object(obj, event):
-    """Index the object when added to the conversation
-    """
-    tool = queryUtility(ICommentingTool)
-    if tool is not None:
-        tool.indexObject(obj)
-
-
-def unindex_object(obj, event):
-    """Unindex the object when removed
-    """
-    tool = queryUtility(ICommentingTool)
-    if tool is not None:
-        tool.unindexObject(obj)


Repository: plone.app.discussion


Branch: refs/heads/2.x
Date: 2017-11-13T12:19:50+01:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.app.discussion/commit/4a8be56a45d75cbeb2b42a2bd61f0c4031ca0c06

Specific feitag.de changes

der.freitag is using its own workflow for comments,
the logic to know if a comment is visible or not is based on a
workflow status rather than a permission.

Files changed:
M plone/app/discussion/conversation.py

diff --git a/plone/app/discussion/conversation.py b/plone/app/discussion/conversation.py
index 525a64d5..accf21a3 100644
--- a/plone/app/discussion/conversation.py
+++ b/plone/app/discussion/conversation.py
@@ -25,6 +25,7 @@
 from plone.app.discussion.comment import Comment
 from plone.app.discussion.interfaces import IConversation
 from plone.app.discussion.interfaces import IReplies
+from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone import DISCUSSION_ANNOTATION_KEY as ANNOTATION_KEY
 from Products.CMFPlone.interfaces import IHideFromBreadcrumbs
 from zope.annotation.interfaces import IAnnotatable
@@ -75,9 +76,13 @@ def enabled(self):
         return parent.restrictedTraverse('@@conversation_view').enabled()
 
     def total_comments(self):
+        wft = getToolByName(self, 'portal_workflow')
+        workflow_id = 'freitag_comment_workflow'
+
         public_comments = [
             x for x in self.values()
-            if user_nobody.has_permission('View', x)
+            if wft.getStatusOf(workflow_id, x) and
+            wft.getStatusOf(workflow_id, x)['review_state'] == 'visible'
         ]
         return len(public_comments)
 


Repository: plone.app.discussion


Branch: refs/heads/2.x
Date: 2017-11-13T12:22:14+01:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.app.discussion/commit/18a5158ff70773dabfbcc679533f433538c37b4d

Update CHANGES

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 9fca4279..32f8ef78 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -6,11 +6,14 @@ Changelog
 
 Breaking changes:
 
-- *add item here*
+- Add der Freitag specific logic about how to count public comments.
+  [gforcada]
 
 New features:
 
-- *add item here*
+- Index/reindex/unindex the comment itself, do not defer to ``ICommentingTool``.
+  This way it can be integrated into collective.indexing and Solr.
+  [gforcada]
 
 Bug fixes:
 


