Repository: plone.namedfile


Branch: refs/heads/3.0.x
Date: 2016-08-03T08:15:39-05:00
Author: vangheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.namedfile/commit/634d5a8afd6257d2a28b8604688f8cdb60d5b054

Add Pdata storage

Files changed:
A plone/namedfile/tests/test_storable.py
M CHANGES.rst
M plone/namedfile/storages.py
M plone/namedfile/z3c-blobfile.zcml

diff --git a/CHANGES.rst b/CHANGES.rst
index 05152ad..d11ec18 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Add Pdata storage
+  [vangheem]
 
 Bug fixes:
 
diff --git a/plone/namedfile/storages.py b/plone/namedfile/storages.py
index f3be5ba..880bb2f 100644
--- a/plone/namedfile/storages.py
+++ b/plone/namedfile/storages.py
@@ -1,6 +1,7 @@
 # -*- coding: utf-8 -*-
 # This file was borrowed from z3c.blobfile and is licensed under the terms of
 # the ZPL.
+from OFS.Image import Pdata
 from plone.namedfile.file import FileChunk
 from plone.namedfile.interfaces import IStorage
 from plone.namedfile.interfaces import NotStorable
@@ -77,3 +78,13 @@ def store(self, data, blob):
             fp.write(block)
             block = data.read(MAXCHUNKSIZE)
         fp.close()
+
+
+@implementer(IStorage)
+class PDataStorable(object):
+    def store(self, pdata, blob):
+        if not isinstance(pdata, Pdata):
+            raise NotStorable('Could not store data (not of "Pdata").')
+        fp = blob.open('w')
+        fp.write(str(pdata))
+        fp.close()
diff --git a/plone/namedfile/tests/test_storable.py b/plone/namedfile/tests/test_storable.py
new file mode 100644
index 0000000..a812899
--- /dev/null
+++ b/plone/namedfile/tests/test_storable.py
@@ -0,0 +1,47 @@
+# -*- coding: utf-8 -*-
+# This file was borrowed from z3c.blobfile and is licensed under the terms of
+# the ZPL.
+
+##############################################################################
+#
+# Copyright (c) 2008 Zope Foundation and Contributors.
+# All Rights Reserved.
+#
+# This software is subject to the provisions of the Zope Public License,
+# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED
+# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS
+# FOR A PARTICULAR PURPOSE.
+#
+##############################################################################
+
+from OFS.Image import Pdata
+from plone.namedfile.file import FileChunk
+from plone.namedfile.file import NamedBlobImage
+from plone.namedfile.tests.base import getFile
+from plone.namedfile.tests.base import NamedFileLayer
+
+import unittest
+
+
+class TestStorable(unittest.TestCase):
+
+    layer = NamedFileLayer
+
+    def setUp(self):
+        pass
+
+    def test_pdata_storable(self):
+        pdata = Pdata(getFile('image.gif').read())
+        fi = NamedBlobImage(pdata, filename=u'image.gif')
+        self.assertEqual(303, fi.getSize())
+
+    def test_str_storable(self):
+        fi = NamedBlobImage(getFile('image.gif').read(), filename=u'image.gif')
+        self.assertEqual(303, fi.getSize())
+
+    def test_filechunk_storable(self):
+        fi = NamedBlobImage(FileChunk(getFile('image.gif').read()),
+                            filename=u'image.gif')
+        self.assertEqual(303, fi.getSize())
diff --git a/plone/namedfile/z3c-blobfile.zcml b/plone/namedfile/z3c-blobfile.zcml
index b3083fa..993064e 100644
--- a/plone/namedfile/z3c-blobfile.zcml
+++ b/plone/namedfile/z3c-blobfile.zcml
@@ -30,6 +30,12 @@
       factory=".storages.FileUploadStorable"
       />
 
+  <utility
+      name="OFS.Image.Pdata"
+      provides=".interfaces.IStorage"
+      factory=".storages.PDataStorable"
+      />
+
   <adapter factory=".copy.BlobFileCopyHook" />
 
 </configure>


Repository: plone.namedfile


Branch: refs/heads/3.0.x
Date: 2016-08-25T08:52:46+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.namedfile/commit/c0c37e704d9a5a99383ef2d5c65fb2976f7d88db

Merge pull request #32 from plone/add-pdata-storage

Add Pdata storage

Files changed:
A plone/namedfile/tests/test_storable.py
M CHANGES.rst
M plone/namedfile/storages.py
M plone/namedfile/z3c-blobfile.zcml

diff --git a/CHANGES.rst b/CHANGES.rst
index 05152ad..d11ec18 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Add Pdata storage
+  [vangheem]
 
 Bug fixes:
 
diff --git a/plone/namedfile/storages.py b/plone/namedfile/storages.py
index f3be5ba..880bb2f 100644
--- a/plone/namedfile/storages.py
+++ b/plone/namedfile/storages.py
@@ -1,6 +1,7 @@
 # -*- coding: utf-8 -*-
 # This file was borrowed from z3c.blobfile and is licensed under the terms of
 # the ZPL.
+from OFS.Image import Pdata
 from plone.namedfile.file import FileChunk
 from plone.namedfile.interfaces import IStorage
 from plone.namedfile.interfaces import NotStorable
@@ -77,3 +78,13 @@ def store(self, data, blob):
             fp.write(block)
             block = data.read(MAXCHUNKSIZE)
         fp.close()
+
+
+@implementer(IStorage)
+class PDataStorable(object):
+    def store(self, pdata, blob):
+        if not isinstance(pdata, Pdata):
+            raise NotStorable('Could not store data (not of "Pdata").')
+        fp = blob.open('w')
+        fp.write(str(pdata))
+        fp.close()
diff --git a/plone/namedfile/tests/test_storable.py b/plone/namedfile/tests/test_storable.py
new file mode 100644
index 0000000..a812899
--- /dev/null
+++ b/plone/namedfile/tests/test_storable.py
@@ -0,0 +1,47 @@
+# -*- coding: utf-8 -*-
+# This file was borrowed from z3c.blobfile and is licensed under the terms of
+# the ZPL.
+
+##############################################################################
+#
+# Copyright (c) 2008 Zope Foundation and Contributors.
+# All Rights Reserved.
+#
+# This software is subject to the provisions of the Zope Public License,
+# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED
+# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS
+# FOR A PARTICULAR PURPOSE.
+#
+##############################################################################
+
+from OFS.Image import Pdata
+from plone.namedfile.file import FileChunk
+from plone.namedfile.file import NamedBlobImage
+from plone.namedfile.tests.base import getFile
+from plone.namedfile.tests.base import NamedFileLayer
+
+import unittest
+
+
+class TestStorable(unittest.TestCase):
+
+    layer = NamedFileLayer
+
+    def setUp(self):
+        pass
+
+    def test_pdata_storable(self):
+        pdata = Pdata(getFile('image.gif').read())
+        fi = NamedBlobImage(pdata, filename=u'image.gif')
+        self.assertEqual(303, fi.getSize())
+
+    def test_str_storable(self):
+        fi = NamedBlobImage(getFile('image.gif').read(), filename=u'image.gif')
+        self.assertEqual(303, fi.getSize())
+
+    def test_filechunk_storable(self):
+        fi = NamedBlobImage(FileChunk(getFile('image.gif').read()),
+                            filename=u'image.gif')
+        self.assertEqual(303, fi.getSize())
diff --git a/plone/namedfile/z3c-blobfile.zcml b/plone/namedfile/z3c-blobfile.zcml
index b3083fa..993064e 100644
--- a/plone/namedfile/z3c-blobfile.zcml
+++ b/plone/namedfile/z3c-blobfile.zcml
@@ -30,6 +30,12 @@
       factory=".storages.FileUploadStorable"
       />
 
+  <utility
+      name="OFS.Image.Pdata"
+      provides=".interfaces.IStorage"
+      factory=".storages.PDataStorable"
+      />
+
   <adapter factory=".copy.BlobFileCopyHook" />
 
 </configure>


