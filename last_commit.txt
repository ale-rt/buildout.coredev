Repository: plone.protect


Branch: refs/heads/master
Date: 2016-06-08T02:35:56+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.protect/commit/d6c220701e34a0dced721d7a7cf77cf7530ed8ed

Added protect.js from plone4.csrffixes.

This adds an `X-CSRF-TOKEN` header to ajax requests.

Fixes https://github.com/plone/plone.protect/issues/42

Files changed:
A plone/protect/protect.js
M CHANGES.rst
M plone/protect/auto.py
M plone/protect/configure.zcml

diff --git a/CHANGES.rst b/CHANGES.rst
index d6c1845..db7b2c5 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -6,7 +6,10 @@ Changelog
 
 New:
 
-- *add item here*
+- Added protect.js from plone4.csrffixes.  This adds an ``X-CSRF-TOKEN``
+  header to ajax requests.
+  Fixes https://github.com/plone/plone.protect/issues/42
+  [maurits]
 
 Fixes:
 
diff --git a/plone/protect/auto.py b/plone/protect/auto.py
index 1879b02..80d1650 100644
--- a/plone/protect/auto.py
+++ b/plone/protect/auto.py
@@ -298,4 +298,18 @@ def transform(self, result, encoding):
                 hidden.attrib['value'] = token
                 form.append(hidden)
 
+        if self.site is not None and not root.cssselect('#protect-script'):
+            # Alternative: add this in the resource registry.
+            site_url = self.site.absolute_url()
+            body = root.cssselect('body')[0]
+            protect_script = etree.Element("script")
+            protect_script.attrib.update({
+                'type': "application/javascript",
+                'src': "%s/++resource++protect.js" % site_url,
+                'data-site-url': site_url,
+                'data-token': token,
+                'id': 'protect-script'
+            })
+            body.append(protect_script)
+
         return result
diff --git a/plone/protect/configure.zcml b/plone/protect/configure.zcml
index 22934eb..54212cc 100644
--- a/plone/protect/configure.zcml
+++ b/plone/protect/configure.zcml
@@ -35,6 +35,11 @@
         factory=".auto.ProtectTransform"
         />
 
+    <browser:resource
+        name="protect.js"
+        file="protect.js"
+        />
+
     <browser:page
         name="confirm-action"
         for="Products.CMFPlone.interfaces.IPloneSiteRoot"
@@ -60,4 +65,4 @@
         replacement=".monkey.wl_lockmapping"
         preserveOriginal="True"
         />
-</configure>
\ No newline at end of file
+</configure>
diff --git a/plone/protect/protect.js b/plone/protect/protect.js
new file mode 100644
index 0000000..acd3aed
--- /dev/null
+++ b/plone/protect/protect.js
@@ -0,0 +1,85 @@
+/* jshint undef: true, unused: true */
+/* globals tinymce, jQuery, kukit */
+
+"use strict";
+
+var script = document.getElementById('protect-script');
+
+if(script){
+  var base_url = script.getAttribute('data-site-url');
+  var token = script.getAttribute('data-token');
+
+  if(window.jQuery !== undefined){
+    jQuery.ajaxSetup({
+      beforeSend: function (xhr, options){
+        if(options === undefined){
+          return;
+        }
+        if(!options.url){
+          return;
+        }
+        if(options.url.indexOf('_authenticator') !== -1){
+          return;
+        }
+        if(options.url.indexOf(base_url) === 0 || options.url.indexOf('//') === -1){
+          // only urls that start with the site url
+          // Extra compared to plone4.csrffixes: also for relative urls, like @@my-view.
+          xhr.setRequestHeader("X-CSRF-TOKEN", token);
+        }
+      }
+    });
+  }
+  if(window.tinymce && window.tinymce.util.XHR._send === undefined){
+    window.tinymce.util.XHR._send = window.tinymce.util.XHR.send;
+    var xhr = window.tinymce.util.XHR;
+    var _send = xhr.send;
+    window.tinymce.util.XHR.send = function(){
+      var args = Array.prototype.slice.call(arguments);
+      if(args[0]){
+        var config = args[0];
+        if(config.data && typeof(config.data) === 'string' &&
+            config.url && config.url.indexOf(base_url) === 0){
+          config.data = config.data + '&_authenticator=' + token;
+        }
+      }
+     _send.apply(xhr, args);
+    };
+  }
+  if(window.kukit && window.kukit.sa){
+    kukit.sa.ServerAction.prototype.reallyNotifyServer = function() {
+      // make a deferred callback
+      var domDoc = new XMLHttpRequest();
+      var self = this;
+      var notifyServer_done  = function() {
+          self.notifyServer_done(domDoc);
+      };
+      // convert params
+      var query = new kukit.fo.FormQuery();
+      for (var key in this.oper.parms) {
+          query.appendElem(key, this.oper.parms[key]);
+      }
+      // also add the parms that result from submitting an entire form.
+      // This is, unlike the normal parms, is a list. Keys and values are
+      // added at the end of the query, without mangling names.
+      var submitForm = this.oper.kssParms.kssSubmitForm;
+      if (submitForm) {
+          for (var i=0; i<submitForm.length; i++) {
+              var item = submitForm[i];
+              query.appendElem(item[0], item[1]);
+          }
+      }
+      query.appendElem('_authenticator', token);
+      // encode the query
+      var encoded = query.encode();
+      // sending form
+      var ts = new Date().getTime();
+      //kukit.logDebug('TS: '+ts);
+      var tsurl = this.url + "?kukitTimeStamp=" + ts;
+      domDoc.open("POST", tsurl, true);
+      domDoc.onreadystatechange = notifyServer_done;
+      domDoc.setRequestHeader("Content-Type",
+          "application/x-www-form-urlencoded");
+      domDoc.send(encoded);
+    };
+  }
+}


Repository: plone.protect


Branch: refs/heads/master
Date: 2016-06-10T09:13:01+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.protect/commit/b8c955752abfff248a4108f79297af59fec86fdb

Merge pull request #49 from plone/maurits-add-protect-js

Added protect.js from plone4.csrffixes.

Files changed:
A plone/protect/protect.js
M CHANGES.rst
M plone/protect/auto.py
M plone/protect/configure.zcml

diff --git a/CHANGES.rst b/CHANGES.rst
index d6c1845..db7b2c5 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -6,7 +6,10 @@ Changelog
 
 New:
 
-- *add item here*
+- Added protect.js from plone4.csrffixes.  This adds an ``X-CSRF-TOKEN``
+  header to ajax requests.
+  Fixes https://github.com/plone/plone.protect/issues/42
+  [maurits]
 
 Fixes:
 
diff --git a/plone/protect/auto.py b/plone/protect/auto.py
index 1879b02..80d1650 100644
--- a/plone/protect/auto.py
+++ b/plone/protect/auto.py
@@ -298,4 +298,18 @@ def transform(self, result, encoding):
                 hidden.attrib['value'] = token
                 form.append(hidden)
 
+        if self.site is not None and not root.cssselect('#protect-script'):
+            # Alternative: add this in the resource registry.
+            site_url = self.site.absolute_url()
+            body = root.cssselect('body')[0]
+            protect_script = etree.Element("script")
+            protect_script.attrib.update({
+                'type': "application/javascript",
+                'src': "%s/++resource++protect.js" % site_url,
+                'data-site-url': site_url,
+                'data-token': token,
+                'id': 'protect-script'
+            })
+            body.append(protect_script)
+
         return result
diff --git a/plone/protect/configure.zcml b/plone/protect/configure.zcml
index 22934eb..54212cc 100644
--- a/plone/protect/configure.zcml
+++ b/plone/protect/configure.zcml
@@ -35,6 +35,11 @@
         factory=".auto.ProtectTransform"
         />
 
+    <browser:resource
+        name="protect.js"
+        file="protect.js"
+        />
+
     <browser:page
         name="confirm-action"
         for="Products.CMFPlone.interfaces.IPloneSiteRoot"
@@ -60,4 +65,4 @@
         replacement=".monkey.wl_lockmapping"
         preserveOriginal="True"
         />
-</configure>
\ No newline at end of file
+</configure>
diff --git a/plone/protect/protect.js b/plone/protect/protect.js
new file mode 100644
index 0000000..acd3aed
--- /dev/null
+++ b/plone/protect/protect.js
@@ -0,0 +1,85 @@
+/* jshint undef: true, unused: true */
+/* globals tinymce, jQuery, kukit */
+
+"use strict";
+
+var script = document.getElementById('protect-script');
+
+if(script){
+  var base_url = script.getAttribute('data-site-url');
+  var token = script.getAttribute('data-token');
+
+  if(window.jQuery !== undefined){
+    jQuery.ajaxSetup({
+      beforeSend: function (xhr, options){
+        if(options === undefined){
+          return;
+        }
+        if(!options.url){
+          return;
+        }
+        if(options.url.indexOf('_authenticator') !== -1){
+          return;
+        }
+        if(options.url.indexOf(base_url) === 0 || options.url.indexOf('//') === -1){
+          // only urls that start with the site url
+          // Extra compared to plone4.csrffixes: also for relative urls, like @@my-view.
+          xhr.setRequestHeader("X-CSRF-TOKEN", token);
+        }
+      }
+    });
+  }
+  if(window.tinymce && window.tinymce.util.XHR._send === undefined){
+    window.tinymce.util.XHR._send = window.tinymce.util.XHR.send;
+    var xhr = window.tinymce.util.XHR;
+    var _send = xhr.send;
+    window.tinymce.util.XHR.send = function(){
+      var args = Array.prototype.slice.call(arguments);
+      if(args[0]){
+        var config = args[0];
+        if(config.data && typeof(config.data) === 'string' &&
+            config.url && config.url.indexOf(base_url) === 0){
+          config.data = config.data + '&_authenticator=' + token;
+        }
+      }
+     _send.apply(xhr, args);
+    };
+  }
+  if(window.kukit && window.kukit.sa){
+    kukit.sa.ServerAction.prototype.reallyNotifyServer = function() {
+      // make a deferred callback
+      var domDoc = new XMLHttpRequest();
+      var self = this;
+      var notifyServer_done  = function() {
+          self.notifyServer_done(domDoc);
+      };
+      // convert params
+      var query = new kukit.fo.FormQuery();
+      for (var key in this.oper.parms) {
+          query.appendElem(key, this.oper.parms[key]);
+      }
+      // also add the parms that result from submitting an entire form.
+      // This is, unlike the normal parms, is a list. Keys and values are
+      // added at the end of the query, without mangling names.
+      var submitForm = this.oper.kssParms.kssSubmitForm;
+      if (submitForm) {
+          for (var i=0; i<submitForm.length; i++) {
+              var item = submitForm[i];
+              query.appendElem(item[0], item[1]);
+          }
+      }
+      query.appendElem('_authenticator', token);
+      // encode the query
+      var encoded = query.encode();
+      // sending form
+      var ts = new Date().getTime();
+      //kukit.logDebug('TS: '+ts);
+      var tsurl = this.url + "?kukitTimeStamp=" + ts;
+      domDoc.open("POST", tsurl, true);
+      domDoc.onreadystatechange = notifyServer_done;
+      domDoc.setRequestHeader("Content-Type",
+          "application/x-www-form-urlencoded");
+      domDoc.send(encoded);
+    };
+  }
+}


