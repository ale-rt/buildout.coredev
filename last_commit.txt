Repository: plone.resource


Branch: refs/heads/master
Date: 2016-09-29T10:10:18+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.resource/commit/13fefdcb8bf03b6d1be6ad4fbfa4a36fee25c680

Use mimetypes_registry utility to dertermine mimetype if available.

Files changed:
M CHANGES.rst
M plone/resource/file.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 94dda3d..2b5aa7f 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Use ``mimetypes_registry`` utility to dertermine mimetype if available.
+  [jensens]
 
 Bug fixes:
 
diff --git a/plone/resource/file.py b/plone/resource/file.py
index 3d3e670..09e6704 100644
--- a/plone/resource/file.py
+++ b/plone/resource/file.py
@@ -4,10 +4,11 @@
 from email.utils import formatdate
 from z3c.caching.interfaces import ILastModified
 from zope.component import adapter
-from zope.component import adapts
 from zope.filerepresentation.interfaces import IRawReadFile
 from zope.interface import implementer
 from ZPublisher.Iterators import filestream_iterator
+from zope.component import queryUtility
+
 import datetime
 import mimetypes
 import os
@@ -43,10 +44,15 @@ def __init__(self, parent, request, path, name):
 
     def getContentType(self, default='application/octet-stream'):
         extension = os.path.splitext(self.__name__)[1].lower()
-        return mimetypes.types_map.get(extension, default)
+        mtr = queryUtility('mimetypes_registry')
+        mt = None
+        if mtr:
+            mt = mtr.lookupExtension(extension)
+        if mt is None:
+            mt = mimetypes.types_map.get(extension, default)
+        return mt
 
     def __call__(self, REQUEST=None, RESPONSE=None):
-
         contentType = self.getContentType()
         lastModifiedHeader = formatdate(
             self.lastModifiedTimestamp,
@@ -69,10 +75,10 @@ def __call__(self, REQUEST=None, RESPONSE=None):
 
 
 @implementer(ILastModified)
+@adapter(FilesystemFile)
 class FileLastModified(object):
     """Determine when a file was last modified, for caching purposes
     """
-    adapts(FilesystemFile)
 
     def __init__(self, context):
         self.context = context


Repository: plone.resource


Branch: refs/heads/master
Date: 2016-09-29T12:44:30+02:00
Author: agitator (agitator) <hpeter@agitator.com>
Commit: https://github.com/plone/plone.resource/commit/387911afbb925f3c6d708b45afdc819f7fb6c656

Merge pull request #15 from plone/jensens-use-mtr-if-available

Use mimetypes_registry utility to determine mimetype if available.

Files changed:
M CHANGES.rst
M plone/resource/file.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 94dda3d..2b5aa7f 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Use ``mimetypes_registry`` utility to dertermine mimetype if available.
+  [jensens]
 
 Bug fixes:
 
diff --git a/plone/resource/file.py b/plone/resource/file.py
index 3d3e670..09e6704 100644
--- a/plone/resource/file.py
+++ b/plone/resource/file.py
@@ -4,10 +4,11 @@
 from email.utils import formatdate
 from z3c.caching.interfaces import ILastModified
 from zope.component import adapter
-from zope.component import adapts
 from zope.filerepresentation.interfaces import IRawReadFile
 from zope.interface import implementer
 from ZPublisher.Iterators import filestream_iterator
+from zope.component import queryUtility
+
 import datetime
 import mimetypes
 import os
@@ -43,10 +44,15 @@ def __init__(self, parent, request, path, name):
 
     def getContentType(self, default='application/octet-stream'):
         extension = os.path.splitext(self.__name__)[1].lower()
-        return mimetypes.types_map.get(extension, default)
+        mtr = queryUtility('mimetypes_registry')
+        mt = None
+        if mtr:
+            mt = mtr.lookupExtension(extension)
+        if mt is None:
+            mt = mimetypes.types_map.get(extension, default)
+        return mt
 
     def __call__(self, REQUEST=None, RESPONSE=None):
-
         contentType = self.getContentType()
         lastModifiedHeader = formatdate(
             self.lastModifiedTimestamp,
@@ -69,10 +75,10 @@ def __call__(self, REQUEST=None, RESPONSE=None):
 
 
 @implementer(ILastModified)
+@adapter(FilesystemFile)
 class FileLastModified(object):
     """Determine when a file was last modified, for caching purposes
     """
-    adapts(FilesystemFile)
 
     def __init__(self, context):
         self.context = context


