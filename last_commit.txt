Repository: plone.testing


Branch: refs/heads/4.1.x
Date: 2017-03-04T18:13:46+01:00
Author: Andreas Zeidler (witsch) <az@zitc.de>
Commit: https://github.com/plone/plone.testing/commit/1c4a92fb21a7f07d7f66cdde8ba22b38487b300b

Replace the `ZServer.PubCore` handler with a threadless version suitable for testing.

This allows complete `coverage` reporting, see https://bitbucket.org/ned/coveragepy/issues/244.

Files changed:
M src/plone/testing/z2.py

diff --git a/src/plone/testing/z2.py b/src/plone/testing/z2.py
index bb9e11c..d661ad7 100644
--- a/src/plone/testing/z2.py
+++ b/src/plone/testing/z2.py
@@ -7,6 +7,8 @@
 from zope.schema.vocabulary import getVocabularyRegistry
 from zope.schema.vocabulary import setVocabularyRegistry
 from Zope2.App.schema import Zope2VocabularyRegistry
+from ZPublisher import publish_module
+from ZServer import PubCore
 import contextlib
 import os
 
@@ -933,6 +935,23 @@ def testTearDown(self):
 
 # More advanced functional testing - running ZServer and FTP server
 
+
+def threadlessPubCoreHandler(name, request, response):
+    """ This replaces the `ZServer.PubCore` handler (i.e. the
+        `ZServerPublisher`/`ZRendezvous` loop) with a threadless version
+        suitable for testing.  This allows complete `coverage` reporting,
+        see https://bitbucket.org/ned/coveragepy/issues/244 """
+    try:
+        assert name == 'Zope2'
+        try:
+            publish_module(name, request=request, response=response)
+        finally:
+            response._finish()
+            request = response = None
+    except:
+        pass    # see `ZopeTestCase.threadutils.QuietPublisher`
+
+
 class ZServer(Layer):
     """Start a ZServer that accesses the fixture managed by the
     ``STARTUP`` layer.
@@ -967,6 +986,8 @@ def setUp(self):
 
         self.setUpServer()
 
+        PubCore._handle = threadlessPubCoreHandler
+
         self.thread = Thread(
             name="%s server" % self.__name__,
             target=self.runner,
@@ -982,6 +1003,8 @@ def tearDown(self):
         self.thread.join(self.timeout)
         time.sleep(0.5)
 
+        PubCore._handle = None
+
         self.tearDownServer()
 
         del self['host']


Repository: plone.testing


Branch: refs/heads/4.1.x
Date: 2017-03-04T18:16:21+01:00
Author: Andreas Zeidler (witsch) <az@zitc.de>
Commit: https://github.com/plone/plone.testing/commit/a2232c59e3b71a52009919b52ac30430ade2f061

Update change log.

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index abf57c6..d507df5 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,9 @@ New:
 
 Fixes:
 
-- *add item here*
+- Replace `ZServer.PubCore` handler with a threadless version, which fixes
+  `coverage` reporting.  See https://bitbucket.org/ned/coveragepy/issues/244.
+  [witsch]
 
 
 4.1.1 (2016-02-21)


Repository: plone.testing


Branch: refs/heads/4.1.x
Date: 2017-03-05T09:16:57+01:00
Author: Timo Stollenwerk (tisto) <tisto@users.noreply.github.com>
Commit: https://github.com/plone/plone.testing/commit/3edff56101505cf37aa8d6dee4a4c719dd190350

Merge pull request #28 from witsch/threadless-publisher

Replace `ZServer.PubCore` handler with a threadless version.

Files changed:
M CHANGES.rst
M src/plone/testing/z2.py

diff --git a/CHANGES.rst b/CHANGES.rst
index abf57c6..d507df5 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,9 @@ New:
 
 Fixes:
 
-- *add item here*
+- Replace `ZServer.PubCore` handler with a threadless version, which fixes
+  `coverage` reporting.  See https://bitbucket.org/ned/coveragepy/issues/244.
+  [witsch]
 
 
 4.1.1 (2016-02-21)
diff --git a/src/plone/testing/z2.py b/src/plone/testing/z2.py
index bb9e11c..d661ad7 100644
--- a/src/plone/testing/z2.py
+++ b/src/plone/testing/z2.py
@@ -7,6 +7,8 @@
 from zope.schema.vocabulary import getVocabularyRegistry
 from zope.schema.vocabulary import setVocabularyRegistry
 from Zope2.App.schema import Zope2VocabularyRegistry
+from ZPublisher import publish_module
+from ZServer import PubCore
 import contextlib
 import os
 
@@ -933,6 +935,23 @@ def testTearDown(self):
 
 # More advanced functional testing - running ZServer and FTP server
 
+
+def threadlessPubCoreHandler(name, request, response):
+    """ This replaces the `ZServer.PubCore` handler (i.e. the
+        `ZServerPublisher`/`ZRendezvous` loop) with a threadless version
+        suitable for testing.  This allows complete `coverage` reporting,
+        see https://bitbucket.org/ned/coveragepy/issues/244 """
+    try:
+        assert name == 'Zope2'
+        try:
+            publish_module(name, request=request, response=response)
+        finally:
+            response._finish()
+            request = response = None
+    except:
+        pass    # see `ZopeTestCase.threadutils.QuietPublisher`
+
+
 class ZServer(Layer):
     """Start a ZServer that accesses the fixture managed by the
     ``STARTUP`` layer.
@@ -967,6 +986,8 @@ def setUp(self):
 
         self.setUpServer()
 
+        PubCore._handle = threadlessPubCoreHandler
+
         self.thread = Thread(
             name="%s server" % self.__name__,
             target=self.runner,
@@ -982,6 +1003,8 @@ def tearDown(self):
         self.thread.join(self.timeout)
         time.sleep(0.5)
 
+        PubCore._handle = None
+
         self.tearDownServer()
 
         del self['host']


