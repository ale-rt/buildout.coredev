Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2016-05-05T13:16:17+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.dexterity/commit/452650ca25e0e89d73c0c6a22b439b7a15e05f6e

better documentation for the order_[before|after] directives

Files changed:
M docs/reference/form-schema-hints.rst

diff --git a/docs/reference/form-schema-hints.rst b/docs/reference/form-schema-hints.rst
index 6eb3cf4..e7d290c 100644
--- a/docs/reference/form-schema-hints.rst
+++ b/docs/reference/form-schema-hints.rst
@@ -51,12 +51,19 @@ omitted           Omit one or more fields from forms. Takes a sequence of field
 mode              Set the widget mode for one or more fields.
                   Pass the field name as a key and the string ‘input’, ‘display’ or ‘hidden’ as the value.
 order\_before     Specify that a given field should be rendered before another.
+                  Fields can only be ordered if they are in the same fieldset,
+                  otherwise order directive is ignored.
                   Pass the field name as a key and name of the other field as a value.
                   If the other field is in a supplementary schema (i.e. one from a behavior),
-                  its name will be e.g. “IOtherSchema.otherFieldName”.
-                  Alternatively, pass the string “\*” to put a field first in the form.
+                  its name will be e.g. ``IOtherSchema.other_field_name``.
+                  If the other field is from the same schema,
+                  its name can be abbreviated by a leading dot e.g. ``.other_field_name``.
+                  If the other field is is used without a prefix,
+                  its is looked up from the main schema e.g. ``other_field_name``.
+                  Alternatively, pass the string “\*” to put a field first in the fieldsets form.
 order\_after      The inverse of order\_before(), putting a field after another.
-                  Passing “\*” will put the field at the end of the form.
+                  It works almost similar to ``order_before``,
+                  except  passing “\*” will put the field at the end of the fieldsets form.
 ================= ======================================================================================================
 
 *plone.supermodel.directives* provides these:


Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2016-05-05T13:16:24+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.dexterity/commit/92e9fc0a65aec2326fd1dc2fe5c3abf5a5bb3e06

Merge branch 'master' of git://github.com/plone/plone.app.dexterity

Files changed:
M CHANGES.rst
M docs/advanced/custom-add-and-edit-forms.rst
M docs/reference/fields.rst
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index c4f5d7e..64e5668 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -1,13 +1,25 @@
 Changelog
 =========
 
-2.1.21 (unreleased)
--------------------
+2.2.1 (unreleased)
+------------------
+
+Breaking changes:
 
-Incompatibilities:
+- *add item here*
+
+New features:
 
 - *add item here*
 
+Bug fixes:
+
+- *add item here*
+
+
+2.2.0 (2016-04-28)
+------------------
+
 New:
 
 - Assign short names for all behaviors as supported by plone.behavior.
diff --git a/docs/advanced/custom-add-and-edit-forms.rst b/docs/advanced/custom-add-and-edit-forms.rst
index e7c088c..7a7e673 100644
--- a/docs/advanced/custom-add-and-edit-forms.rst
+++ b/docs/advanced/custom-add-and-edit-forms.rst
@@ -1,5 +1,5 @@
 Custom add and edit forms
-============================
+=========================
 
 **Using `z3c.form`_ to build custom forms**
 
@@ -95,15 +95,18 @@ It is even possible to create new types through the web that re-use existing
 classes and factories.
 
 For this reason, add forms are looked up via a namespace traversal
-adapter alled ``++add++``.
+adapter called ``++add++``.
 You may have noticed this in the URLs to add forms already.
 What actually happens is this:
 
 - Plone renders the :guilabel:`add` menu.
+
   - To do so, it looks, among other places, for actions in the *folder/add* category. This category is provided by the ``portal_types`` tool.
   - The *folder/add* action category is constructed by looking up the ``add_view_expr`` property on the FTIs of all addable types. This is a TALES expression telling the add menu which URL to use.
   - The default ``add_view_expr`` in Dexterity (and CMF 2.2) is ``string:${folder_url}/++add++${fti/getId}``. That is, it uses the ``++add++`` traversal namespace with an argument containing the FTI name.
+
 - A user clicks on an entry in the menu and is taken to a URL like ``/path/to/folder/++add++my.type``.
+
     - The ``++add++`` namespace adapter looks up the FTI with the given name, and gets its ``factory`` property.
     - The ``factory`` property of an FTI gives the name of a particular ``zope.component.interfaces.IFactory`` utility, which is used later to construct an instance of the content object.  Dexterity automatically registers a factory instance for each type, with a name that matches the type name, although it is possible to use an existing factory name in a new type.
       This allows administrators to create new “logical” types that are
@@ -121,10 +124,12 @@ What actually happens is this:
       The fallback is an unnamed adapter from ``(context, request, fti)``.
       The default Dexterity add form is registered as such an adapter,
       specific to the ``IDexterityFTI`` interface.
+
 - The form is rendered like any other ``z3c.form`` form instance,
   and is subject to validation,
   which may cause it to be loaded several times.
 - Eventually, the form is successfully submitted. At this point:
+
     - The standard ``AddForm`` base class will look up the factory from the FTI reference it holds and call it to create an instance.
     - The default Dexterity factory looks at the ``klass`` [*]_ attribute of the FTI to determine the actual content class to use, creates an object and initialises it.
     - The ``portal_type`` attribute of the newly created instance is set to
@@ -207,6 +212,6 @@ and `plone.autoform`_ properties and methods.
 See the `z3c.form`_ documentation on add forms for more details.
 
 
-.. _z3c.form: http://docs.zope.org/z3c.form
+.. _z3c.form: http://pythonhosted.org/z3c.form
 .. _plone.z3cform: http://pypi.python.org/pypi/plone.z3cform
 .. _plone.autoform: http://pypi.python.org/pypi/plone.autoform
diff --git a/docs/reference/fields.rst b/docs/reference/fields.rst
index a8d51d7..45df3d8 100644
--- a/docs/reference/fields.rst
+++ b/docs/reference/fields.rst
@@ -170,10 +170,22 @@ RichText  RichTextValue  Stores a ``RichTextValue``, which encapsulates a raw te
                          and a cached copy of the raw text transformed to the default output MIME type.
 ========= ============== ====================================================================================== ==================
 
+Fields in `plone.schema`_
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+See `plone.schema`_  for more details.
+
+========= ============== ====================================================================================== ==================
+Name      Type           Description                                                                            Properties
+========= ============== ====================================================================================== ==================
+Email     str            A field containing an email address                                                    IField, IMinMaxLen
+========= ============== ====================================================================================== ==================
+
 .. _creating schemata: ../schema-driven-types.html#the-schema
 .. _plone.app.textfield: http://pypi.python.org/pypi/plone.app.textfield
 .. _plone.formwidget.namedfile: http://pypi.python.org/pypi/plone.formwidget.namedfile
 .. _plone.namedfile: http://pypi.python.org/pypi/plone.namedfile
+.. _plone.schema: http://pypi.python.org/pypi/plone.schema
 .. _vocabularies: ../advanced/vocabularies.html
 .. _z3c.relationfield: http://pypi.python.org/pypi/z3c.relationfield
 .. _zope.schema: http://pypi.python.org/pypi/zope.schema
diff --git a/setup.py b/setup.py
index 3f5784f..4234c2b 100644
--- a/setup.py
+++ b/setup.py
@@ -1,6 +1,6 @@
 from setuptools import setup, find_packages
 
-version = '2.1.21.dev0'
+version = '2.2.1.dev0'
 long_description = open("README.rst").read() + "\n" + \
     open("RELEASE_NOTES.rst").read() + "\n" + \
     open("CHANGES.rst").read()


