Repository: plone.portlet.static


Branch: refs/heads/master
Date: 2016-08-21T10:44:48-06:00
Author: Sean Upton (seanupton) <sdupton@gmail.com>
Commit: https://github.com/plone/plone.portlet.static/commit/d153f1a027a7badfaa6098b9704db82de7e2904a

Static portlet forms use AutoExtensibleForm mixin when plone.app.widgets
1.x is installed, with form hints to ensure TinyMCE configuration
matches that generated in plone.app.widgets.

Files changed:
M CHANGES.rst
M plone/portlet/static/static.py

diff --git a/CHANGES.rst b/CHANGES.rst
index fd27c24..e704e29 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -7,7 +7,14 @@ Changelog
 
 New:
 
-- *add item here*
+- Attempt to use AutoExtensibleForm for as base for static portlet forms
+  when Plone 4 site also has recent plone.app.widgets; this should be
+  consistent in portlet with how TinyMCE is configured for Dexterity
+  content.  This approach attempts to harmonize Plone 4 compatibillity
+  work done previously by @thet and @cdw9 -- supporting Plone 4, either
+  with/without plone.app.widgets, and with/without plone.app.contenttypes
+  (provided recent plone.app.widgets is used).
+  [seanupton]
 
 Fixes:
 
diff --git a/plone/portlet/static/static.py b/plone/portlet/static/static.py
index a9635e0..0819c8b 100644
--- a/plone/portlet/static/static.py
+++ b/plone/portlet/static/static.py
@@ -6,6 +6,8 @@
 from plone.app.portlets.portlets import base
 from plone.app.textfield import RichText
 from plone.app.textfield.value import RichTextValue
+from plone.autoform import directives
+from plone.autoform.form import AutoExtensibleForm
 from plone.i18n.normalizer.interfaces import IIDNormalizer
 from plone.portlet.static import PloneMessageFactory as _
 from plone.portlets.interfaces import IPortletDataProvider
@@ -16,15 +18,35 @@
 import re
 
 logger = logging.getLogger('plone.portlet.static')
+WIDGETS_1X = False
 PLONE5 = getFSVersionTuple()[0] >= 5
 
 if PLONE5:
+    from plone.app.z3cform.widget import RichTextFieldWidget
     base_AddForm = base.AddForm
     base_EditForm = base.EditForm
 else:
-    from plone.app.portlets.browser.z3cformhelper import AddForm as base_AddForm  # noqa
-    from plone.app.portlets.browser.z3cformhelper import EditForm as base_EditForm  # noqa
+    # PLONE 4 Support:
+    # Either Plone 4 plus compatible plone.app.widgets, or Plone 4.x without:
+    from plone.app.portlets.browser import z3cformhelper
     from z3c.form import field
+    try:
+        from plone.app.widgets.dx import RichTextFieldWidget  # req >= 1.9.1+
+
+        class base_AddForm(AutoExtensibleForm, z3cformhelper.AddForm):
+            pass
+
+        class base_EditForm(AutoExtensibleForm, z3cformhelper.EditForm):
+            pass
+
+        WIDGETS_1X = True
+    except ImportError:
+        WIDGETS_1X = False
+        base_AddForm = z3cformhelper.AddForm
+        base_EditForm = z3cformhelper.EditForm
+
+
+USE_AUTOFORM = PLONE5 or WIDGETS_1X
 
 
 class IStaticPortlet(IPortletDataProvider):
@@ -41,6 +63,7 @@ class IStaticPortlet(IPortletDataProvider):
         constraint=re.compile("[^\s]").match,
         required=False)
 
+    directives.widget(text=RichTextFieldWidget)
     text = RichText(
         title=_(u"Text"),
         description=_(u"The text to render"),
@@ -173,7 +196,7 @@ class AddForm(base_AddForm):
     zope.formlib which fields to display. The create() method actually
     constructs the assignment that is being added.
     """
-    if PLONE5:
+    if USE_AUTOFORM:
         schema = IStaticPortlet
     else:
         fields = field.Fields(IStaticPortlet)
@@ -194,7 +217,7 @@ class EditForm(base_EditForm):
     This is registered with configure.zcml. The form_fields variable tells
     zope.formlib which fields to display.
     """
-    if PLONE5:
+    if USE_AUTOFORM:
         schema = IStaticPortlet
     else:
         fields = field.Fields(IStaticPortlet)


Repository: plone.portlet.static


Branch: refs/heads/master
Date: 2016-08-23T15:37:39+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.portlet.static/commit/e07d7545ee3117646a2244586080d0014fab98d7

Merge pull request #12 from upiq/master

Use AutoExtensibleForm in both Plone 5 and Plone 4 (when applicable)

Files changed:
M CHANGES.rst
M plone/portlet/static/static.py

diff --git a/CHANGES.rst b/CHANGES.rst
index fd27c24..e704e29 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -7,7 +7,14 @@ Changelog
 
 New:
 
-- *add item here*
+- Attempt to use AutoExtensibleForm for as base for static portlet forms
+  when Plone 4 site also has recent plone.app.widgets; this should be
+  consistent in portlet with how TinyMCE is configured for Dexterity
+  content.  This approach attempts to harmonize Plone 4 compatibillity
+  work done previously by @thet and @cdw9 -- supporting Plone 4, either
+  with/without plone.app.widgets, and with/without plone.app.contenttypes
+  (provided recent plone.app.widgets is used).
+  [seanupton]
 
 Fixes:
 
diff --git a/plone/portlet/static/static.py b/plone/portlet/static/static.py
index a9635e0..0819c8b 100644
--- a/plone/portlet/static/static.py
+++ b/plone/portlet/static/static.py
@@ -6,6 +6,8 @@
 from plone.app.portlets.portlets import base
 from plone.app.textfield import RichText
 from plone.app.textfield.value import RichTextValue
+from plone.autoform import directives
+from plone.autoform.form import AutoExtensibleForm
 from plone.i18n.normalizer.interfaces import IIDNormalizer
 from plone.portlet.static import PloneMessageFactory as _
 from plone.portlets.interfaces import IPortletDataProvider
@@ -16,15 +18,35 @@
 import re
 
 logger = logging.getLogger('plone.portlet.static')
+WIDGETS_1X = False
 PLONE5 = getFSVersionTuple()[0] >= 5
 
 if PLONE5:
+    from plone.app.z3cform.widget import RichTextFieldWidget
     base_AddForm = base.AddForm
     base_EditForm = base.EditForm
 else:
-    from plone.app.portlets.browser.z3cformhelper import AddForm as base_AddForm  # noqa
-    from plone.app.portlets.browser.z3cformhelper import EditForm as base_EditForm  # noqa
+    # PLONE 4 Support:
+    # Either Plone 4 plus compatible plone.app.widgets, or Plone 4.x without:
+    from plone.app.portlets.browser import z3cformhelper
     from z3c.form import field
+    try:
+        from plone.app.widgets.dx import RichTextFieldWidget  # req >= 1.9.1+
+
+        class base_AddForm(AutoExtensibleForm, z3cformhelper.AddForm):
+            pass
+
+        class base_EditForm(AutoExtensibleForm, z3cformhelper.EditForm):
+            pass
+
+        WIDGETS_1X = True
+    except ImportError:
+        WIDGETS_1X = False
+        base_AddForm = z3cformhelper.AddForm
+        base_EditForm = z3cformhelper.EditForm
+
+
+USE_AUTOFORM = PLONE5 or WIDGETS_1X
 
 
 class IStaticPortlet(IPortletDataProvider):
@@ -41,6 +63,7 @@ class IStaticPortlet(IPortletDataProvider):
         constraint=re.compile("[^\s]").match,
         required=False)
 
+    directives.widget(text=RichTextFieldWidget)
     text = RichText(
         title=_(u"Text"),
         description=_(u"The text to render"),
@@ -173,7 +196,7 @@ class AddForm(base_AddForm):
     zope.formlib which fields to display. The create() method actually
     constructs the assignment that is being added.
     """
-    if PLONE5:
+    if USE_AUTOFORM:
         schema = IStaticPortlet
     else:
         fields = field.Fields(IStaticPortlet)
@@ -194,7 +217,7 @@ class EditForm(base_EditForm):
     This is registered with configure.zcml. The form_fields variable tells
     zope.formlib which fields to display.
     """
-    if PLONE5:
+    if USE_AUTOFORM:
         schema = IStaticPortlet
     else:
         fields = field.Fields(IStaticPortlet)


