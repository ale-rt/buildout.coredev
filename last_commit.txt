Repository: Products.CMFDiffTool


Branch: refs/heads/2.1.x
Date: 2016-04-04T15:22:56-07:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/Products.CMFDiffTool/commit/1813578275e6e246571a73404ab44582a38361ef

add inline_diff for FieldDiff

Files changed:
M CHANGES.rst
M Products/CMFDiffTool/FieldDiff.py
M Products/CMFDiffTool/tests/testListDiff.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 2fe23df..7801c91 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 2.1.3 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Add generic `inline_diff` implementation for FieldDiff.
+  [davisagli]
 
 
 2.1.2 (2015-09-28)
diff --git a/Products/CMFDiffTool/FieldDiff.py b/Products/CMFDiffTool/FieldDiff.py
index cb29baa..b044a04 100644
--- a/Products/CMFDiffTool/FieldDiff.py
+++ b/Products/CMFDiffTool/FieldDiff.py
@@ -1,13 +1,21 @@
 # -*- coding: utf-8 -*-
 import difflib
 from App.class_init import InitializeClass
+from os import linesep
 from Products.CMFDiffTool.BaseDiff import BaseDiff, _getValue
 
+
 class FieldDiff(BaseDiff):
     """Text difference"""
 
     meta_type = "Field Diff"
 
+    same_fmt = """<div class="%s">%s</div>"""
+    inlinediff_fmt = """<div class="%s">
+    <div class="diff_sub">%s</div>
+    <div class="diff_add">%s</div>
+</div>"""
+
     def _parseField(self, value, filename=None):
         """Parse a field value in preparation for diffing"""
         if filename is None:
@@ -56,6 +64,33 @@ def ndiff(self):
                 raise ValueError, 'unknown tag ' + `tag`
         return '\n'.join(r)
 
+    def inline_diff(self):
+        css_class = 'InlineDiff'
+        inlinediff_fmt = self.inlinediff_fmt
+        same_fmt = self.same_fmt
+        r=[]
+        a = self._parseField(self.oldValue, filename=self.oldFilename)
+        b = self._parseField(self.newValue, filename=self.newFilename)
+        for tag, alo, ahi, blo, bhi in self.getLineDiffs():
+            if tag == 'replace':
+                for i in xrange(alo, ahi):
+                    r.append(inlinediff_fmt % (css_class, a[i], ''))
+                for i in xrange(blo, bhi):
+                    r.append(inlinediff_fmt % (css_class, '', b[i]))
+            elif tag == 'delete':
+                for i in xrange(alo, ahi):
+                    r.append(inlinediff_fmt % (css_class, a[i], ''))
+            elif tag == 'insert':
+                for i in xrange(blo, bhi):
+                    r.append(inlinediff_fmt % (css_class, '', b[i]))
+            elif tag == 'equal':
+                for i in xrange(alo, ahi):
+                    r.append(same_fmt % (css_class, a[i]))
+            else:
+                raise ValueError('unknown tag ' + `tag`)
+        return '\n'.join(r)
+
+
 InitializeClass(FieldDiff)
 
 
diff --git a/Products/CMFDiffTool/tests/testListDiff.py b/Products/CMFDiffTool/tests/testListDiff.py
index bf26a99..6fc25f3 100644
--- a/Products/CMFDiffTool/tests/testListDiff.py
+++ b/Products/CMFDiffTool/tests/testListDiff.py
@@ -66,7 +66,18 @@ def testDiffText(self):
         diff = ListDiff(a, b, 'attribute')
         self.assertEqual(diff.ndiff(), expected)
 
-        # FIXME: need tests for other kinds of diffs
+    def test_inline_diff(self):
+        a = A()
+        b = B()
+        expected = """<div class="InlineDiff">1</div>
+<div class="InlineDiff">2</div>
+<div class="InlineDiff">3</div>
+<div class="InlineDiff">
+    <div class="diff_sub"></div>
+    <div class="diff_add">4</div>
+</div>"""
+        diff = ListDiff(a, b, 'attribute')
+        self.assertEqual(diff.inline_diff(), expected)
 
 
 def test_suite():
@@ -74,4 +85,3 @@ def test_suite():
     suite = unittest.TestSuite()
     suite.addTest(unittest.makeSuite(TestListDiff))
     return suite
-


Repository: Products.CMFDiffTool


Branch: refs/heads/2.1.x
Date: 2016-04-05T11:19:28+02:00
Author: Eric BREHAULT (ebrehault) <ebrehault@gmail.com>
Commit: https://github.com/plone/Products.CMFDiffTool/commit/e0d36e48e4f85d3b0bea0221e1880d150820b603

Merge pull request #16 from plone/davisagli-inline-diff

add inline_diff for FieldDiff

Files changed:
M CHANGES.rst
M Products/CMFDiffTool/FieldDiff.py
M Products/CMFDiffTool/tests/testListDiff.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 2fe23df..7801c91 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,8 @@ Changelog
 2.1.3 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Add generic `inline_diff` implementation for FieldDiff.
+  [davisagli]
 
 
 2.1.2 (2015-09-28)
diff --git a/Products/CMFDiffTool/FieldDiff.py b/Products/CMFDiffTool/FieldDiff.py
index cb29baa..b044a04 100644
--- a/Products/CMFDiffTool/FieldDiff.py
+++ b/Products/CMFDiffTool/FieldDiff.py
@@ -1,13 +1,21 @@
 # -*- coding: utf-8 -*-
 import difflib
 from App.class_init import InitializeClass
+from os import linesep
 from Products.CMFDiffTool.BaseDiff import BaseDiff, _getValue
 
+
 class FieldDiff(BaseDiff):
     """Text difference"""
 
     meta_type = "Field Diff"
 
+    same_fmt = """<div class="%s">%s</div>"""
+    inlinediff_fmt = """<div class="%s">
+    <div class="diff_sub">%s</div>
+    <div class="diff_add">%s</div>
+</div>"""
+
     def _parseField(self, value, filename=None):
         """Parse a field value in preparation for diffing"""
         if filename is None:
@@ -56,6 +64,33 @@ def ndiff(self):
                 raise ValueError, 'unknown tag ' + `tag`
         return '\n'.join(r)
 
+    def inline_diff(self):
+        css_class = 'InlineDiff'
+        inlinediff_fmt = self.inlinediff_fmt
+        same_fmt = self.same_fmt
+        r=[]
+        a = self._parseField(self.oldValue, filename=self.oldFilename)
+        b = self._parseField(self.newValue, filename=self.newFilename)
+        for tag, alo, ahi, blo, bhi in self.getLineDiffs():
+            if tag == 'replace':
+                for i in xrange(alo, ahi):
+                    r.append(inlinediff_fmt % (css_class, a[i], ''))
+                for i in xrange(blo, bhi):
+                    r.append(inlinediff_fmt % (css_class, '', b[i]))
+            elif tag == 'delete':
+                for i in xrange(alo, ahi):
+                    r.append(inlinediff_fmt % (css_class, a[i], ''))
+            elif tag == 'insert':
+                for i in xrange(blo, bhi):
+                    r.append(inlinediff_fmt % (css_class, '', b[i]))
+            elif tag == 'equal':
+                for i in xrange(alo, ahi):
+                    r.append(same_fmt % (css_class, a[i]))
+            else:
+                raise ValueError('unknown tag ' + `tag`)
+        return '\n'.join(r)
+
+
 InitializeClass(FieldDiff)
 
 
diff --git a/Products/CMFDiffTool/tests/testListDiff.py b/Products/CMFDiffTool/tests/testListDiff.py
index bf26a99..6fc25f3 100644
--- a/Products/CMFDiffTool/tests/testListDiff.py
+++ b/Products/CMFDiffTool/tests/testListDiff.py
@@ -66,7 +66,18 @@ def testDiffText(self):
         diff = ListDiff(a, b, 'attribute')
         self.assertEqual(diff.ndiff(), expected)
 
-        # FIXME: need tests for other kinds of diffs
+    def test_inline_diff(self):
+        a = A()
+        b = B()
+        expected = """<div class="InlineDiff">1</div>
+<div class="InlineDiff">2</div>
+<div class="InlineDiff">3</div>
+<div class="InlineDiff">
+    <div class="diff_sub"></div>
+    <div class="diff_add">4</div>
+</div>"""
+        diff = ListDiff(a, b, 'attribute')
+        self.assertEqual(diff.inline_diff(), expected)
 
 
 def test_suite():
@@ -74,4 +85,3 @@ def test_suite():
     suite = unittest.TestSuite()
     suite.addTest(unittest.makeSuite(TestListDiff))
     return suite
-


