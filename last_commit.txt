Repository: plone.app.controlpanel


Branch: refs/heads/2.3.x
Date: 2016-09-12T16:52:28-03:00
Author: Rodrigo Ferreira de Souza (rodfersou) <rodfersou@gmail.com>
Commit: https://github.com/plone/plone.app.controlpanel/commit/f6f88a53c0032616e6908f5589dae593b7a25965

Added options to change default search order

Files changed:
M CHANGES.rst
M plone/app/controlpanel/search.py
M plone/app/controlpanel/tests/search.txt

diff --git a/CHANGES.rst b/CHANGES.rst
index 010a1b6..f537699 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Added options to change default search order.
+  [rodfersou]
 
 Bug fixes:
 
diff --git a/plone/app/controlpanel/search.py b/plone/app/controlpanel/search.py
index 649e7d0..bd9a4ce 100644
--- a/plone/app/controlpanel/search.py
+++ b/plone/app/controlpanel/search.py
@@ -27,6 +27,12 @@
 
 AnonAuthVocabulary = SimpleVocabulary(anon_auth_terms)
 
+SortSearchResultsVocabulary = SimpleVocabulary(
+    [SimpleTerm(value=u'relevance', title=_(u'relevance')),
+     SimpleTerm(value=u'Date', title=_(u'date (newest first)')),
+     SimpleTerm(value=u'sortable_title', title=_(u'alphabetically'))])
+
+
 class IBaseSearchSchema(Interface):
 
     enable_livesearch = Bool(
@@ -50,6 +56,14 @@ class IBaseSearchSchema(Interface):
             vocabulary="plone.app.vocabularies.ReallyUserFriendlyTypes")
         )
 
+    sort_on = Choice(
+        title=_(u'label_sort_on', default=u'Sort on'),
+        description=_(u'Sort the default search on this index'),
+        vocabulary=SortSearchResultsVocabulary,
+        default=u'relevance',
+        required=True
+    )
+
 
 class ISearchSchema(IBaseSearchSchema):
     ''' Base search form options '''
@@ -97,6 +111,14 @@ def set_types_not_searched(self, value):
     types_not_searched = property(get_types_not_searched,
                                   set_types_not_searched)
 
+    @property
+    def sort_on(self):
+        return self.context.sort_on
+
+    @sort_on.setter
+    def sort_on(self, value):
+        self.context._updateProperty('sort_on', value)
+
 
 searchset = FormFieldsets(IBaseSearchSchema)
 searchset.id = 'search'
diff --git a/plone/app/controlpanel/tests/search.txt b/plone/app/controlpanel/tests/search.txt
index 3b3cf72..6a32c30 100644
--- a/plone/app/controlpanel/tests/search.txt
+++ b/plone/app/controlpanel/tests/search.txt
@@ -46,6 +46,7 @@ Make some changes
     >>> self.browser.getControl(name='form.enable_livesearch').value = False
     >>> self.browser.getControl(name='form.types_not_searched').value = \
     ...     ['Event', 'Document']
+    >>> self.browser.getControl(name='form.sort_on').value = ['Date']
     
 
 Click the save button:
@@ -76,6 +77,9 @@ Make sure the changes have been applied correctly to the tool:
     >>> 'File' in self.site_props.types_not_searched
     True
 
+    >>> self.site_props.sort_on
+    u'Date'
+
 So called 'bad types' are not listed in the search panel, but they
 should still be listed in the site_properties as not searchable:
 


Repository: plone.app.controlpanel


Branch: refs/heads/2.3.x
Date: 2016-10-07T15:36:25+02:00
Author: agitator (agitator) <hpeter@agitator.com>
Commit: https://github.com/plone/plone.app.controlpanel/commit/86978e360514c98ce46286a741c35efbf9148395

Merge pull request #63 from plone/issue_1600

Issue 1600 - Plone 4.3.x - Added options to change default search order

Files changed:
M CHANGES.rst
M plone/app/controlpanel/search.py
M plone/app/controlpanel/tests/search.txt

diff --git a/CHANGES.rst b/CHANGES.rst
index 010a1b6..f537699 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Added options to change default search order.
+  [rodfersou]
 
 Bug fixes:
 
diff --git a/plone/app/controlpanel/search.py b/plone/app/controlpanel/search.py
index 649e7d0..bd9a4ce 100644
--- a/plone/app/controlpanel/search.py
+++ b/plone/app/controlpanel/search.py
@@ -27,6 +27,12 @@
 
 AnonAuthVocabulary = SimpleVocabulary(anon_auth_terms)
 
+SortSearchResultsVocabulary = SimpleVocabulary(
+    [SimpleTerm(value=u'relevance', title=_(u'relevance')),
+     SimpleTerm(value=u'Date', title=_(u'date (newest first)')),
+     SimpleTerm(value=u'sortable_title', title=_(u'alphabetically'))])
+
+
 class IBaseSearchSchema(Interface):
 
     enable_livesearch = Bool(
@@ -50,6 +56,14 @@ class IBaseSearchSchema(Interface):
             vocabulary="plone.app.vocabularies.ReallyUserFriendlyTypes")
         )
 
+    sort_on = Choice(
+        title=_(u'label_sort_on', default=u'Sort on'),
+        description=_(u'Sort the default search on this index'),
+        vocabulary=SortSearchResultsVocabulary,
+        default=u'relevance',
+        required=True
+    )
+
 
 class ISearchSchema(IBaseSearchSchema):
     ''' Base search form options '''
@@ -97,6 +111,14 @@ def set_types_not_searched(self, value):
     types_not_searched = property(get_types_not_searched,
                                   set_types_not_searched)
 
+    @property
+    def sort_on(self):
+        return self.context.sort_on
+
+    @sort_on.setter
+    def sort_on(self, value):
+        self.context._updateProperty('sort_on', value)
+
 
 searchset = FormFieldsets(IBaseSearchSchema)
 searchset.id = 'search'
diff --git a/plone/app/controlpanel/tests/search.txt b/plone/app/controlpanel/tests/search.txt
index 3b3cf72..6a32c30 100644
--- a/plone/app/controlpanel/tests/search.txt
+++ b/plone/app/controlpanel/tests/search.txt
@@ -46,6 +46,7 @@ Make some changes
     >>> self.browser.getControl(name='form.enable_livesearch').value = False
     >>> self.browser.getControl(name='form.types_not_searched').value = \
     ...     ['Event', 'Document']
+    >>> self.browser.getControl(name='form.sort_on').value = ['Date']
     
 
 Click the save button:
@@ -76,6 +77,9 @@ Make sure the changes have been applied correctly to the tool:
     >>> 'File' in self.site_props.types_not_searched
     True
 
+    >>> self.site_props.sort_on
+    u'Date'
+
 So called 'bad types' are not listed in the search panel, but they
 should still be listed in the site_properties as not searchable:
 


