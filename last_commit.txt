Repository: Products.validation


Branch: refs/heads/master
Date: 2016-07-05T23:20:30+02:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/Products.validation/commit/38674e47ce91b26bf8bfa25c19af83a41f1da8c7

Use zope.interface decorator

This not only makes code more pleasent to read,
but also makes the code python 3 compatible
(while maintaining python 2 compatibility).

Files changed:
M CHANGES.txt
M Products/validation/chain.py
M Products/validation/service.py
M Products/validation/validators/EmptyValidator.py
M Products/validation/validators/ExpressionValidator.py
M Products/validation/validators/IdValidator.py
M Products/validation/validators/RangeValidator.py
M Products/validation/validators/RegexValidator.py
M Products/validation/validators/SupplValidators.py

diff --git a/CHANGES.txt b/CHANGES.txt
index 736863d..2fb9cdf 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -4,8 +4,8 @@ Changelog
 2.0.2 (unreleased)
 ------------------
 
-- Nothing changed yet.
-
+- Use zope.interface decorator.
+  [gforcada]
 
 2.0.1 (2015-02-23)
 ------------------
@@ -284,4 +284,3 @@ post 1.3.4-final02 (2006-01-15)
 --------------------
 
 - Nothing changed
-
diff --git a/Products/validation/chain.py b/Products/validation/chain.py
index f616a03..966359a 100644
--- a/Products/validation/chain.py
+++ b/Products/validation/chain.py
@@ -1,5 +1,5 @@
 from Products.validation.interfaces.IValidator import IValidationChain
-from zope.interface import implements
+from zope.interface import implementer
 
 from types import TupleType, ListType
 from config import validation as validationService
@@ -9,10 +9,10 @@
 V_SUFFICIENT = 2
 
 
+@implementer(IValidationChain)
 class ValidationChain:
     """
     """
-    implements(IValidationChain)
 
     def __init__(self, name, title='', description='', validators=(),
                  register=False):
diff --git a/Products/validation/service.py b/Products/validation/service.py
index 4a5e35e..eb86f18 100644
--- a/Products/validation/service.py
+++ b/Products/validation/service.py
@@ -1,12 +1,12 @@
 from Products.validation.interfaces.IValidationService import IValidationService
 from Products.validation.interfaces.IValidator import IValidator
-from zope.interface import implements
+from zope.interface import implementer
 
 from exceptions import UnknowValidatorError, FalseValidatorError, AlreadyRegisteredValidatorError
 from types import StringType, StringTypes
 
+@implementer(IValidationService)
 class Service:
-    implements(IValidationService)
 
     def __init__(self):
         self._validator = {}
diff --git a/Products/validation/validators/EmptyValidator.py b/Products/validation/validators/EmptyValidator.py
index 983f11e..681b68e 100644
--- a/Products/validation/validators/EmptyValidator.py
+++ b/Products/validation/validators/EmptyValidator.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 from Products.validation.i18n import PloneMessageFactory as _
 from Products.validation.i18n import recursiveTranslate
 from Products.validation.i18n import safe_unicode
@@ -7,8 +7,8 @@
 _marker = []
 
 
+@implementer(IValidator)
 class EmptyValidator:
-    implements(IValidator)
 
     def __init__(self, name, title='', description='', showError=True):
         self.name = name
diff --git a/Products/validation/validators/ExpressionValidator.py b/Products/validation/validators/ExpressionValidator.py
index 7ff9f6a..ad45b45 100644
--- a/Products/validation/validators/ExpressionValidator.py
+++ b/Products/validation/validators/ExpressionValidator.py
@@ -27,9 +27,10 @@
 from Products.validation.i18n import recursiveTranslate
 from Products.validation.i18n import safe_unicode
 from Products.PageTemplates.Expressions import getEngine
-from zope.interface import implements
+from zope.interface import implementer
 from zope.i18nmessageid import Message
 
+@implementer(IValidator)
 class ExpressionValidator:
     """ Validator for TALES Expressions
 
@@ -57,8 +58,6 @@ class ExpressionValidator:
 
     """
 
-    implements(IValidator)
-
     name = 'talesexpressionvalidator'
 
     def __init__(self,expression=None,errormsg=None):
diff --git a/Products/validation/validators/IdValidator.py b/Products/validation/validators/IdValidator.py
index 4396afa..f98181d 100644
--- a/Products/validation/validators/IdValidator.py
+++ b/Products/validation/validators/IdValidator.py
@@ -5,14 +5,14 @@
 from zExceptions import BadRequest
 from OFS import ObjectManager
 from Products.validation.interfaces.IValidator import IValidator
-from zope.interface import implements
+from zope.interface import implementer
 from Products.validation.i18n import PloneMessageFactory as _
 from Products.validation.i18n import recursiveTranslate
 from Products.validation.i18n import safe_unicode
 
 
+@implementer(IValidator)
 class IdValidator:
-    implements(IValidator)
 
     def __init__( self, name, title='', description=''):
         self.name = name
diff --git a/Products/validation/validators/RangeValidator.py b/Products/validation/validators/RangeValidator.py
index 79a7f61..262ffbf 100644
--- a/Products/validation/validators/RangeValidator.py
+++ b/Products/validation/validators/RangeValidator.py
@@ -1,11 +1,11 @@
 from Products.validation.interfaces.IValidator import IValidator
-from zope.interface import implements
+from zope.interface import implementer
 from Products.validation.i18n import PloneMessageFactory as _
 from Products.validation.i18n import recursiveTranslate
 from Products.validation.i18n import safe_unicode
 
+@implementer(IValidator)
 class RangeValidator:
-    implements(IValidator)
 
     def __init__(self, name, minval=0.0, maxval=0.0, title='', description=''):
         self.name = name
diff --git a/Products/validation/validators/RegexValidator.py b/Products/validation/validators/RegexValidator.py
index 952f5ab..148e6f7 100644
--- a/Products/validation/validators/RegexValidator.py
+++ b/Products/validation/validators/RegexValidator.py
@@ -1,5 +1,5 @@
 from Products.validation.interfaces.IValidator import IValidator
-from zope.interface import implements
+from zope.interface import implementer
 from Products.validation.i18n import PloneMessageFactory as _
 from Products.validation.i18n import recursiveTranslate
 from Products.validation.i18n import safe_unicode
@@ -10,8 +10,8 @@ def ignoreRE(value, expression):
     ignore = re.compile(expression)
     return ignore.sub('', value)
 
+@implementer(IValidator)
 class RegexValidator:
-    implements(IValidator)
 
     def __init__(self, name, *args, **kw):
         self.name = name
diff --git a/Products/validation/validators/SupplValidators.py b/Products/validation/validators/SupplValidators.py
index c8324ff..dce96d2 100644
--- a/Products/validation/validators/SupplValidators.py
+++ b/Products/validation/validators/SupplValidators.py
@@ -3,7 +3,7 @@
 from ZPublisher.HTTPRequest import FileUpload
 
 from Products.validation.interfaces.IValidator import IValidator
-from zope.interface import implements
+from zope.interface import implementer
 from Products.validation.i18n import PloneMessageFactory as _
 from Products.validation.i18n import recursiveTranslate
 from Products.validation.i18n import safe_unicode
@@ -11,6 +11,7 @@
 _marker = []
 
 
+@implementer(IValidator)
 class MaxSizeValidator:
     """Tests if an upload, file or something supporting len() is smaller than a
        given max size value
@@ -23,7 +24,6 @@ class MaxSizeValidator:
     getMaxSizeFor(fieldname) on the instance, a maxsize attribute on the field
     or a given maxsize at validator initialization.
     """
-    implements(IValidator)
 
     def __init__(self, name, title='', description='', maxsize=0):
         self.name = name
@@ -75,10 +75,9 @@ def __call__(self, value, *args, **kwargs):
             return True
 
 
+@implementer(IValidator)
 class DateValidator:
 
-    implements(IValidator)
-
     def __init__(self, name, title='', description=''):
         self.name = name
         self.title = title or name


Repository: Products.validation


Branch: refs/heads/master
Date: 2016-07-06T09:22:18+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.validation/commit/ba892ecb8ae831b5ef3801e7c55057f0fcf8d394

Merge pull request #2 from plone/gforcada-use-zope-decorators

Use zope.interface decorator

Files changed:
M CHANGES.txt
M Products/validation/chain.py
M Products/validation/service.py
M Products/validation/validators/EmptyValidator.py
M Products/validation/validators/ExpressionValidator.py
M Products/validation/validators/IdValidator.py
M Products/validation/validators/RangeValidator.py
M Products/validation/validators/RegexValidator.py
M Products/validation/validators/SupplValidators.py

diff --git a/CHANGES.txt b/CHANGES.txt
index 736863d..2fb9cdf 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -4,8 +4,8 @@ Changelog
 2.0.2 (unreleased)
 ------------------
 
-- Nothing changed yet.
-
+- Use zope.interface decorator.
+  [gforcada]
 
 2.0.1 (2015-02-23)
 ------------------
@@ -284,4 +284,3 @@ post 1.3.4-final02 (2006-01-15)
 --------------------
 
 - Nothing changed
-
diff --git a/Products/validation/chain.py b/Products/validation/chain.py
index f616a03..966359a 100644
--- a/Products/validation/chain.py
+++ b/Products/validation/chain.py
@@ -1,5 +1,5 @@
 from Products.validation.interfaces.IValidator import IValidationChain
-from zope.interface import implements
+from zope.interface import implementer
 
 from types import TupleType, ListType
 from config import validation as validationService
@@ -9,10 +9,10 @@
 V_SUFFICIENT = 2
 
 
+@implementer(IValidationChain)
 class ValidationChain:
     """
     """
-    implements(IValidationChain)
 
     def __init__(self, name, title='', description='', validators=(),
                  register=False):
diff --git a/Products/validation/service.py b/Products/validation/service.py
index 4a5e35e..eb86f18 100644
--- a/Products/validation/service.py
+++ b/Products/validation/service.py
@@ -1,12 +1,12 @@
 from Products.validation.interfaces.IValidationService import IValidationService
 from Products.validation.interfaces.IValidator import IValidator
-from zope.interface import implements
+from zope.interface import implementer
 
 from exceptions import UnknowValidatorError, FalseValidatorError, AlreadyRegisteredValidatorError
 from types import StringType, StringTypes
 
+@implementer(IValidationService)
 class Service:
-    implements(IValidationService)
 
     def __init__(self):
         self._validator = {}
diff --git a/Products/validation/validators/EmptyValidator.py b/Products/validation/validators/EmptyValidator.py
index 983f11e..681b68e 100644
--- a/Products/validation/validators/EmptyValidator.py
+++ b/Products/validation/validators/EmptyValidator.py
@@ -1,4 +1,4 @@
-from zope.interface import implements
+from zope.interface import implementer
 from Products.validation.i18n import PloneMessageFactory as _
 from Products.validation.i18n import recursiveTranslate
 from Products.validation.i18n import safe_unicode
@@ -7,8 +7,8 @@
 _marker = []
 
 
+@implementer(IValidator)
 class EmptyValidator:
-    implements(IValidator)
 
     def __init__(self, name, title='', description='', showError=True):
         self.name = name
diff --git a/Products/validation/validators/ExpressionValidator.py b/Products/validation/validators/ExpressionValidator.py
index 7ff9f6a..ad45b45 100644
--- a/Products/validation/validators/ExpressionValidator.py
+++ b/Products/validation/validators/ExpressionValidator.py
@@ -27,9 +27,10 @@
 from Products.validation.i18n import recursiveTranslate
 from Products.validation.i18n import safe_unicode
 from Products.PageTemplates.Expressions import getEngine
-from zope.interface import implements
+from zope.interface import implementer
 from zope.i18nmessageid import Message
 
+@implementer(IValidator)
 class ExpressionValidator:
     """ Validator for TALES Expressions
 
@@ -57,8 +58,6 @@ class ExpressionValidator:
 
     """
 
-    implements(IValidator)
-
     name = 'talesexpressionvalidator'
 
     def __init__(self,expression=None,errormsg=None):
diff --git a/Products/validation/validators/IdValidator.py b/Products/validation/validators/IdValidator.py
index 4396afa..f98181d 100644
--- a/Products/validation/validators/IdValidator.py
+++ b/Products/validation/validators/IdValidator.py
@@ -5,14 +5,14 @@
 from zExceptions import BadRequest
 from OFS import ObjectManager
 from Products.validation.interfaces.IValidator import IValidator
-from zope.interface import implements
+from zope.interface import implementer
 from Products.validation.i18n import PloneMessageFactory as _
 from Products.validation.i18n import recursiveTranslate
 from Products.validation.i18n import safe_unicode
 
 
+@implementer(IValidator)
 class IdValidator:
-    implements(IValidator)
 
     def __init__( self, name, title='', description=''):
         self.name = name
diff --git a/Products/validation/validators/RangeValidator.py b/Products/validation/validators/RangeValidator.py
index 79a7f61..262ffbf 100644
--- a/Products/validation/validators/RangeValidator.py
+++ b/Products/validation/validators/RangeValidator.py
@@ -1,11 +1,11 @@
 from Products.validation.interfaces.IValidator import IValidator
-from zope.interface import implements
+from zope.interface import implementer
 from Products.validation.i18n import PloneMessageFactory as _
 from Products.validation.i18n import recursiveTranslate
 from Products.validation.i18n import safe_unicode
 
+@implementer(IValidator)
 class RangeValidator:
-    implements(IValidator)
 
     def __init__(self, name, minval=0.0, maxval=0.0, title='', description=''):
         self.name = name
diff --git a/Products/validation/validators/RegexValidator.py b/Products/validation/validators/RegexValidator.py
index 952f5ab..148e6f7 100644
--- a/Products/validation/validators/RegexValidator.py
+++ b/Products/validation/validators/RegexValidator.py
@@ -1,5 +1,5 @@
 from Products.validation.interfaces.IValidator import IValidator
-from zope.interface import implements
+from zope.interface import implementer
 from Products.validation.i18n import PloneMessageFactory as _
 from Products.validation.i18n import recursiveTranslate
 from Products.validation.i18n import safe_unicode
@@ -10,8 +10,8 @@ def ignoreRE(value, expression):
     ignore = re.compile(expression)
     return ignore.sub('', value)
 
+@implementer(IValidator)
 class RegexValidator:
-    implements(IValidator)
 
     def __init__(self, name, *args, **kw):
         self.name = name
diff --git a/Products/validation/validators/SupplValidators.py b/Products/validation/validators/SupplValidators.py
index c8324ff..dce96d2 100644
--- a/Products/validation/validators/SupplValidators.py
+++ b/Products/validation/validators/SupplValidators.py
@@ -3,7 +3,7 @@
 from ZPublisher.HTTPRequest import FileUpload
 
 from Products.validation.interfaces.IValidator import IValidator
-from zope.interface import implements
+from zope.interface import implementer
 from Products.validation.i18n import PloneMessageFactory as _
 from Products.validation.i18n import recursiveTranslate
 from Products.validation.i18n import safe_unicode
@@ -11,6 +11,7 @@
 _marker = []
 
 
+@implementer(IValidator)
 class MaxSizeValidator:
     """Tests if an upload, file or something supporting len() is smaller than a
        given max size value
@@ -23,7 +24,6 @@ class MaxSizeValidator:
     getMaxSizeFor(fieldname) on the instance, a maxsize attribute on the field
     or a given maxsize at validator initialization.
     """
-    implements(IValidator)
 
     def __init__(self, name, title='', description='', maxsize=0):
         self.name = name
@@ -75,10 +75,9 @@ def __call__(self, value, *args, **kwargs):
             return True
 
 
+@implementer(IValidator)
 class DateValidator:
 
-    implements(IValidator)
-
     def __init__(self, name, title='', description=''):
         self.name = name
         self.title = title or name


