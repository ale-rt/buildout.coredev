Repository: mockup


Branch: refs/heads/2.1.x
Date: 2017-02-04T21:06:44+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/1440d5b6a405fbbcc87afe5e7f3c80e29d9b6423

auto set time on date change before the original inputs value is updated. Refs: but doesn't solve: https://github.com/plone/Products.CMFPlone/issues/1914

Files changed:
M mockup/patterns/pickadate/pattern.js

diff --git a/mockup/patterns/pickadate/pattern.js b/mockup/patterns/pickadate/pattern.js
index d45389b..7a224fa 100644
--- a/mockup/patterns/pickadate/pattern.js
+++ b/mockup/patterns/pickadate/pattern.js
@@ -218,15 +218,15 @@ define([
                 onSet: function(e) {
                   if (e.select !== undefined) {
                     self.$date.attr('data-value', e.select);
-                    if (self.options.time === false ||
-                        self.$time.attr('data-value') !== '') {
-                      self.updateValue.call(self);
-                    }
                     if (self.options.autoSetTimeOnDateChange !== false && self.$time) {
                       if (! self.$time.pickatime('picker').get('select')) {
                         self.$time.pickatime('picker').set('select', self.options.autoSetTimeOnDateChange);
                       }
                     }
+                    if (self.options.time === false ||
+                        self.$time.attr('data-value') !== '') {
+                      self.updateValue.call(self);
+                    }
                   }
                   if (e.hasOwnProperty('clear')) {
                     self.$el.val('');


Repository: mockup


Branch: refs/heads/2.1.x
Date: 2017-02-04T21:06:44+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/b746ba17255ede0d9b0d2abf11b732a198d7f8e0

PickADate buttons clear and now
PickADate pattern: Add a button to set the date or time to now and another to clear all inputs.
Remove the clear buttons from the date and time picker itself, as they allowed incomplete input submission (e.g. date only when date and time were required).

Files changed:
M CHANGES.rst
M mockup/patterns/pickadate/pattern.js
M mockup/patterns/pickadate/pattern.pickadate.less
M mockup/tests/pattern-pickadate-test.js

diff --git a/CHANGES.rst b/CHANGES.rst
index 91963c4..22ffeb8 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,72 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- PickADate pattern: Add a button to set the date or time to now and another to clear all inputs.
+  Remove the clear buttons from the date and time picker itself, as they allowed incomplete input submission (e.g. date only when date and time were required).
+  [thet]
+
+- PickADate pattern: Add option to automatically set the time when changing the date.
+  It defaults to set the time to the current time.
+  [thet]
+
+- Change default sort option in livesearch pattern.
+  [rodfersou]
+
+- Show expired label in folder contents for expired attributes
+  [vangheem]
+
+- Related Items refactorings:
+
+    - Make "search" and "browse" mode user-selectable via buttons.
+
+    - Remove obsolete tree widget, use "browse" mode instead.
+
+    - Let "search" mode search recursively.
+
+    - Let "browse" mode start from current path.
+
+    - Immediately open select2 results when clicking on "Browse" or "Search" or browsing somewhere.
+
+    - Show only selectable items in "search" mode, if defined.
+
+    - Show only selectable and folderish items in "browse" mode, if selctable items are defined.
+
+    - Exclude already selected items in result list.
+
+    - Default closeOnSelect to true.
+
+    - Show "Open folder" arrow only when in "browse" mode.
+
+    - Seperate templates from JavaScript into xml files.
+
+    - Allow optional image and file upload (especially useful for image and file reference widgets).
+
+    - Allow configuration of "favorites" to quickly switch the current path via a dropdown menu.
+
+    - Adapt TinyMCE pattern to related item changes and remove now obsolete selection and result templates.
+
+    - Calculate all paths relative to the ``rootPath``, so that breadcrumbs navigation and favorites do not show paths outside the rootPath.
+
+    - For results and selected items with images, add a line break after the image.
+  [thet]
+
+
+- More Related items pattern:
+
+    - Result button style allow for more room for scrollbar, and have subltle color change on hover to deliniate user-expected behavior of browsing vs. selecting item.
+
+    - Related Items pattern: content icon cross-compatibility with Plone 5.x and 4.x (via plone.app.widgets 1.x); in Plone 5 getIcon returned from brain is a boolean, in Plone 4, it is a string -- use this to show content icons in Plone 5 as previous, but also show image scale in Plone 4, but only for images.  This is the most reasonable solution to avoid requesting many broken image scales (404) in Plone 4.
+
+  [seanupton]
+
+
+- Structure pattern refactorings:
+
+    - Prevent popovers to be closed when clicking on non-visible elements which still use screen space (those with visibility: hidden or opacity: 0). That in addition to elements, which are not visible at all and do not use screen space (display: none). Prevents upload form in structure pattern to be closed when opening the file selection tool.
+
+    - Use thumb scale for image preview in rename dialog and optimize the rename dialog layout.
+
+    - Remove ``pat-relateditems`` path selection widget but make sure, the path can still be set via navigation within the structure pattern.
 
 Bug fixes:
 
diff --git a/mockup/patterns/pickadate/pattern.js b/mockup/patterns/pickadate/pattern.js
index 7a224fa..1538dfc 100644
--- a/mockup/patterns/pickadate/pattern.js
+++ b/mockup/patterns/pickadate/pattern.js
@@ -6,9 +6,10 @@
  *    autoSetTimeOnDateChange(string): Automatically set the time when a date is set. You can specify an offset with a special syntax - a stringified JSON Array in the form of "[H,M]" will set it to hour:minute. If you prepend an "+" or "-", this will added or subscracted to the current time. It does not go beyond 12:00am. ("+[0,0]").
  *    separator(string): Separator between date and time if both are enabled.
  *    (' ')
- *    classClearName(string): Class name of element that is generated by pattern. ('pattern-pickadate-clear')
+ *    classClearName(string): Class applied to clear button. ('pattern-pickadate-clear')
  *    classDateName(string): Class applied to date input. ('pattern-pickadate-date')
  *    classDateWrapperName(string): Class applied to extra wrapper div around date input. ('pattern-pickadate-date-wrapper')
+ *    classNowName(string): Class applied to now button. ('pattern-pickadate-now')
  *    classSeparatorName(string): Class applied to separator. ('pattern-pickadate-separator')
  *    classTimeName(string): Class applied to time input. ('pattern-pickadate-time')
  *    classTimeWrapperName(string): Class applied to wrapper div around time input. ('pattern-pickadate-time-wrapper')
@@ -105,7 +106,7 @@ define([
         selectMonths: true,
         formatSubmit: 'yyyy-mm-dd',
         format: 'yyyy-mm-dd',
-        clear: _t('Clear'),
+        clear: false,
         close: _t('Close'),
         today: _t('Today'),
         labelMonthNext: _t('Next month'),
@@ -113,8 +114,12 @@ define([
         labelMonthSelect: _t('Select a month'),
         labelYearSelect: _t('Select a year')
       },
-      time: {},
+      time: {
+        clear: false
+      },
       timezone: null,
+      titleClear: _t('Clear'),
+      titleNow: _t('Today'),
       autoSetTimeOnDateChange: '+[0,0]',
       classWrapperName: 'pattern-pickadate-wrapper',
       classSeparatorName: 'pattern-pickadate-separator',
@@ -125,6 +130,7 @@ define([
       classTimezoneName: 'pattern-pickadate-timezone',
       classTimezoneWrapperName: 'pattern-pickadate-timezone-wrapper',
       classClearName: 'pattern-pickadate-clear',
+      classNowName: 'pattern-pickadate-now',
       placeholderDate: _t('Enter date...'),
       placeholderTime: _t('Enter time...'),
       placeholderTimezone: _t('Enter timezone...')
@@ -330,8 +336,23 @@ define([
         }
       }
 
-      self.$clear = $('<div/>')
+      self.$now = $('<button class="btn btn-xs btn-info" title="' + self.options.titleNow + '"><span class="glyphicon glyphicon-time"></span></button>')
+        .addClass(self.options.classNowName)
+        .on('click', function (e) {
+            e.preventDefault();
+            var now = new Date();
+            if (self.$date) { self.$date.data('pickadate').set('select', now); }
+            if (self.$time) { self.$time.data('pickatime').set('select', now); }
+        })
+        .appendTo(self.$wrapper);
+
+      self.$clear = $('<button class="btn btn-xs btn-danger" title="' + self.options.titleClear + '"><span class="glyphicon glyphicon-trash"></span></button>')
         .addClass(self.options.classClearName)
+        .on('click', function (e) {
+            e.preventDefault();
+            if (self.$date) { self.$date.data('pickadate').clear(); }
+            if (self.$time) { self.$time.data('pickatime').clear(); }
+        })
         .appendTo(self.$wrapper);
 
     },
diff --git a/mockup/patterns/pickadate/pattern.pickadate.less b/mockup/patterns/pickadate/pattern.pickadate.less
index ee3ddbc..0f22718 100644
--- a/mockup/patterns/pickadate/pattern.pickadate.less
+++ b/mockup/patterns/pickadate/pattern.pickadate.less
@@ -1,17 +1,29 @@
 @import (less) "@{bowerPath}/pickadate/lib/themes/classic.css";
 @import (less) "@{bowerPath}/pickadate/lib/themes/classic.date.css";
 @import (less) "@{bowerPath}/pickadate/lib/themes/classic.time.css";
+@import (reference) '@{bowerPath}/bootstrap/less/buttons.less';
+
 
 .pattern-pickadate-wrapper {
+
+  .btn:extend(.btn all){}
+  .btn-info:extend(.btn-info all){}
+  .btn-danger:extend(.btn-danger all){}
+
   position: relative;
   margin-bottom: 0.5em;
 
+  &:after {
+    clear: both;
+  }
+
   .picker{
     display: none;
     &.picker--opened{
       display: block;
     }
   }
+
   .pattern-pickadate-date-wrapper {
     float: left;
     .picker__input {
@@ -27,11 +39,13 @@
       margin-top:-2px;
     }
   }
+
   .pattern-pickadate-separator {
     float: left;
     display: block;
     margin: 0 0.2em;
   }
+
   .pattern-pickadate-time-wrapper {
     float: left;
     .picker__input {
@@ -50,8 +64,17 @@
       text-align: center;
     }
   }
+
+  .pattern-pickadate-timezone-wrapper {
+      float: left;
+  }
+
+  .pattern-pickadate-now {
+    margin-left: 1em;
+  }
+
   .pattern-pickadate-clear {
-    clear: both;
+      margin-left: 0.5em;
   }
 
   .picker__select--month, .picker__select--year {
diff --git a/mockup/tests/pattern-pickadate-test.js b/mockup/tests/pattern-pickadate-test.js
index 93040b9..1ce176b 100644
--- a/mockup/tests/pattern-pickadate-test.js
+++ b/mockup/tests/pattern-pickadate-test.js
@@ -108,35 +108,6 @@ define([
       // main element should now have value
       expect($('.pat-pickadate', self.$el).val()).to.not.equal('');
 
-      // clearing time ...
-      $('.pattern-pickadate-time', self.$el).click();
-      this.clock.tick(1000);
-      $('.picker__button--clear', timeWrapper).click();
-
-      // ... should remove value from main element
-      expect($('.pat-pickadate', self.$el).val()).to.be.equal('');
-
-      // select time again
-      $selectedTime = timeWrapper.find('li').first().next().click();
-
-      // main element should now have again value
-      expect($('.pat-pickadate', self.$el).val()).to.not.equal('');
-
-      // clearing date ...
-      $('.pattern-pickadate-date', self.$el).click();
-      $('.pattern-pickadate-date', self.$el).click();
-      $('.picker__button--clear', dateWrapper).click();
-
-      // ... should also remove value from main element
-      expect($('.pat-pickadate', self.$el).val()).to.be.equal('');
-
-      // selecting time again ...
-      $selectedTime = timeWrapper.find('li').first().next().click();
-
-      // ... should still keep main element value empty since date picker is
-      // cleared
-      expect($('.pat-pickadate', self.$el).val()).to.be.equal('');
-
     });
 
     it('date and time element have custom separator', function() {
@@ -174,9 +145,9 @@ define([
       expect($('.pattern-pickadate-date', self.$el).parent().find('.picker__select--year').size()).to.be.equal(0);
       expect($('.pattern-pickadate-date', self.$el).parent().find('.picker__select--month').size()).to.be.equal(0);
 
-      // there should be 25 items in time picker list. 24 for each hour and one
-      // to for clear button
-      expect($('.pattern-pickadate-time', self.$el).parent().find('li').size()).to.be.equal(25);
+      // there should be 24 items for each hour in time picker list.
+      // The clear button is not shown in favor of a date + time clear button.
+      expect($('.pattern-pickadate-time', self.$el).parent().find('li').size()).to.be.equal(24);
     });
 
     it('only date element', function() {
@@ -225,14 +196,6 @@ define([
       // and also on main element since time element is disabled
       expect($('.pat-pickadate', self.$el).val()).to.not.equal('');
 
-      // clearing date ...
-      $('.pattern-pickadate-date', self.$el).click();
-      $('.pattern-pickadate-date', self.$el).click();
-      this.clock.tick(1000);
-      $('.picker__button--clear', dateWrapper).click();
-
-      // ... should also remove value from main element
-      expect($('.pat-pickadate', self.$el).val()).to.be.equal('');
     });
 
     it('only time element', function() {
@@ -281,13 +244,6 @@ define([
       // and also on main element since time element is disabled
       expect($('.pat-pickadate', self.$el).val()).to.not.equal('');
 
-      // clearing date ...
-      $('.pattern-pickadate-time', self.$el).click();
-      this.clock.tick(1000);
-      $('.picker__button--clear', timeWrapper).click();
-
-      // ... should also remove value from main element
-      expect($('.pat-pickadate', self.$el).val()).to.be.equal('');
     });
 
     it('populating date and time picker', function() {
@@ -597,6 +553,58 @@ define([
 
     });
 
+    describe('set / clear date and time with buttons', function() {
+
+      it('set and clear date and time', function() {
+        var $el = $('<div><input class="pat-pickadate"/>');
+        registry.scan($el);
+
+        // first, it's unset
+        expect($('.pat-pickadate', $el).val()).to.be.equal("");
+        
+        // now set it to now.
+        $('.pattern-pickadate-now', $el).click();
+        expect($('.pat-pickadate', $el).val()).to.be.equal("2017-01-23 15:30");
+ 
+        // now clear it.
+        $('.pattern-pickadate-clear', $el).click();
+        expect($('.pat-pickadate', $el).val()).to.be.equal("");
+      });
+
+      it('set and clear date', function() {
+        var $el = $('<div><input class="pat-pickadate" data-pat-pickadate=\'date:false\'/>');
+        registry.scan($el);
+
+        // first, it's unset
+        expect($('.pat-pickadate', $el).val()).to.be.equal("");
+        
+        // now set it to now.
+        $('.pattern-pickadate-now', $el).click();
+        expect($('.pat-pickadate', $el).val()).to.be.equal("15:30");
+ 
+        // now clear it.
+        $('.pattern-pickadate-clear', $el).click();
+        expect($('.pat-pickadate', $el).val()).to.be.equal("");
+      });
+
+      it('set and clear time', function() {
+        var $el = $('<div><input class="pat-pickadate" data-pat-pickadate=\'time:false\'/>');
+        registry.scan($el);
+
+        // first, it's unset
+        expect($('.pat-pickadate', $el).val()).to.be.equal("");
+        
+        // now set it to now.
+        $('.pattern-pickadate-now', $el).click();
+        expect($('.pat-pickadate', $el).val()).to.be.equal("2017-01-23");
+ 
+        // now clear it.
+        $('.pattern-pickadate-clear', $el).click();
+        expect($('.pat-pickadate', $el).val()).to.be.equal("");
+      });
+
+    });
+
   });
 
 });


Repository: mockup


Branch: refs/heads/2.1.x
Date: 2017-02-06T23:52:45+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/0f88f1c55efa428e82799f116bc0d527fc705755

Merge pull request #731 from plone/thet-pickadate-clearandset-2.1.x

PickADate buttons clear and now 2.1.x

Files changed:
M CHANGES.rst
M mockup/patterns/pickadate/pattern.js
M mockup/patterns/pickadate/pattern.pickadate.less
M mockup/tests/pattern-pickadate-test.js

diff --git a/CHANGES.rst b/CHANGES.rst
index 91963c4..22ffeb8 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,72 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- PickADate pattern: Add a button to set the date or time to now and another to clear all inputs.
+  Remove the clear buttons from the date and time picker itself, as they allowed incomplete input submission (e.g. date only when date and time were required).
+  [thet]
+
+- PickADate pattern: Add option to automatically set the time when changing the date.
+  It defaults to set the time to the current time.
+  [thet]
+
+- Change default sort option in livesearch pattern.
+  [rodfersou]
+
+- Show expired label in folder contents for expired attributes
+  [vangheem]
+
+- Related Items refactorings:
+
+    - Make "search" and "browse" mode user-selectable via buttons.
+
+    - Remove obsolete tree widget, use "browse" mode instead.
+
+    - Let "search" mode search recursively.
+
+    - Let "browse" mode start from current path.
+
+    - Immediately open select2 results when clicking on "Browse" or "Search" or browsing somewhere.
+
+    - Show only selectable items in "search" mode, if defined.
+
+    - Show only selectable and folderish items in "browse" mode, if selctable items are defined.
+
+    - Exclude already selected items in result list.
+
+    - Default closeOnSelect to true.
+
+    - Show "Open folder" arrow only when in "browse" mode.
+
+    - Seperate templates from JavaScript into xml files.
+
+    - Allow optional image and file upload (especially useful for image and file reference widgets).
+
+    - Allow configuration of "favorites" to quickly switch the current path via a dropdown menu.
+
+    - Adapt TinyMCE pattern to related item changes and remove now obsolete selection and result templates.
+
+    - Calculate all paths relative to the ``rootPath``, so that breadcrumbs navigation and favorites do not show paths outside the rootPath.
+
+    - For results and selected items with images, add a line break after the image.
+  [thet]
+
+
+- More Related items pattern:
+
+    - Result button style allow for more room for scrollbar, and have subltle color change on hover to deliniate user-expected behavior of browsing vs. selecting item.
+
+    - Related Items pattern: content icon cross-compatibility with Plone 5.x and 4.x (via plone.app.widgets 1.x); in Plone 5 getIcon returned from brain is a boolean, in Plone 4, it is a string -- use this to show content icons in Plone 5 as previous, but also show image scale in Plone 4, but only for images.  This is the most reasonable solution to avoid requesting many broken image scales (404) in Plone 4.
+
+  [seanupton]
+
+
+- Structure pattern refactorings:
+
+    - Prevent popovers to be closed when clicking on non-visible elements which still use screen space (those with visibility: hidden or opacity: 0). That in addition to elements, which are not visible at all and do not use screen space (display: none). Prevents upload form in structure pattern to be closed when opening the file selection tool.
+
+    - Use thumb scale for image preview in rename dialog and optimize the rename dialog layout.
+
+    - Remove ``pat-relateditems`` path selection widget but make sure, the path can still be set via navigation within the structure pattern.
 
 Bug fixes:
 
diff --git a/mockup/patterns/pickadate/pattern.js b/mockup/patterns/pickadate/pattern.js
index d45389b..1538dfc 100644
--- a/mockup/patterns/pickadate/pattern.js
+++ b/mockup/patterns/pickadate/pattern.js
@@ -6,9 +6,10 @@
  *    autoSetTimeOnDateChange(string): Automatically set the time when a date is set. You can specify an offset with a special syntax - a stringified JSON Array in the form of "[H,M]" will set it to hour:minute. If you prepend an "+" or "-", this will added or subscracted to the current time. It does not go beyond 12:00am. ("+[0,0]").
  *    separator(string): Separator between date and time if both are enabled.
  *    (' ')
- *    classClearName(string): Class name of element that is generated by pattern. ('pattern-pickadate-clear')
+ *    classClearName(string): Class applied to clear button. ('pattern-pickadate-clear')
  *    classDateName(string): Class applied to date input. ('pattern-pickadate-date')
  *    classDateWrapperName(string): Class applied to extra wrapper div around date input. ('pattern-pickadate-date-wrapper')
+ *    classNowName(string): Class applied to now button. ('pattern-pickadate-now')
  *    classSeparatorName(string): Class applied to separator. ('pattern-pickadate-separator')
  *    classTimeName(string): Class applied to time input. ('pattern-pickadate-time')
  *    classTimeWrapperName(string): Class applied to wrapper div around time input. ('pattern-pickadate-time-wrapper')
@@ -105,7 +106,7 @@ define([
         selectMonths: true,
         formatSubmit: 'yyyy-mm-dd',
         format: 'yyyy-mm-dd',
-        clear: _t('Clear'),
+        clear: false,
         close: _t('Close'),
         today: _t('Today'),
         labelMonthNext: _t('Next month'),
@@ -113,8 +114,12 @@ define([
         labelMonthSelect: _t('Select a month'),
         labelYearSelect: _t('Select a year')
       },
-      time: {},
+      time: {
+        clear: false
+      },
       timezone: null,
+      titleClear: _t('Clear'),
+      titleNow: _t('Today'),
       autoSetTimeOnDateChange: '+[0,0]',
       classWrapperName: 'pattern-pickadate-wrapper',
       classSeparatorName: 'pattern-pickadate-separator',
@@ -125,6 +130,7 @@ define([
       classTimezoneName: 'pattern-pickadate-timezone',
       classTimezoneWrapperName: 'pattern-pickadate-timezone-wrapper',
       classClearName: 'pattern-pickadate-clear',
+      classNowName: 'pattern-pickadate-now',
       placeholderDate: _t('Enter date...'),
       placeholderTime: _t('Enter time...'),
       placeholderTimezone: _t('Enter timezone...')
@@ -218,15 +224,15 @@ define([
                 onSet: function(e) {
                   if (e.select !== undefined) {
                     self.$date.attr('data-value', e.select);
-                    if (self.options.time === false ||
-                        self.$time.attr('data-value') !== '') {
-                      self.updateValue.call(self);
-                    }
                     if (self.options.autoSetTimeOnDateChange !== false && self.$time) {
                       if (! self.$time.pickatime('picker').get('select')) {
                         self.$time.pickatime('picker').set('select', self.options.autoSetTimeOnDateChange);
                       }
                     }
+                    if (self.options.time === false ||
+                        self.$time.attr('data-value') !== '') {
+                      self.updateValue.call(self);
+                    }
                   }
                   if (e.hasOwnProperty('clear')) {
                     self.$el.val('');
@@ -330,8 +336,23 @@ define([
         }
       }
 
-      self.$clear = $('<div/>')
+      self.$now = $('<button class="btn btn-xs btn-info" title="' + self.options.titleNow + '"><span class="glyphicon glyphicon-time"></span></button>')
+        .addClass(self.options.classNowName)
+        .on('click', function (e) {
+            e.preventDefault();
+            var now = new Date();
+            if (self.$date) { self.$date.data('pickadate').set('select', now); }
+            if (self.$time) { self.$time.data('pickatime').set('select', now); }
+        })
+        .appendTo(self.$wrapper);
+
+      self.$clear = $('<button class="btn btn-xs btn-danger" title="' + self.options.titleClear + '"><span class="glyphicon glyphicon-trash"></span></button>')
         .addClass(self.options.classClearName)
+        .on('click', function (e) {
+            e.preventDefault();
+            if (self.$date) { self.$date.data('pickadate').clear(); }
+            if (self.$time) { self.$time.data('pickatime').clear(); }
+        })
         .appendTo(self.$wrapper);
 
     },
diff --git a/mockup/patterns/pickadate/pattern.pickadate.less b/mockup/patterns/pickadate/pattern.pickadate.less
index ee3ddbc..0f22718 100644
--- a/mockup/patterns/pickadate/pattern.pickadate.less
+++ b/mockup/patterns/pickadate/pattern.pickadate.less
@@ -1,17 +1,29 @@
 @import (less) "@{bowerPath}/pickadate/lib/themes/classic.css";
 @import (less) "@{bowerPath}/pickadate/lib/themes/classic.date.css";
 @import (less) "@{bowerPath}/pickadate/lib/themes/classic.time.css";
+@import (reference) '@{bowerPath}/bootstrap/less/buttons.less';
+
 
 .pattern-pickadate-wrapper {
+
+  .btn:extend(.btn all){}
+  .btn-info:extend(.btn-info all){}
+  .btn-danger:extend(.btn-danger all){}
+
   position: relative;
   margin-bottom: 0.5em;
 
+  &:after {
+    clear: both;
+  }
+
   .picker{
     display: none;
     &.picker--opened{
       display: block;
     }
   }
+
   .pattern-pickadate-date-wrapper {
     float: left;
     .picker__input {
@@ -27,11 +39,13 @@
       margin-top:-2px;
     }
   }
+
   .pattern-pickadate-separator {
     float: left;
     display: block;
     margin: 0 0.2em;
   }
+
   .pattern-pickadate-time-wrapper {
     float: left;
     .picker__input {
@@ -50,8 +64,17 @@
       text-align: center;
     }
   }
+
+  .pattern-pickadate-timezone-wrapper {
+      float: left;
+  }
+
+  .pattern-pickadate-now {
+    margin-left: 1em;
+  }
+
   .pattern-pickadate-clear {
-    clear: both;
+      margin-left: 0.5em;
   }
 
   .picker__select--month, .picker__select--year {
diff --git a/mockup/tests/pattern-pickadate-test.js b/mockup/tests/pattern-pickadate-test.js
index 93040b9..1ce176b 100644
--- a/mockup/tests/pattern-pickadate-test.js
+++ b/mockup/tests/pattern-pickadate-test.js
@@ -108,35 +108,6 @@ define([
       // main element should now have value
       expect($('.pat-pickadate', self.$el).val()).to.not.equal('');
 
-      // clearing time ...
-      $('.pattern-pickadate-time', self.$el).click();
-      this.clock.tick(1000);
-      $('.picker__button--clear', timeWrapper).click();
-
-      // ... should remove value from main element
-      expect($('.pat-pickadate', self.$el).val()).to.be.equal('');
-
-      // select time again
-      $selectedTime = timeWrapper.find('li').first().next().click();
-
-      // main element should now have again value
-      expect($('.pat-pickadate', self.$el).val()).to.not.equal('');
-
-      // clearing date ...
-      $('.pattern-pickadate-date', self.$el).click();
-      $('.pattern-pickadate-date', self.$el).click();
-      $('.picker__button--clear', dateWrapper).click();
-
-      // ... should also remove value from main element
-      expect($('.pat-pickadate', self.$el).val()).to.be.equal('');
-
-      // selecting time again ...
-      $selectedTime = timeWrapper.find('li').first().next().click();
-
-      // ... should still keep main element value empty since date picker is
-      // cleared
-      expect($('.pat-pickadate', self.$el).val()).to.be.equal('');
-
     });
 
     it('date and time element have custom separator', function() {
@@ -174,9 +145,9 @@ define([
       expect($('.pattern-pickadate-date', self.$el).parent().find('.picker__select--year').size()).to.be.equal(0);
       expect($('.pattern-pickadate-date', self.$el).parent().find('.picker__select--month').size()).to.be.equal(0);
 
-      // there should be 25 items in time picker list. 24 for each hour and one
-      // to for clear button
-      expect($('.pattern-pickadate-time', self.$el).parent().find('li').size()).to.be.equal(25);
+      // there should be 24 items for each hour in time picker list.
+      // The clear button is not shown in favor of a date + time clear button.
+      expect($('.pattern-pickadate-time', self.$el).parent().find('li').size()).to.be.equal(24);
     });
 
     it('only date element', function() {
@@ -225,14 +196,6 @@ define([
       // and also on main element since time element is disabled
       expect($('.pat-pickadate', self.$el).val()).to.not.equal('');
 
-      // clearing date ...
-      $('.pattern-pickadate-date', self.$el).click();
-      $('.pattern-pickadate-date', self.$el).click();
-      this.clock.tick(1000);
-      $('.picker__button--clear', dateWrapper).click();
-
-      // ... should also remove value from main element
-      expect($('.pat-pickadate', self.$el).val()).to.be.equal('');
     });
 
     it('only time element', function() {
@@ -281,13 +244,6 @@ define([
       // and also on main element since time element is disabled
       expect($('.pat-pickadate', self.$el).val()).to.not.equal('');
 
-      // clearing date ...
-      $('.pattern-pickadate-time', self.$el).click();
-      this.clock.tick(1000);
-      $('.picker__button--clear', timeWrapper).click();
-
-      // ... should also remove value from main element
-      expect($('.pat-pickadate', self.$el).val()).to.be.equal('');
     });
 
     it('populating date and time picker', function() {
@@ -597,6 +553,58 @@ define([
 
     });
 
+    describe('set / clear date and time with buttons', function() {
+
+      it('set and clear date and time', function() {
+        var $el = $('<div><input class="pat-pickadate"/>');
+        registry.scan($el);
+
+        // first, it's unset
+        expect($('.pat-pickadate', $el).val()).to.be.equal("");
+        
+        // now set it to now.
+        $('.pattern-pickadate-now', $el).click();
+        expect($('.pat-pickadate', $el).val()).to.be.equal("2017-01-23 15:30");
+ 
+        // now clear it.
+        $('.pattern-pickadate-clear', $el).click();
+        expect($('.pat-pickadate', $el).val()).to.be.equal("");
+      });
+
+      it('set and clear date', function() {
+        var $el = $('<div><input class="pat-pickadate" data-pat-pickadate=\'date:false\'/>');
+        registry.scan($el);
+
+        // first, it's unset
+        expect($('.pat-pickadate', $el).val()).to.be.equal("");
+        
+        // now set it to now.
+        $('.pattern-pickadate-now', $el).click();
+        expect($('.pat-pickadate', $el).val()).to.be.equal("15:30");
+ 
+        // now clear it.
+        $('.pattern-pickadate-clear', $el).click();
+        expect($('.pat-pickadate', $el).val()).to.be.equal("");
+      });
+
+      it('set and clear time', function() {
+        var $el = $('<div><input class="pat-pickadate" data-pat-pickadate=\'time:false\'/>');
+        registry.scan($el);
+
+        // first, it's unset
+        expect($('.pat-pickadate', $el).val()).to.be.equal("");
+        
+        // now set it to now.
+        $('.pattern-pickadate-now', $el).click();
+        expect($('.pat-pickadate', $el).val()).to.be.equal("2017-01-23");
+ 
+        // now clear it.
+        $('.pattern-pickadate-clear', $el).click();
+        expect($('.pat-pickadate', $el).val()).to.be.equal("");
+      });
+
+    });
+
   });
 
 });


