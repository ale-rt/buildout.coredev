Repository: plone.supermodel


Branch: refs/heads/master
Date: 2017-01-25T11:16:48+02:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.supermodel/commit/8ba4c306dafd2526cfa75a77e27848ba1b130f29

Add test for parsing choice values with proper NS

Files changed:
M plone/supermodel/tests.py

diff --git a/plone/supermodel/tests.py b/plone/supermodel/tests.py
index 46c6a36..9f01d4a 100644
--- a/plone/supermodel/tests.py
+++ b/plone/supermodel/tests.py
@@ -451,6 +451,22 @@ def _choice_with_term_titles(self):
             '</field>'
         return (schema.Choice(vocabulary=vocab), expected)
 
+    def _choice_with_term_titles_and_ns(self):
+        # two terms with distinct titles, one with same as value:
+        vocab = SimpleVocabulary(
+            [SimpleTerm(t, title=t.upper()) for t in (u'a', u'b')] +
+            [SimpleTerm(u'c', title=u'c')],
+            )
+        expected = '<field name="myfield" type="zope.schema.Choice"'\
+            '      xmlns="http://namespaces.plone.org/supermodel/schema">'\
+            '<values>'\
+            '<element key="a">A</element>'\
+            '<element key="b">B</element>'\
+            '<element key="c">c</element>'\
+            '</values>'\
+            '</field>'
+        return (schema.Choice(vocabulary=vocab), expected)
+
     def test_choice_serialized(self):
         field, expected = self._choice()
         el = self.handler.write(field, 'myfield', 'zope.schema.Choice')
@@ -471,6 +487,7 @@ def _termvalues(vocab):
             self._choice(),
             self._choice_with_empty(),
             self._choice_with_term_titles(),
+            self._choice_with_term_titles_and_ns(),
         )
         for field, expected in cases:
             el = etree.fromstring(expected)


Repository: plone.supermodel


Branch: refs/heads/master
Date: 2017-01-25T11:20:26+02:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.supermodel/commit/2a73eec64de085b73251ba38071c79901c531e2b

Fix issue where choice parser failed to parse vocabulary values with separate keys and display titles when the document had proper namespaces

Files changed:
M CHANGES.rst
M plone/supermodel/exportimport.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 9b2ea07..90863a6 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,10 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Fix issue where supermodel XML choice field parser failed to parse vocabulary
+  values with separate keys and display titles, because the parser expected
+  values tag to not have any namespace.
+  [datakurre]
 
 
 1.3.1 (2016-12-30)
diff --git a/plone/supermodel/exportimport.py b/plone/supermodel/exportimport.py
index cc9c786..2902a8b 100644
--- a/plone/supermodel/exportimport.py
+++ b/plone/supermodel/exportimport.py
@@ -332,7 +332,7 @@ def __init__(self, klass):
 
     def readAttribute(self, element, attributeField):
         if (
-            element.tag == 'values' and
+            etree.QName(element).localname == 'values' and
             any([child.get('key') for child in element])
         ):
             attributeField = OrderedDictField(


Repository: plone.supermodel


Branch: refs/heads/master
Date: 2017-01-26T14:55:21+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.supermodel/commit/014dab90f06f754e293a354536fb8d13146d300c

Merge pull request #19 from plone/datakurre-fix-choice-parser

Fix issue where choice parser failed to parse vocabulary values with separate keys and display titles

Files changed:
M CHANGES.rst
M plone/supermodel/exportimport.py
M plone/supermodel/tests.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 9b2ea07..90863a6 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,10 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Fix issue where supermodel XML choice field parser failed to parse vocabulary
+  values with separate keys and display titles, because the parser expected
+  values tag to not have any namespace.
+  [datakurre]
 
 
 1.3.1 (2016-12-30)
diff --git a/plone/supermodel/exportimport.py b/plone/supermodel/exportimport.py
index cc9c786..2902a8b 100644
--- a/plone/supermodel/exportimport.py
+++ b/plone/supermodel/exportimport.py
@@ -332,7 +332,7 @@ def __init__(self, klass):
 
     def readAttribute(self, element, attributeField):
         if (
-            element.tag == 'values' and
+            etree.QName(element).localname == 'values' and
             any([child.get('key') for child in element])
         ):
             attributeField = OrderedDictField(
diff --git a/plone/supermodel/tests.py b/plone/supermodel/tests.py
index 46c6a36..9f01d4a 100644
--- a/plone/supermodel/tests.py
+++ b/plone/supermodel/tests.py
@@ -451,6 +451,22 @@ def _choice_with_term_titles(self):
             '</field>'
         return (schema.Choice(vocabulary=vocab), expected)
 
+    def _choice_with_term_titles_and_ns(self):
+        # two terms with distinct titles, one with same as value:
+        vocab = SimpleVocabulary(
+            [SimpleTerm(t, title=t.upper()) for t in (u'a', u'b')] +
+            [SimpleTerm(u'c', title=u'c')],
+            )
+        expected = '<field name="myfield" type="zope.schema.Choice"'\
+            '      xmlns="http://namespaces.plone.org/supermodel/schema">'\
+            '<values>'\
+            '<element key="a">A</element>'\
+            '<element key="b">B</element>'\
+            '<element key="c">c</element>'\
+            '</values>'\
+            '</field>'
+        return (schema.Choice(vocabulary=vocab), expected)
+
     def test_choice_serialized(self):
         field, expected = self._choice()
         el = self.handler.write(field, 'myfield', 'zope.schema.Choice')
@@ -471,6 +487,7 @@ def _termvalues(vocab):
             self._choice(),
             self._choice_with_empty(),
             self._choice_with_term_titles(),
+            self._choice_with_term_titles_and_ns(),
         )
         for field, expected in cases:
             el = etree.fromstring(expected)


