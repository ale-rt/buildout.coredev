Repository: plone.app.layout


Branch: refs/heads/master
Date: 2016-04-07T01:34:56+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/00b094ba1be1d52a5426075919066b6598c13cdb

- Fix body class pat-markspeciallinks not set.
  Fixes #84.

Files changed:
M CHANGES.rst
M plone/app/layout/globals/layout.py
M plone/app/layout/globals/tests/test_layout.py

diff --git a/CHANGES.rst b/CHANGES.rst
index b5f0641..5742a41 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,16 +14,17 @@ New:
 
 Fixes:
 
-- *add item here*
-
+- Fix body class ``pat-markspeciallinks`` not set.
+  Fixes #84.
+  [thet]
 
 2.5.19 (2016-03-31)
 -------------------
 
 New:
 
-- Construct the site logo URL to be rooted at ISite instances returned by 
-  ``zope.component.hooks.getSite`` and not only rooted at portal root. 
+- Construct the site logo URL to be rooted at ISite instances returned by
+  ``zope.component.hooks.getSite`` and not only rooted at portal root.
   This makes it possible to have sub sites with local registries which return
   a different logo.
   [thet]
diff --git a/plone/app/layout/globals/layout.py b/plone/app/layout/globals/layout.py
index a28dcea..9847879 100644
--- a/plone/app/layout/globals/layout.py
+++ b/plone/app/layout/globals/layout.py
@@ -265,7 +265,7 @@ def bodyClass(self, template, view):
 
         msl = settings.mark_special_links
         elonw = settings.external_links_open_new_window
-        if msl == 'true' or elonw == 'true':
+        if msl or elonw:
             body_classes.append('pat-markspeciallinks')
 
         return ' '.join(body_classes)
diff --git a/plone/app/layout/globals/tests/test_layout.py b/plone/app/layout/globals/tests/test_layout.py
index fe3d057..34caced 100644
--- a/plone/app/layout/globals/tests/test_layout.py
+++ b/plone/app/layout/globals/tests/test_layout.py
@@ -1,10 +1,11 @@
-from plone.registry.interfaces import IRegistry
+from plone.app.layout.globals.tests.base import GlobalsTestCase
+from plone.app.layout.navigation.interfaces import INavigationRoot
 from plone.portlets.interfaces import IPortletType
+from plone.registry.interfaces import IRegistry
+from Products.CMFPlone.interfaces.controlpanel import ILinkSchema
 from zope.component import getUtility
-import zope.interface
 
-from plone.app.layout.globals.tests.base import GlobalsTestCase
-from plone.app.layout.navigation.interfaces import INavigationRoot
+import zope.interface
 
 
 class TestLayoutView(GlobalsTestCase):
@@ -116,3 +117,39 @@ def testBodyClassWithEverySectionTurnedOff(self):
         assert 'subsection-folder2 subsection-folder2-folder3' \
             not in body_class
         assert ' subsection-folder2-folder3-page' not in body_class
+
+    def testBodyClassWithMarkSpecialLinksOnOff(self):
+        registry = getUtility(IRegistry)
+        settings = registry.forInterface(
+            ILinkSchema,
+            prefix="plone",
+            check=False
+        )
+
+        context = self.portal['front-page']
+        template = context.document_view
+        view = context.restrictedTraverse('@@plone_layout')
+
+        # Case 1
+        settings.mark_special_links = False
+        settings.external_links_open_new_window = False
+        body_class = view.bodyClass(template, view)
+        self.assertTrue('pat-markspeciallinks' not in body_class)
+
+        # Case 2
+        settings.mark_special_links = True
+        settings.external_links_open_new_window = False
+        body_class = view.bodyClass(template, view)
+        self.assertTrue('pat-markspeciallinks' in body_class)
+
+        # Case 3
+        settings.mark_special_links = False
+        settings.external_links_open_new_window = True
+        body_class = view.bodyClass(template, view)
+        self.assertTrue('pat-markspeciallinks' in body_class)
+
+        # Case 4
+        settings.mark_special_links = True
+        settings.external_links_open_new_window = True
+        body_class = view.bodyClass(template, view)
+        self.assertTrue('pat-markspeciallinks' in body_class)


