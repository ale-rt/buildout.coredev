Repository: plone.protect


Branch: refs/heads/master
Date: 2017-08-10T12:05:49-05:00
Author: T. Kim Nguyen (tkimnguyen) <tkimnguyen@users.noreply.github.com>
Commit: https://github.com/plone/plone.protect/commit/b816329164656b82671d2b1e7230f5c31de743a3

wording tweaks

Files changed:
M README.rst

diff --git a/README.rst b/README.rst
index a749508..27883a4 100644
--- a/README.rst
+++ b/README.rst
@@ -1,7 +1,7 @@
 Introduction
 ============
 
-This package contains utilities that can help to protect parts of Plone
+This package contains utilities that can help protect parts of Plone
 or applications build on top of the Plone framework.
 
 
@@ -21,7 +21,7 @@ checker::
   def manage_doSomething(self, param, REQUEST=None):
       pass
 
-This checker only operates on HTTP requests; other types of requests
+This checker operates only on HTTP requests; other types of requests
 are not checked.
 
 b) Passing request to a function validator
@@ -63,8 +63,8 @@ If you want to create the token value programmatically, use the following::
 Validating the token
 --------------------
 
-a) ZCA way
-**********
+a) Zope Component Architecture way
+**********************************
 
 Next you need to add logic somewhere to verify the authenticator. This
 can be done using a call to the authenticator view. For example::
@@ -156,7 +156,7 @@ Additionally, whenever a particular request attempts to write to the ZODB,
 it'll check for the existence of a correct auth token.
 
 
-Allowing write on read programatically
+Allowing write on read programmatically
 --------------------------------------
 
 When you need to allow a known write on read, you've got several options.
@@ -205,7 +205,7 @@ Clickjacking Protection
 plone.protect also provides, by default, clickjacking protection since
 version 3.0.
 
-To protect against this attack, plone employs the use of the X-Frame-Options
+To protect against this attack, Plone uses the X-Frame-Options
 header. plone.protect will set the X-Frame-Options value to ``SAMEORIGIN``.
 
 To customize this value, you can set it to a custom value for a custom view
@@ -223,7 +223,7 @@ Disable All Automatic CSRF Protection
 To disable all automatic CSRF protection, set the environment variable
 ``PLONE_CSRF_DISABLED`` value to ``true``.
 
-WARNING! It is very dangerous to do this. Do not do this unless the zeo client
+WARNING! It is very dangerous to do this. Do not do this unless the ZEO client
 with this setting is not public and you know what you are doing.
 
 ..note::
@@ -274,7 +274,7 @@ Compatibility
 
 ``plone.protect`` version 3 was made for Plone 5.  You can use it on
 Plone 4 for better protection, but you will need the
-``plone4.csrffixes`` hotfix package as well.  Otherwise you get
+``plone4.csrffixes`` hotfix package as well to avoid getting
 needless warnings or errors.  See the `hotfix announcement`_ and the
 `hotfix page`_.
 


Repository: plone.protect


Branch: refs/heads/master
Date: 2017-08-10T12:06:22-05:00
Author: T. Kim Nguyen (tkimnguyen) <tkimnguyen@users.noreply.github.com>
Commit: https://github.com/plone/plone.protect/commit/26eb5aac174c247fc1ab58a20972440c0d5f96f2

Update CHANGES.rst

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index a2f60ea..d884d24 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -16,6 +16,9 @@ New features:
 
 Bug fixes:
 
+- README wording tweaks 
+  [tkimnguyen]
+  
 - *add item here*
 
 


Repository: plone.protect


Branch: refs/heads/master
Date: 2017-08-15T11:57:27+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.protect/commit/d3425aa2acb027e42b65f539036b01961c8cc698

Merge pull request #68 from plone/tkimnguyen-patch-1

README wording tweaks

Files changed:
M CHANGES.rst
M README.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index e33b7df..fca21b4 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,6 +14,9 @@ New features:
 
 Bug fixes:
 
+- README wording tweaks 
+  [tkimnguyen]
+  
 - *add item here*
 
 
diff --git a/README.rst b/README.rst
index a749508..27883a4 100644
--- a/README.rst
+++ b/README.rst
@@ -1,7 +1,7 @@
 Introduction
 ============
 
-This package contains utilities that can help to protect parts of Plone
+This package contains utilities that can help protect parts of Plone
 or applications build on top of the Plone framework.
 
 
@@ -21,7 +21,7 @@ checker::
   def manage_doSomething(self, param, REQUEST=None):
       pass
 
-This checker only operates on HTTP requests; other types of requests
+This checker operates only on HTTP requests; other types of requests
 are not checked.
 
 b) Passing request to a function validator
@@ -63,8 +63,8 @@ If you want to create the token value programmatically, use the following::
 Validating the token
 --------------------
 
-a) ZCA way
-**********
+a) Zope Component Architecture way
+**********************************
 
 Next you need to add logic somewhere to verify the authenticator. This
 can be done using a call to the authenticator view. For example::
@@ -156,7 +156,7 @@ Additionally, whenever a particular request attempts to write to the ZODB,
 it'll check for the existence of a correct auth token.
 
 
-Allowing write on read programatically
+Allowing write on read programmatically
 --------------------------------------
 
 When you need to allow a known write on read, you've got several options.
@@ -205,7 +205,7 @@ Clickjacking Protection
 plone.protect also provides, by default, clickjacking protection since
 version 3.0.
 
-To protect against this attack, plone employs the use of the X-Frame-Options
+To protect against this attack, Plone uses the X-Frame-Options
 header. plone.protect will set the X-Frame-Options value to ``SAMEORIGIN``.
 
 To customize this value, you can set it to a custom value for a custom view
@@ -223,7 +223,7 @@ Disable All Automatic CSRF Protection
 To disable all automatic CSRF protection, set the environment variable
 ``PLONE_CSRF_DISABLED`` value to ``true``.
 
-WARNING! It is very dangerous to do this. Do not do this unless the zeo client
+WARNING! It is very dangerous to do this. Do not do this unless the ZEO client
 with this setting is not public and you know what you are doing.
 
 ..note::
@@ -274,7 +274,7 @@ Compatibility
 
 ``plone.protect`` version 3 was made for Plone 5.  You can use it on
 Plone 4 for better protection, but you will need the
-``plone4.csrffixes`` hotfix package as well.  Otherwise you get
+``plone4.csrffixes`` hotfix package as well to avoid getting
 needless warnings or errors.  See the `hotfix announcement`_ and the
 `hotfix page`_.
 


