Repository: Products.CMFDiffTool


Branch: refs/heads/master
Date: 2016-08-31T13:35:03-07:00
Author: Dean Karlen (deankarlen) <karlen@uvic.ca>
Commit: https://github.com/plone/Products.CMFDiffTool/commit/c84fe9e3bda6cacbcd4f9eb4b8a9ce58ba67f989

Fix problem with changes to set objects

Dexterity types that use selectable elements (zope.schema.Set) have objects of type "set". When using CMFDiff tool to examine changes between versions having differences between these set objects, FieldDiff.inline_diff() fails as it assumes the objects a and b can be indexed. This is solved by passing a list of the object, if the object is of type "set".

Files changed:
M Products/CMFDiffTool/ListDiff.py

diff --git a/Products/CMFDiffTool/ListDiff.py b/Products/CMFDiffTool/ListDiff.py
index 9d54854..d13f9ec 100644
--- a/Products/CMFDiffTool/ListDiff.py
+++ b/Products/CMFDiffTool/ListDiff.py
@@ -11,6 +11,10 @@ class ListDiff(FieldDiff):
     def _parseField(self, value, filename=None):
         """Parse a field value in preparation for diffing"""
         # Return the list as is for diffing
-        return value
+        if type(value) is set:
+            # A set cannot be indexed, so return a list of a set
+            return list(value)
+        else:
+            return value
 
 InitializeClass(ListDiff)


Repository: Products.CMFDiffTool


Branch: refs/heads/master
Date: 2016-09-01T15:39:24-07:00
Author: Dean Karlen (deankarlen) <karlen@uvic.ca>
Commit: https://github.com/plone/Products.CMFDiffTool/commit/27283cb413d450d3ff591f9e0767bd7f0cbe593a

Merge pull request #19 from deankarlen/patch-1

Fix problem with changes to set objects

Files changed:
M Products/CMFDiffTool/ListDiff.py

diff --git a/Products/CMFDiffTool/ListDiff.py b/Products/CMFDiffTool/ListDiff.py
index 9d54854..d13f9ec 100644
--- a/Products/CMFDiffTool/ListDiff.py
+++ b/Products/CMFDiffTool/ListDiff.py
@@ -11,6 +11,10 @@ class ListDiff(FieldDiff):
     def _parseField(self, value, filename=None):
         """Parse a field value in preparation for diffing"""
         # Return the list as is for diffing
-        return value
+        if type(value) is set:
+            # A set cannot be indexed, so return a list of a set
+            return list(value)
+        else:
+            return value
 
 InitializeClass(ListDiff)


