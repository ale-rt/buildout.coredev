Repository: plone.app.iterate


Branch: refs/heads/master
Date: 2016-12-19T20:30:32+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.iterate/commit/604db316e6a3840e97448ea67ee47152c470539c

isort

Files changed:
M plone/app/iterate/__init__.py
M plone/app/iterate/archiver.py
M plone/app/iterate/browser/cancel.py
M plone/app/iterate/browser/checkin.py
M plone/app/iterate/browser/checkout.py
M plone/app/iterate/browser/control.py
M plone/app/iterate/browser/diff.py
M plone/app/iterate/browser/info.py
M plone/app/iterate/containers.py
M plone/app/iterate/copier.py
M plone/app/iterate/dexterity/copier.py
M plone/app/iterate/dexterity/interfaces.py
M plone/app/iterate/dexterity/relation.py
M plone/app/iterate/dexterity/utils.py
M plone/app/iterate/event.py
M plone/app/iterate/interfaces.py
M plone/app/iterate/lock.py
M plone/app/iterate/permissions.py
M plone/app/iterate/policy.py
M plone/app/iterate/profiles.py
M plone/app/iterate/relation.py
M plone/app/iterate/subscribers/locking.py
M plone/app/iterate/subscribers/marker.py
M plone/app/iterate/subscribers/metadata.py
M plone/app/iterate/subscribers/workflow.py
M plone/app/iterate/testing.py
M plone/app/iterate/tests/content.py
M plone/app/iterate/tests/test_annotations.py
M plone/app/iterate/tests/test_doctests.py
M plone/app/iterate/tests/test_interfaces.py
M plone/app/iterate/tests/test_iterate.py
M plone/app/iterate/util.py
M setup.py

diff --git a/plone/app/iterate/__init__.py b/plone/app/iterate/__init__.py
index 3a141a9..74f6375 100644
--- a/plone/app/iterate/__init__.py
+++ b/plone/app/iterate/__init__.py
@@ -23,9 +23,11 @@
 """
 """
 
-import logging
-from zope.i18nmessageid import MessageFactory
 from plone.app.iterate import permissions  # noqa
+from zope.i18nmessageid import MessageFactory
+
+import logging
+
 
 PloneMessageFactory = MessageFactory('plone')
 logger = logging.getLogger('plone.app.iterate')
diff --git a/plone/app/iterate/archiver.py b/plone/app/iterate/archiver.py
index 6247bf5..39f913a 100644
--- a/plone/app/iterate/archiver.py
+++ b/plone/app/iterate/archiver.py
@@ -24,10 +24,9 @@
 $Id: archiver.py 1824 2007-02-08 17:59:41Z hazmat $
 """
 
-from zope.interface import implementer
-from zope.component import adapts
-
 from Products.CMFCore.utils import getToolByName
+from zope.component import adapts
+from zope.interface import implementer
 
 import interfaces
 
diff --git a/plone/app/iterate/browser/cancel.py b/plone/app/iterate/browser/cancel.py
index 704fef0..4d6439c 100644
--- a/plone/app/iterate/browser/cancel.py
+++ b/plone/app/iterate/browser/cancel.py
@@ -21,17 +21,14 @@
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ##################################################################
 
-from zope.component import getMultiAdapter
-
 from Acquisition import aq_inner
+from plone.app.iterate import PloneMessageFactory as _
+from plone.app.iterate.interfaces import CheckoutException
+from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
 from Products.Five.browser import BrowserView
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-
 from Products.statusmessages.interfaces import IStatusMessage
-
-from plone.app.iterate import PloneMessageFactory as _
-from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
-from plone.app.iterate.interfaces import CheckoutException
+from zope.component import getMultiAdapter
 
 
 class Cancel(BrowserView):
diff --git a/plone/app/iterate/browser/checkin.py b/plone/app/iterate/browser/checkin.py
index 669f26a..7fb1a50 100644
--- a/plone/app/iterate/browser/checkin.py
+++ b/plone/app/iterate/browser/checkin.py
@@ -21,17 +21,14 @@
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ##################################################################
 
-from zope.component import getMultiAdapter
-
 from Acquisition import aq_inner
+from plone.app.iterate import PloneMessageFactory as _
+from plone.app.iterate.interfaces import CheckinException
+from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
 from Products.Five.browser import BrowserView
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-
 from Products.statusmessages.interfaces import IStatusMessage
-
-from plone.app.iterate import PloneMessageFactory as _
-from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
-from plone.app.iterate.interfaces import CheckinException
+from zope.component import getMultiAdapter
 
 
 class Checkin(BrowserView):
diff --git a/plone/app/iterate/browser/checkout.py b/plone/app/iterate/browser/checkout.py
index ca13316..12185ee 100644
--- a/plone/app/iterate/browser/checkout.py
+++ b/plone/app/iterate/browser/checkout.py
@@ -21,18 +21,16 @@
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ##################################################################
 
-from zope.component import getMultiAdapter, getAdapters
-
 from Acquisition import aq_inner
-from Products.Five.browser import BrowserView
-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-
-from Products.statusmessages.interfaces import IStatusMessage
-
 from plone.app.iterate import PloneMessageFactory as _
-from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
 from plone.app.iterate.interfaces import CheckoutException
+from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
 from plone.app.iterate.interfaces import IWCContainerLocator
+from Products.Five.browser import BrowserView
+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
+from Products.statusmessages.interfaces import IStatusMessage
+from zope.component import getAdapters
+from zope.component import getMultiAdapter
 
 
 class Checkout(BrowserView):
diff --git a/plone/app/iterate/browser/control.py b/plone/app/iterate/browser/control.py
index 8ebebd6..309a343 100644
--- a/plone/app/iterate/browser/control.py
+++ b/plone/app/iterate/browser/control.py
@@ -23,12 +23,13 @@
 
 from AccessControl import getSecurityManager
 from Acquisition import aq_inner
-import Products.CMFCore.permissions
-from Products.Five.browser import BrowserView
 from plone.app.iterate import interfaces
 from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
 from plone.app.iterate.interfaces import IWorkingCopy
 from plone.memoize.view import memoize
+from Products.Five.browser import BrowserView
+
+import Products.CMFCore.permissions
 
 
 class Control(BrowserView):
diff --git a/plone/app/iterate/browser/diff.py b/plone/app/iterate/browser/diff.py
index f26149d..75835c7 100644
--- a/plone/app/iterate/browser/diff.py
+++ b/plone/app/iterate/browser/diff.py
@@ -3,12 +3,12 @@
 $Id: diff.py 1807 2007-02-06 06:52:46Z hazmat $
 """
 
+from plone.app.iterate.interfaces import IBaseline
+from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
+from plone.app.iterate.interfaces import IWorkingCopy
 from Products.CMFCore.utils import getToolByName
 from Products.Five.browser import BrowserView
 
-from plone.app.iterate.interfaces import IWorkingCopy, IBaseline
-from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
-
 
 class DiffView(BrowserView):
 
diff --git a/plone/app/iterate/browser/info.py b/plone/app/iterate/browser/info.py
index cd6e1b5..2fba85e 100644
--- a/plone/app/iterate/browser/info.py
+++ b/plone/app/iterate/browser/info.py
@@ -5,15 +5,16 @@
 
 from AccessControl import getSecurityManager
 from DateTime import DateTime
+from plone.app.iterate.interfaces import IBaseline
+from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
+from plone.app.iterate.interfaces import keys
+from plone.app.iterate.permissions import CheckoutPermission
+from plone.memoize.instance import memoize
 from Products.CMFCore.permissions import ModifyPortalContent
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.log import logger
 from Products.Five.browser import BrowserView
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
-from plone.app.iterate.interfaces import keys, IBaseline
-from plone.app.iterate.permissions import CheckoutPermission
-from plone.memoize.instance import memoize
 from zope.interface import implementer
 from zope.viewlet.interfaces import IViewlet
 
diff --git a/plone/app/iterate/containers.py b/plone/app/iterate/containers.py
index a21359d..9aa9b38 100644
--- a/plone/app/iterate/containers.py
+++ b/plone/app/iterate/containers.py
@@ -21,17 +21,16 @@
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ##################################################################
 
-from zope.interface import implementer
-from zope.component import adapts
-
-from Acquisition import aq_inner, aq_parent
 from AccessControl import getSecurityManager
-from Products.CMFCore.interfaces import IDynamicType
-from Products.CMFCore.utils import getToolByName
-from Products.CMFCore.permissions import AddPortalContent
-
+from Acquisition import aq_inner
+from Acquisition import aq_parent
 from plone.app.iterate import PloneMessageFactory as _
 from plone.app.iterate.interfaces import IWCContainerLocator
+from Products.CMFCore.interfaces import IDynamicType
+from Products.CMFCore.permissions import AddPortalContent
+from Products.CMFCore.utils import getToolByName
+from zope.component import adapts
+from zope.interface import implementer
 
 
 @implementer(IWCContainerLocator)
diff --git a/plone/app/iterate/copier.py b/plone/app/iterate/copier.py
index 9cb16bc..ae141ed 100644
--- a/plone/app/iterate/copier.py
+++ b/plone/app/iterate/copier.py
@@ -25,22 +25,23 @@
 $Id: copier.py 1824 2007-02-08 17:59:41Z hazmat $
 """
 
-from zope import interface, component
-from zope.annotation.interfaces import IAnnotations
-from zope.event import notify
-from zope.lifecycleevent import ObjectMovedEvent
-
-from Acquisition import aq_base, aq_parent, aq_inner
-from ZODB.PersistentMapping import PersistentMapping
-
+from Acquisition import aq_base
+from Acquisition import aq_inner
+from Acquisition import aq_parent
+from interfaces import CheckinException
 from Products.Archetypes.Referenceable import Referenceable
-from Products.CMFCore.utils import getToolByName
 from Products.CMFCore import interfaces as cmf_ifaces
+from Products.CMFCore.utils import getToolByName
 from Products.DCWorkflow.DCWorkflow import DCWorkflowDefinition
+from relation import WorkingCopyRelation
+from ZODB.PersistentMapping import PersistentMapping
+from zope import component
+from zope import interface
+from zope.annotation.interfaces import IAnnotations
+from zope.event import notify
+from zope.lifecycleevent import ObjectMovedEvent
 
 import interfaces
-from relation import WorkingCopyRelation
-from interfaces import CheckinException
 
 
 @interface.implementer(interfaces.IObjectCopier)
diff --git a/plone/app/iterate/dexterity/copier.py b/plone/app/iterate/dexterity/copier.py
index 2d4f729..64219d4 100644
--- a/plone/app/iterate/dexterity/copier.py
+++ b/plone/app/iterate/dexterity/copier.py
@@ -1,16 +1,17 @@
 # -*- coding: utf-8 -*-
-from Acquisition import aq_inner, aq_parent
-from Products.CMFCore.utils import getToolByName
-from Products.DCWorkflow.DCWorkflow import DCWorkflowDefinition
-from ZODB.PersistentMapping import PersistentMapping
+from Acquisition import aq_inner
+from Acquisition import aq_parent
 from plone.app.iterate import copier
 from plone.app.iterate import interfaces
-from plone.app.iterate.event import AfterCheckinEvent
 from plone.app.iterate.dexterity import ITERATE_RELATION_NAME
 from plone.app.iterate.dexterity.relation import StagingRelationValue
+from plone.app.iterate.event import AfterCheckinEvent
 from plone.dexterity.utils import iterSchemata
+from Products.CMFCore.utils import getToolByName
+from Products.DCWorkflow.DCWorkflow import DCWorkflowDefinition
 from z3c.relationfield import event
 from zc.relation.interfaces import ICatalog
+from ZODB.PersistentMapping import PersistentMapping
 from zope import component
 from zope.annotation.interfaces import IAnnotations
 from zope.event import notify
diff --git a/plone/app/iterate/dexterity/interfaces.py b/plone/app/iterate/dexterity/interfaces.py
index 577dec7..d0674dc 100644
--- a/plone/app/iterate/dexterity/interfaces.py
+++ b/plone/app/iterate/dexterity/interfaces.py
@@ -1,7 +1,7 @@
 # -*- coding: utf-8 -*-
 from plone.app.iterate.interfaces import IIterateAware
-from zope.interface import Attribute
 from z3c.relationfield.interfaces import IRelationValue
+from zope.interface import Attribute
 
 
 class IStagingRelationValue(IRelationValue):
diff --git a/plone/app/iterate/dexterity/relation.py b/plone/app/iterate/dexterity/relation.py
index 4d6b724..64fb3b0 100644
--- a/plone/app/iterate/dexterity/relation.py
+++ b/plone/app/iterate/dexterity/relation.py
@@ -6,6 +6,7 @@
 from zope.component import getUtility
 from zope.interface import implementer
 
+
 try:
     from zope.intid.interfaces import IIntIds
 except ImportError:
diff --git a/plone/app/iterate/dexterity/utils.py b/plone/app/iterate/dexterity/utils.py
index aff6758..f2a0d02 100644
--- a/plone/app/iterate/dexterity/utils.py
+++ b/plone/app/iterate/dexterity/utils.py
@@ -1,5 +1,6 @@
 # -*- coding: utf-8 -*-
-from Acquisition import aq_inner, aq_base
+from Acquisition import aq_base
+from Acquisition import aq_inner
 from plone.app.iterate.dexterity import ITERATE_RELATION_NAME
 from zc.relation.interfaces import ICatalog
 from zope import component
diff --git a/plone/app/iterate/event.py b/plone/app/iterate/event.py
index dc8ba67..398ee47 100644
--- a/plone/app/iterate/event.py
+++ b/plone/app/iterate/event.py
@@ -22,9 +22,9 @@
 ##################################################################
 """
 """
-from zope.interface import implementer
-from zope.event import notify
 from zope.component.interfaces import ObjectEvent
+from zope.event import notify
+from zope.interface import implementer
 
 import interfaces
 
diff --git a/plone/app/iterate/interfaces.py b/plone/app/iterate/interfaces.py
index 163d8ae..a5c3fc4 100644
--- a/plone/app/iterate/interfaces.py
+++ b/plone/app/iterate/interfaces.py
@@ -24,14 +24,15 @@
 $Id: interfaces.py 1811 2007-02-06 18:40:02Z hazmat $
 """
 
-from zope.interface import Interface, Attribute
-from zope import schema
-
-from zope.component.interfaces import IObjectEvent
 from plone.app.iterate import PloneMessageFactory as _
 from plone.locking.interfaces import LockType
 from plone.locking.interfaces import MAX_TIMEOUT
 from Products.Archetypes.interfaces import IReference
+from zope import schema
+from zope.component.interfaces import IObjectEvent
+from zope.interface import Attribute
+from zope.interface import Interface
+
 
 ################################
 #  Marker interface
diff --git a/plone/app/iterate/lock.py b/plone/app/iterate/lock.py
index 2b79221..b46210e 100644
--- a/plone/app/iterate/lock.py
+++ b/plone/app/iterate/lock.py
@@ -26,9 +26,9 @@
 $Id: lock.py 1392 2006-06-20 01:02:17Z hazmat $
 """
 
+from interfaces import ITERATE_LOCK
 from plone.locking.interfaces import ILockable
 
-from interfaces import ITERATE_LOCK
 
 __all__ = ['lockContext', 'unlockContext', 'isLocked']
 
diff --git a/plone/app/iterate/permissions.py b/plone/app/iterate/permissions.py
index fc78bd4..a2613e5 100644
--- a/plone/app/iterate/permissions.py
+++ b/plone/app/iterate/permissions.py
@@ -23,6 +23,7 @@
 
 from Products.CMFCore.permissions import setDefaultRoles
 
+
 CheckinPermission = "iterate : Check in content"
 CheckoutPermission = "iterate : Check out content"
 
diff --git a/plone/app/iterate/policy.py b/plone/app/iterate/policy.py
index 4dd7bb3..1596674 100644
--- a/plone/app/iterate/policy.py
+++ b/plone/app/iterate/policy.py
@@ -25,16 +25,18 @@
 
 """
 
-from Acquisition import aq_inner, aq_parent
-from Products.Archetypes.interfaces import IReferenceable
-import event
-import interfaces
+from Acquisition import aq_inner
+from Acquisition import aq_parent
 from plone.app.iterate.util import get_storage
+from Products.Archetypes.interfaces import IReferenceable
 from relation import WorkingCopyRelation
 from zope import component
 from zope.event import notify
 from zope.interface import implementer
 
+import event
+import interfaces
+
 
 @implementer(interfaces.ICheckinCheckoutPolicy)
 class CheckinCheckoutPolicyAdapter(object):
diff --git a/plone/app/iterate/profiles.py b/plone/app/iterate/profiles.py
index ebf4007..bf8d286 100644
--- a/plone/app/iterate/profiles.py
+++ b/plone/app/iterate/profiles.py
@@ -1,6 +1,6 @@
 # -*- coding: utf-8 -*-
-from zope.interface import implementer
 from Products.CMFPlone.interfaces import INonInstallable
+from zope.interface import implementer
 
 
 @implementer(INonInstallable)
diff --git a/plone/app/iterate/relation.py b/plone/app/iterate/relation.py
index b5b3c0e..ae68667 100644
--- a/plone/app/iterate/relation.py
+++ b/plone/app/iterate/relation.py
@@ -24,17 +24,15 @@
 $Id: relation.py 1392 2006-06-20 01:02:17Z hazmat $
 """
 
-from zope.interface import implementer
-from zope.component import adapts
-from zope.annotation.interfaces import IAttributeAnnotatable
-
+from interfaces import ICheckinCheckoutReference
+from interfaces import IIterateAware
+from interfaces import IWorkingCopyRelation
 from Products.Archetypes import config as atconf
 from Products.Archetypes.exceptions import ReferenceException
 from Products.Archetypes.ReferenceEngine import Reference
-
-from interfaces import IWorkingCopyRelation
-from interfaces import ICheckinCheckoutReference
-from interfaces import IIterateAware
+from zope.annotation.interfaces import IAttributeAnnotatable
+from zope.component import adapts
+from zope.interface import implementer
 
 import logging
 
diff --git a/plone/app/iterate/subscribers/locking.py b/plone/app/iterate/subscribers/locking.py
index 79ccb10..783e8cd 100644
--- a/plone/app/iterate/subscribers/locking.py
+++ b/plone/app/iterate/subscribers/locking.py
@@ -24,8 +24,8 @@
 $Id: locking.py 1824 2007-02-08 17:59:41Z hazmat $
 """
 
-from plone.locking.interfaces import ILockable
 from plone.app.iterate import lock
+from plone.locking.interfaces import ILockable
 
 
 def handleWCDeleted(event):
diff --git a/plone/app/iterate/subscribers/marker.py b/plone/app/iterate/subscribers/marker.py
index ee0ab6b..53d0ba8 100644
--- a/plone/app/iterate/subscribers/marker.py
+++ b/plone/app/iterate/subscribers/marker.py
@@ -24,8 +24,8 @@
 $Id: marker.py 1824 2007-02-08 17:59:41Z hazmat $
 """
 
-from Products.Five.utilities import marker
 from plone.app.iterate import interfaces
+from Products.Five.utilities import marker
 
 
 def handleCheckout(event):
diff --git a/plone/app/iterate/subscribers/metadata.py b/plone/app/iterate/subscribers/metadata.py
index 3f164f3..61edcfb 100644
--- a/plone/app/iterate/subscribers/metadata.py
+++ b/plone/app/iterate/subscribers/metadata.py
@@ -26,8 +26,8 @@
 
 from AccessControl import getSecurityManager
 from DateTime import DateTime
-from plone.app.iterate.util import get_storage
 from plone.app.iterate.interfaces import keys
+from plone.app.iterate.util import get_storage
 
 
 def handleCheckout(event):
diff --git a/plone/app/iterate/subscribers/workflow.py b/plone/app/iterate/subscribers/workflow.py
index 2f84346..83afb8d 100644
--- a/plone/app/iterate/subscribers/workflow.py
+++ b/plone/app/iterate/subscribers/workflow.py
@@ -28,11 +28,11 @@
 """
 
 from Acquisition import aq_base
-from Products.CMFPlacefulWorkflow.PlacefulWorkflowTool import WorkflowPolicyConfig_id  # noqa
-from Products.CMFPlacefulWorkflow.WorkflowPolicyConfig import WorkflowPolicyConfig  # noqa
 from plone.app.iterate.interfaces import IIterateSettings
 from plone.app.iterate.util import get_storage
 from plone.registry.interfaces import IRegistry
+from Products.CMFPlacefulWorkflow.PlacefulWorkflowTool import WorkflowPolicyConfig_id  # noqa
+from Products.CMFPlacefulWorkflow.WorkflowPolicyConfig import WorkflowPolicyConfig  # noqa
 from zope.component import getUtility
 
 
diff --git a/plone/app/iterate/testing.py b/plone/app/iterate/testing.py
index 3fcf22b..082ecf2 100644
--- a/plone/app/iterate/testing.py
+++ b/plone/app/iterate/testing.py
@@ -1,9 +1,9 @@
 # -*- coding: utf-8 -*-
 """Testing setup for integration and functional tests."""
 from plone.app.contenttypes.testing import PloneAppContenttypes
+from plone.app.testing import applyProfile
 from plone.app.testing import PLONE_FIXTURE
 from plone.app.testing import PloneSandboxLayer
-from plone.app.testing import applyProfile
 from plone.app.testing.layers import FunctionalTesting
 from plone.app.testing.layers import IntegrationTesting
 from plone.testing import z2
diff --git a/plone/app/iterate/tests/content.py b/plone/app/iterate/tests/content.py
index 1a1322f..12f755c 100644
--- a/plone/app/iterate/tests/content.py
+++ b/plone/app/iterate/tests/content.py
@@ -1,7 +1,9 @@
 # -*- coding: utf-8 -*-
-from plone.app.folder.folder import ATFolder, ATFolderSchema
-from Products.ATContentTypes.content.base import registerATCT
+from plone.app.folder.folder import ATFolder
+from plone.app.folder.folder import ATFolderSchema
 from Products.Archetypes import atapi
+from Products.ATContentTypes.content.base import registerATCT
+
 
 RichFolderSchema = ATFolderSchema.copy() + atapi.Schema((
     atapi.TextField('text',
diff --git a/plone/app/iterate/tests/test_annotations.py b/plone/app/iterate/tests/test_annotations.py
index cab1f79..c19e5b4 100644
--- a/plone/app/iterate/tests/test_annotations.py
+++ b/plone/app/iterate/tests/test_annotations.py
@@ -1,16 +1,16 @@
 # -*- coding: utf-8 -*-
 
-import unittest
-
 from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
 from plone.app.iterate.interfaces import IWCContainerLocator
 from plone.app.iterate.testing import PLONEAPPITERATEDEX_INTEGRATION_TESTING
-from plone.app.testing import TEST_USER_ID
 from plone.app.testing import setRoles
+from plone.app.testing import TEST_USER_ID
 from zope.annotation.interfaces import IAnnotatable
 from zope.annotation.interfaces import IAnnotations
 from zope.component import getAdapters
 
+import unittest
+
 
 class AnnotationsTestCase(unittest.TestCase):
 
diff --git a/plone/app/iterate/tests/test_doctests.py b/plone/app/iterate/tests/test_doctests.py
index ce053be..579a925 100644
--- a/plone/app/iterate/tests/test_doctests.py
+++ b/plone/app/iterate/tests/test_doctests.py
@@ -1,10 +1,10 @@
 # -*- coding: utf-8 -*-
-import doctest
-from unittest import TestSuite
-
 from plone.app.iterate.testing import PLONEAPPITERATE_FUNCTIONAL_TESTING
 from plone.app.iterate.testing import PLONEAPPITERATEDEX_FUNCTIONAL_TESTING
 from plone.testing import layered
+from unittest import TestSuite
+
+import doctest
 
 
 def test_suite():
diff --git a/plone/app/iterate/tests/test_interfaces.py b/plone/app/iterate/tests/test_interfaces.py
index b5f732a..1b7378c 100644
--- a/plone/app/iterate/tests/test_interfaces.py
+++ b/plone/app/iterate/tests/test_interfaces.py
@@ -4,11 +4,11 @@
 from plone.app.iterate.interfaces import IIterateAware
 from plone.app.iterate.interfaces import IWorkingCopy
 from plone.app.iterate.testing import PLONEAPPITERATEDEX_INTEGRATION_TESTING
-from plone.app.testing import TEST_USER_ID
-from plone.app.testing import TEST_USER_NAME
 from plone.app.testing import login
 from plone.app.testing import logout
 from plone.app.testing import setRoles
+from plone.app.testing import TEST_USER_ID
+from plone.app.testing import TEST_USER_NAME
 from plone.dexterity.utils import createContentInContainer
 from unittest2 import TestCase
 
diff --git a/plone/app/iterate/tests/test_iterate.py b/plone/app/iterate/tests/test_iterate.py
index 2d0ed53..235928a 100644
--- a/plone/app/iterate/tests/test_iterate.py
+++ b/plone/app/iterate/tests/test_iterate.py
@@ -25,14 +25,15 @@
 """
 
 from AccessControl import getSecurityManager
-from Products.CMFCore.utils import getToolByName
 from plone.app.iterate.browser.control import Control
 from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
 from plone.app.iterate.testing import PLONEAPPITERATE_INTEGRATION_TESTING
-from plone.app.testing import TEST_USER_ID
-from plone.app.testing import TEST_USER_NAME
 from plone.app.testing import login
 from plone.app.testing import setRoles
+from plone.app.testing import TEST_USER_ID
+from plone.app.testing import TEST_USER_NAME
+from Products.CMFCore.utils import getToolByName
+
 import unittest2 as unittest
 
 
diff --git a/plone/app/iterate/util.py b/plone/app/iterate/util.py
index 6eb32f7..cd06bcc 100644
--- a/plone/app/iterate/util.py
+++ b/plone/app/iterate/util.py
@@ -21,10 +21,10 @@
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ##################################################################
 
-from zope.annotation import IAnnotations
-from persistent.dict import PersistentDict
 from interfaces import annotation_key
+from persistent.dict import PersistentDict
 from Products.CMFCore.utils import getToolByName
+from zope.annotation import IAnnotations
 
 
 def get_storage(context, default=None):
diff --git a/setup.py b/setup.py
index a1e5ef0..fc8f810 100644
--- a/setup.py
+++ b/setup.py
@@ -1,6 +1,8 @@
 # -*- coding: utf-8 -*-
 """Setup plone.app.iterate."""
-from setuptools import setup, find_packages
+from setuptools import find_packages
+from setuptools import setup
+
 
 LONG_DESCRIPTION = (
     open('README.rst').read() +
@@ -11,18 +13,18 @@
 setup(
     name='plone.app.iterate',
     version='3.2.4.dev0',
-    description="check-out/check-in staging for Plone",
+    description='check-out/check-in staging for Plone',
     long_description=LONG_DESCRIPTION,
     classifiers=[
-        "Environment :: Web Environment",
-        "Framework :: Plone",
-        "Framework :: Plone :: 5.0",
-        "Framework :: Plone :: 5.1",
-        "Framework :: Zope2",
-        "License :: OSI Approved :: GNU General Public License (GPL)",
-        "Operating System :: OS Independent",
-        "Programming Language :: Python",
-        "Programming Language :: Python :: 2.7",
+        'Environment :: Web Environment',
+        'Framework :: Plone',
+        'Framework :: Plone :: 5.0',
+        'Framework :: Plone :: 5.1',
+        'Framework :: Zope2',
+        'License :: OSI Approved :: GNU General Public License (GPL)',
+        'Operating System :: OS Independent',
+        'Programming Language :: Python',
+        'Programming Language :: Python :: 2.7',
     ],
     keywords='check-out check-in staging',
     author='Plone Foundation',
@@ -34,10 +36,19 @@
     include_package_data=True,
     zip_safe=False,
     install_requires=[
-        'setuptools',
-        'Products.GenericSetup>=1.8.2',
+        'Acquisition',
+        'DateTime',
         'plone.locking',
         'plone.memoize',
+        'Products.Archetypes',
+        'Products.CMFCore',
+        'Products.CMFEditions',
+        'Products.CMFPlacefulWorkflow',
+        'Products.DCWorkflow',
+        'Products.GenericSetup>=1.8.2',
+        'Products.statusmessages',
+        'setuptools',
+        'ZODB3',
         'zope.annotation',
         'zope.component',
         'zope.event',
@@ -46,15 +57,6 @@
         'zope.lifecycleevent',
         'zope.schema',
         'zope.viewlet',
-        'Acquisition',
-        'DateTime',
-        'Products.Archetypes',
-        'Products.CMFCore',
-        'Products.CMFEditions',
-        'Products.CMFPlacefulWorkflow',
-        'Products.DCWorkflow',
-        'Products.statusmessages',
-        'ZODB3',
         'Zope2',
     ],
     extras_require={


Repository: plone.app.iterate


Branch: refs/heads/master
Date: 2016-12-19T20:34:00+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.iterate/commit/d7b51fe20681424f22fd2ba52add6ba9aac8ddf8

adapts -&gt; @adapter

Files changed:
M plone/app/iterate/archiver.py
M plone/app/iterate/containers.py
M plone/app/iterate/copier.py
M plone/app/iterate/policy.py
M plone/app/iterate/relation.py
M plone/app/iterate/tests/test_iterate.py

diff --git a/plone/app/iterate/archiver.py b/plone/app/iterate/archiver.py
index 39f913a..d008abc 100644
--- a/plone/app/iterate/archiver.py
+++ b/plone/app/iterate/archiver.py
@@ -25,15 +25,15 @@
 """
 
 from Products.CMFCore.utils import getToolByName
-from zope.component import adapts
+from zope.component import adapter
 from zope.interface import implementer
 
 import interfaces
 
 
 @implementer(interfaces.IObjectArchiver)
+@adapter(interfaces.IIterateAware)
 class ContentArchiver(object):
-    adapts(interfaces.IIterateAware)
 
     def __init__(self, context):
         self.context = context
diff --git a/plone/app/iterate/containers.py b/plone/app/iterate/containers.py
index 9aa9b38..c379a3c 100644
--- a/plone/app/iterate/containers.py
+++ b/plone/app/iterate/containers.py
@@ -29,15 +29,15 @@
 from Products.CMFCore.interfaces import IDynamicType
 from Products.CMFCore.permissions import AddPortalContent
 from Products.CMFCore.utils import getToolByName
-from zope.component import adapts
+from zope.component import adapter
 from zope.interface import implementer
 
 
 @implementer(IWCContainerLocator)
+@adapter(IDynamicType)
 class HomeFolderLocator(object):
     """Locate the current user's home folder, if possible.
     """
-    adapts(IDynamicType)
 
     def __init__(self, context):
         self.context = context
@@ -53,11 +53,11 @@ def __call__(self):
 
 
 @implementer(IWCContainerLocator)
+@adapter(IDynamicType)
 class ParentFolderLocator(object):
     """Locate the parent of the context, if the user has the
     Add portal content permission.
     """
-    adapts(IDynamicType)
 
     def __init__(self, context):
         self.context = context
diff --git a/plone/app/iterate/copier.py b/plone/app/iterate/copier.py
index ae141ed..256cc4a 100644
--- a/plone/app/iterate/copier.py
+++ b/plone/app/iterate/copier.py
@@ -45,8 +45,8 @@
 
 
 @interface.implementer(interfaces.IObjectCopier)
+@component.adapter(interfaces.IIterateAware)
 class ContentCopier(object):
-    component.adapts(interfaces.IIterateAware)
 
     def __init__(self, context):
         self.context = context
diff --git a/plone/app/iterate/policy.py b/plone/app/iterate/policy.py
index 1596674..f916201 100644
--- a/plone/app/iterate/policy.py
+++ b/plone/app/iterate/policy.py
@@ -39,6 +39,7 @@
 
 
 @implementer(interfaces.ICheckinCheckoutPolicy)
+@component.adapter(interfaces.IIterateAware)
 class CheckinCheckoutPolicyAdapter(object):
     """
     Default Checkin Checkout Policy For Content
@@ -51,7 +52,6 @@ class CheckinCheckoutPolicyAdapter(object):
 
     dexterity folder has dexterity compatible one
     """
-    component.adapts(interfaces.IIterateAware)
 
     # used when creating baseline version for first time
     default_base_message = "Created Baseline"
diff --git a/plone/app/iterate/relation.py b/plone/app/iterate/relation.py
index ae68667..c8ec92d 100644
--- a/plone/app/iterate/relation.py
+++ b/plone/app/iterate/relation.py
@@ -31,7 +31,7 @@
 from Products.Archetypes.exceptions import ReferenceException
 from Products.Archetypes.ReferenceEngine import Reference
 from zope.annotation.interfaces import IAttributeAnnotatable
-from zope.component import adapts
+from zope.component import adapter
 from zope.interface import implementer
 
 import logging
@@ -51,6 +51,7 @@ class WorkingCopyRelation(Reference):
 
 
 @implementer(ICheckinCheckoutReference)
+@adapter(IIterateAware)
 class CheckinCheckoutReferenceAdapter(object):
     """
     default adapter for references.
@@ -69,7 +70,6 @@ class CheckinCheckoutReferenceAdapter(object):
     backward refs on baseline are kept by virtue of UID transferance
 
     """
-    adapts(IIterateAware)
 
     storage_key = "coci.references"
 
diff --git a/plone/app/iterate/tests/test_iterate.py b/plone/app/iterate/tests/test_iterate.py
index 235928a..a8755a4 100644
--- a/plone/app/iterate/tests/test_iterate.py
+++ b/plone/app/iterate/tests/test_iterate.py
@@ -192,7 +192,7 @@ def test_baselineNoCopyReferences(self):
         from plone.app.iterate.tests.utils import CustomReference
 
         component.provideAdapter(
-            adapts=(IBaseObject,),
+            adapter=(IBaseObject,),
             provides=interfaces.ICheckinCheckoutReference,
             factory=relation.NoCopyReferenceAdapter,
             name="zebra")


Repository: plone.app.iterate


Branch: refs/heads/master
Date: 2016-12-19T20:35:43+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.iterate/commit/3747b599c884c2984b1ccdc05be962fc3867f83d

line length/readability

Files changed:
M plone/app/iterate/containers.py
M plone/app/iterate/relation.py
M plone/app/iterate/tests/content.py

diff --git a/plone/app/iterate/containers.py b/plone/app/iterate/containers.py
index c379a3c..ce52d45 100644
--- a/plone/app/iterate/containers.py
+++ b/plone/app/iterate/containers.py
@@ -66,7 +66,12 @@ def __init__(self, context):
 
     @property
     def available(self):
-        return bool(getSecurityManager().checkPermission(AddPortalContent, aq_parent(aq_inner(self.context))))
+        return bool(
+            getSecurityManager().checkPermission(
+                AddPortalContent,
+                aq_parent(aq_inner(self.context))
+            )
+        )
 
     def __call__(self):
         if not self.available:
diff --git a/plone/app/iterate/relation.py b/plone/app/iterate/relation.py
index c8ec92d..10d75f8 100644
--- a/plone/app/iterate/relation.py
+++ b/plone/app/iterate/relation.py
@@ -117,9 +117,11 @@ def checkin(self, baseline, wc, refs, storage):
 
         wc_ref_container = getattr(wc, atconf.REFERENCE_ANNOTATION)
 
-        # references aren't globally addable w/ associated perm which default copysupport
-        # wants to check, temporarily monkey around the issue.
-        def _verifyObjectPaste(*args, **kw): pass
+        # references aren't globally addable w/ associated perm which default
+        # copysupport wants to check, temporarily monkey around the issue.
+        def _verifyObjectPaste(*args, **kw):
+            pass
+
         wc_ref_container._verifyObjectPaste = _verifyObjectPaste
         try:
             wc_ref_container.manage_pasteObjects(clipboard)
diff --git a/plone/app/iterate/tests/content.py b/plone/app/iterate/tests/content.py
index 12f755c..5023591 100644
--- a/plone/app/iterate/tests/content.py
+++ b/plone/app/iterate/tests/content.py
@@ -19,6 +19,7 @@ class RichFolder(ATFolder):
     schema = RichFolderSchema
     portal_type = 'RichFolder'
 
+
 registerATCT(RichFolder, 'plone.app.iterate')
 
 


Repository: plone.app.iterate


Branch: refs/heads/master
Date: 2016-12-19T21:27:28+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.iterate/commit/883ededcba74d63d9e700ab924e25b5731c124d8

document changes

Files changed:
M CHANGES.rst
M plone/app/iterate/tests/test_iterate.py

diff --git a/CHANGES.rst b/CHANGES.rst
index a64abce..0e5c653 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Cleanup: isort, zca decorators, etc.
+  [jensens]
 
 
 3.2.3 (2016-11-10)
diff --git a/plone/app/iterate/tests/test_iterate.py b/plone/app/iterate/tests/test_iterate.py
index a8755a4..235928a 100644
--- a/plone/app/iterate/tests/test_iterate.py
+++ b/plone/app/iterate/tests/test_iterate.py
@@ -192,7 +192,7 @@ def test_baselineNoCopyReferences(self):
         from plone.app.iterate.tests.utils import CustomReference
 
         component.provideAdapter(
-            adapter=(IBaseObject,),
+            adapts=(IBaseObject,),
             provides=interfaces.ICheckinCheckoutReference,
             factory=relation.NoCopyReferenceAdapter,
             name="zebra")


Repository: plone.app.iterate


Branch: refs/heads/master
Date: 2016-12-20T07:54:20-06:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.iterate/commit/2b5e5c3bc6a7d585debd0271b2ee9078a65bbd30

Merge pull request #36 from plone/cleanup

Cleanup

Files changed:
M CHANGES.rst
M plone/app/iterate/__init__.py
M plone/app/iterate/archiver.py
M plone/app/iterate/browser/cancel.py
M plone/app/iterate/browser/checkin.py
M plone/app/iterate/browser/checkout.py
M plone/app/iterate/browser/control.py
M plone/app/iterate/browser/diff.py
M plone/app/iterate/browser/info.py
M plone/app/iterate/containers.py
M plone/app/iterate/copier.py
M plone/app/iterate/dexterity/copier.py
M plone/app/iterate/dexterity/interfaces.py
M plone/app/iterate/dexterity/relation.py
M plone/app/iterate/dexterity/utils.py
M plone/app/iterate/event.py
M plone/app/iterate/interfaces.py
M plone/app/iterate/lock.py
M plone/app/iterate/permissions.py
M plone/app/iterate/policy.py
M plone/app/iterate/profiles.py
M plone/app/iterate/relation.py
M plone/app/iterate/subscribers/locking.py
M plone/app/iterate/subscribers/marker.py
M plone/app/iterate/subscribers/metadata.py
M plone/app/iterate/subscribers/workflow.py
M plone/app/iterate/testing.py
M plone/app/iterate/tests/content.py
M plone/app/iterate/tests/test_annotations.py
M plone/app/iterate/tests/test_doctests.py
M plone/app/iterate/tests/test_interfaces.py
M plone/app/iterate/tests/test_iterate.py
M plone/app/iterate/util.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index a64abce..0e5c653 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Cleanup: isort, zca decorators, etc.
+  [jensens]
 
 
 3.2.3 (2016-11-10)
diff --git a/plone/app/iterate/__init__.py b/plone/app/iterate/__init__.py
index 3a141a9..74f6375 100644
--- a/plone/app/iterate/__init__.py
+++ b/plone/app/iterate/__init__.py
@@ -23,9 +23,11 @@
 """
 """
 
-import logging
-from zope.i18nmessageid import MessageFactory
 from plone.app.iterate import permissions  # noqa
+from zope.i18nmessageid import MessageFactory
+
+import logging
+
 
 PloneMessageFactory = MessageFactory('plone')
 logger = logging.getLogger('plone.app.iterate')
diff --git a/plone/app/iterate/archiver.py b/plone/app/iterate/archiver.py
index 6247bf5..d008abc 100644
--- a/plone/app/iterate/archiver.py
+++ b/plone/app/iterate/archiver.py
@@ -24,17 +24,16 @@
 $Id: archiver.py 1824 2007-02-08 17:59:41Z hazmat $
 """
 
-from zope.interface import implementer
-from zope.component import adapts
-
 from Products.CMFCore.utils import getToolByName
+from zope.component import adapter
+from zope.interface import implementer
 
 import interfaces
 
 
 @implementer(interfaces.IObjectArchiver)
+@adapter(interfaces.IIterateAware)
 class ContentArchiver(object):
-    adapts(interfaces.IIterateAware)
 
     def __init__(self, context):
         self.context = context
diff --git a/plone/app/iterate/browser/cancel.py b/plone/app/iterate/browser/cancel.py
index 704fef0..4d6439c 100644
--- a/plone/app/iterate/browser/cancel.py
+++ b/plone/app/iterate/browser/cancel.py
@@ -21,17 +21,14 @@
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ##################################################################
 
-from zope.component import getMultiAdapter
-
 from Acquisition import aq_inner
+from plone.app.iterate import PloneMessageFactory as _
+from plone.app.iterate.interfaces import CheckoutException
+from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
 from Products.Five.browser import BrowserView
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-
 from Products.statusmessages.interfaces import IStatusMessage
-
-from plone.app.iterate import PloneMessageFactory as _
-from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
-from plone.app.iterate.interfaces import CheckoutException
+from zope.component import getMultiAdapter
 
 
 class Cancel(BrowserView):
diff --git a/plone/app/iterate/browser/checkin.py b/plone/app/iterate/browser/checkin.py
index 669f26a..7fb1a50 100644
--- a/plone/app/iterate/browser/checkin.py
+++ b/plone/app/iterate/browser/checkin.py
@@ -21,17 +21,14 @@
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ##################################################################
 
-from zope.component import getMultiAdapter
-
 from Acquisition import aq_inner
+from plone.app.iterate import PloneMessageFactory as _
+from plone.app.iterate.interfaces import CheckinException
+from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
 from Products.Five.browser import BrowserView
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-
 from Products.statusmessages.interfaces import IStatusMessage
-
-from plone.app.iterate import PloneMessageFactory as _
-from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
-from plone.app.iterate.interfaces import CheckinException
+from zope.component import getMultiAdapter
 
 
 class Checkin(BrowserView):
diff --git a/plone/app/iterate/browser/checkout.py b/plone/app/iterate/browser/checkout.py
index ca13316..12185ee 100644
--- a/plone/app/iterate/browser/checkout.py
+++ b/plone/app/iterate/browser/checkout.py
@@ -21,18 +21,16 @@
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ##################################################################
 
-from zope.component import getMultiAdapter, getAdapters
-
 from Acquisition import aq_inner
-from Products.Five.browser import BrowserView
-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-
-from Products.statusmessages.interfaces import IStatusMessage
-
 from plone.app.iterate import PloneMessageFactory as _
-from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
 from plone.app.iterate.interfaces import CheckoutException
+from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
 from plone.app.iterate.interfaces import IWCContainerLocator
+from Products.Five.browser import BrowserView
+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
+from Products.statusmessages.interfaces import IStatusMessage
+from zope.component import getAdapters
+from zope.component import getMultiAdapter
 
 
 class Checkout(BrowserView):
diff --git a/plone/app/iterate/browser/control.py b/plone/app/iterate/browser/control.py
index 8ebebd6..309a343 100644
--- a/plone/app/iterate/browser/control.py
+++ b/plone/app/iterate/browser/control.py
@@ -23,12 +23,13 @@
 
 from AccessControl import getSecurityManager
 from Acquisition import aq_inner
-import Products.CMFCore.permissions
-from Products.Five.browser import BrowserView
 from plone.app.iterate import interfaces
 from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
 from plone.app.iterate.interfaces import IWorkingCopy
 from plone.memoize.view import memoize
+from Products.Five.browser import BrowserView
+
+import Products.CMFCore.permissions
 
 
 class Control(BrowserView):
diff --git a/plone/app/iterate/browser/diff.py b/plone/app/iterate/browser/diff.py
index f26149d..75835c7 100644
--- a/plone/app/iterate/browser/diff.py
+++ b/plone/app/iterate/browser/diff.py
@@ -3,12 +3,12 @@
 $Id: diff.py 1807 2007-02-06 06:52:46Z hazmat $
 """
 
+from plone.app.iterate.interfaces import IBaseline
+from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
+from plone.app.iterate.interfaces import IWorkingCopy
 from Products.CMFCore.utils import getToolByName
 from Products.Five.browser import BrowserView
 
-from plone.app.iterate.interfaces import IWorkingCopy, IBaseline
-from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
-
 
 class DiffView(BrowserView):
 
diff --git a/plone/app/iterate/browser/info.py b/plone/app/iterate/browser/info.py
index cd6e1b5..2fba85e 100644
--- a/plone/app/iterate/browser/info.py
+++ b/plone/app/iterate/browser/info.py
@@ -5,15 +5,16 @@
 
 from AccessControl import getSecurityManager
 from DateTime import DateTime
+from plone.app.iterate.interfaces import IBaseline
+from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
+from plone.app.iterate.interfaces import keys
+from plone.app.iterate.permissions import CheckoutPermission
+from plone.memoize.instance import memoize
 from Products.CMFCore.permissions import ModifyPortalContent
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.log import logger
 from Products.Five.browser import BrowserView
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
-from plone.app.iterate.interfaces import keys, IBaseline
-from plone.app.iterate.permissions import CheckoutPermission
-from plone.memoize.instance import memoize
 from zope.interface import implementer
 from zope.viewlet.interfaces import IViewlet
 
diff --git a/plone/app/iterate/containers.py b/plone/app/iterate/containers.py
index a21359d..ce52d45 100644
--- a/plone/app/iterate/containers.py
+++ b/plone/app/iterate/containers.py
@@ -21,24 +21,23 @@
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ##################################################################
 
-from zope.interface import implementer
-from zope.component import adapts
-
-from Acquisition import aq_inner, aq_parent
 from AccessControl import getSecurityManager
-from Products.CMFCore.interfaces import IDynamicType
-from Products.CMFCore.utils import getToolByName
-from Products.CMFCore.permissions import AddPortalContent
-
+from Acquisition import aq_inner
+from Acquisition import aq_parent
 from plone.app.iterate import PloneMessageFactory as _
 from plone.app.iterate.interfaces import IWCContainerLocator
+from Products.CMFCore.interfaces import IDynamicType
+from Products.CMFCore.permissions import AddPortalContent
+from Products.CMFCore.utils import getToolByName
+from zope.component import adapter
+from zope.interface import implementer
 
 
 @implementer(IWCContainerLocator)
+@adapter(IDynamicType)
 class HomeFolderLocator(object):
     """Locate the current user's home folder, if possible.
     """
-    adapts(IDynamicType)
 
     def __init__(self, context):
         self.context = context
@@ -54,11 +53,11 @@ def __call__(self):
 
 
 @implementer(IWCContainerLocator)
+@adapter(IDynamicType)
 class ParentFolderLocator(object):
     """Locate the parent of the context, if the user has the
     Add portal content permission.
     """
-    adapts(IDynamicType)
 
     def __init__(self, context):
         self.context = context
@@ -67,7 +66,12 @@ def __init__(self, context):
 
     @property
     def available(self):
-        return bool(getSecurityManager().checkPermission(AddPortalContent, aq_parent(aq_inner(self.context))))
+        return bool(
+            getSecurityManager().checkPermission(
+                AddPortalContent,
+                aq_parent(aq_inner(self.context))
+            )
+        )
 
     def __call__(self):
         if not self.available:
diff --git a/plone/app/iterate/copier.py b/plone/app/iterate/copier.py
index 9cb16bc..256cc4a 100644
--- a/plone/app/iterate/copier.py
+++ b/plone/app/iterate/copier.py
@@ -25,27 +25,28 @@
 $Id: copier.py 1824 2007-02-08 17:59:41Z hazmat $
 """
 
-from zope import interface, component
-from zope.annotation.interfaces import IAnnotations
-from zope.event import notify
-from zope.lifecycleevent import ObjectMovedEvent
-
-from Acquisition import aq_base, aq_parent, aq_inner
-from ZODB.PersistentMapping import PersistentMapping
-
+from Acquisition import aq_base
+from Acquisition import aq_inner
+from Acquisition import aq_parent
+from interfaces import CheckinException
 from Products.Archetypes.Referenceable import Referenceable
-from Products.CMFCore.utils import getToolByName
 from Products.CMFCore import interfaces as cmf_ifaces
+from Products.CMFCore.utils import getToolByName
 from Products.DCWorkflow.DCWorkflow import DCWorkflowDefinition
+from relation import WorkingCopyRelation
+from ZODB.PersistentMapping import PersistentMapping
+from zope import component
+from zope import interface
+from zope.annotation.interfaces import IAnnotations
+from zope.event import notify
+from zope.lifecycleevent import ObjectMovedEvent
 
 import interfaces
-from relation import WorkingCopyRelation
-from interfaces import CheckinException
 
 
 @interface.implementer(interfaces.IObjectCopier)
+@component.adapter(interfaces.IIterateAware)
 class ContentCopier(object):
-    component.adapts(interfaces.IIterateAware)
 
     def __init__(self, context):
         self.context = context
diff --git a/plone/app/iterate/dexterity/copier.py b/plone/app/iterate/dexterity/copier.py
index 2d4f729..64219d4 100644
--- a/plone/app/iterate/dexterity/copier.py
+++ b/plone/app/iterate/dexterity/copier.py
@@ -1,16 +1,17 @@
 # -*- coding: utf-8 -*-
-from Acquisition import aq_inner, aq_parent
-from Products.CMFCore.utils import getToolByName
-from Products.DCWorkflow.DCWorkflow import DCWorkflowDefinition
-from ZODB.PersistentMapping import PersistentMapping
+from Acquisition import aq_inner
+from Acquisition import aq_parent
 from plone.app.iterate import copier
 from plone.app.iterate import interfaces
-from plone.app.iterate.event import AfterCheckinEvent
 from plone.app.iterate.dexterity import ITERATE_RELATION_NAME
 from plone.app.iterate.dexterity.relation import StagingRelationValue
+from plone.app.iterate.event import AfterCheckinEvent
 from plone.dexterity.utils import iterSchemata
+from Products.CMFCore.utils import getToolByName
+from Products.DCWorkflow.DCWorkflow import DCWorkflowDefinition
 from z3c.relationfield import event
 from zc.relation.interfaces import ICatalog
+from ZODB.PersistentMapping import PersistentMapping
 from zope import component
 from zope.annotation.interfaces import IAnnotations
 from zope.event import notify
diff --git a/plone/app/iterate/dexterity/interfaces.py b/plone/app/iterate/dexterity/interfaces.py
index 577dec7..d0674dc 100644
--- a/plone/app/iterate/dexterity/interfaces.py
+++ b/plone/app/iterate/dexterity/interfaces.py
@@ -1,7 +1,7 @@
 # -*- coding: utf-8 -*-
 from plone.app.iterate.interfaces import IIterateAware
-from zope.interface import Attribute
 from z3c.relationfield.interfaces import IRelationValue
+from zope.interface import Attribute
 
 
 class IStagingRelationValue(IRelationValue):
diff --git a/plone/app/iterate/dexterity/relation.py b/plone/app/iterate/dexterity/relation.py
index 4d6b724..64fb3b0 100644
--- a/plone/app/iterate/dexterity/relation.py
+++ b/plone/app/iterate/dexterity/relation.py
@@ -6,6 +6,7 @@
 from zope.component import getUtility
 from zope.interface import implementer
 
+
 try:
     from zope.intid.interfaces import IIntIds
 except ImportError:
diff --git a/plone/app/iterate/dexterity/utils.py b/plone/app/iterate/dexterity/utils.py
index aff6758..f2a0d02 100644
--- a/plone/app/iterate/dexterity/utils.py
+++ b/plone/app/iterate/dexterity/utils.py
@@ -1,5 +1,6 @@
 # -*- coding: utf-8 -*-
-from Acquisition import aq_inner, aq_base
+from Acquisition import aq_base
+from Acquisition import aq_inner
 from plone.app.iterate.dexterity import ITERATE_RELATION_NAME
 from zc.relation.interfaces import ICatalog
 from zope import component
diff --git a/plone/app/iterate/event.py b/plone/app/iterate/event.py
index dc8ba67..398ee47 100644
--- a/plone/app/iterate/event.py
+++ b/plone/app/iterate/event.py
@@ -22,9 +22,9 @@
 ##################################################################
 """
 """
-from zope.interface import implementer
-from zope.event import notify
 from zope.component.interfaces import ObjectEvent
+from zope.event import notify
+from zope.interface import implementer
 
 import interfaces
 
diff --git a/plone/app/iterate/interfaces.py b/plone/app/iterate/interfaces.py
index 163d8ae..a5c3fc4 100644
--- a/plone/app/iterate/interfaces.py
+++ b/plone/app/iterate/interfaces.py
@@ -24,14 +24,15 @@
 $Id: interfaces.py 1811 2007-02-06 18:40:02Z hazmat $
 """
 
-from zope.interface import Interface, Attribute
-from zope import schema
-
-from zope.component.interfaces import IObjectEvent
 from plone.app.iterate import PloneMessageFactory as _
 from plone.locking.interfaces import LockType
 from plone.locking.interfaces import MAX_TIMEOUT
 from Products.Archetypes.interfaces import IReference
+from zope import schema
+from zope.component.interfaces import IObjectEvent
+from zope.interface import Attribute
+from zope.interface import Interface
+
 
 ################################
 #  Marker interface
diff --git a/plone/app/iterate/lock.py b/plone/app/iterate/lock.py
index 2b79221..b46210e 100644
--- a/plone/app/iterate/lock.py
+++ b/plone/app/iterate/lock.py
@@ -26,9 +26,9 @@
 $Id: lock.py 1392 2006-06-20 01:02:17Z hazmat $
 """
 
+from interfaces import ITERATE_LOCK
 from plone.locking.interfaces import ILockable
 
-from interfaces import ITERATE_LOCK
 
 __all__ = ['lockContext', 'unlockContext', 'isLocked']
 
diff --git a/plone/app/iterate/permissions.py b/plone/app/iterate/permissions.py
index fc78bd4..a2613e5 100644
--- a/plone/app/iterate/permissions.py
+++ b/plone/app/iterate/permissions.py
@@ -23,6 +23,7 @@
 
 from Products.CMFCore.permissions import setDefaultRoles
 
+
 CheckinPermission = "iterate : Check in content"
 CheckoutPermission = "iterate : Check out content"
 
diff --git a/plone/app/iterate/policy.py b/plone/app/iterate/policy.py
index 4dd7bb3..f916201 100644
--- a/plone/app/iterate/policy.py
+++ b/plone/app/iterate/policy.py
@@ -25,18 +25,21 @@
 
 """
 
-from Acquisition import aq_inner, aq_parent
-from Products.Archetypes.interfaces import IReferenceable
-import event
-import interfaces
+from Acquisition import aq_inner
+from Acquisition import aq_parent
 from plone.app.iterate.util import get_storage
+from Products.Archetypes.interfaces import IReferenceable
 from relation import WorkingCopyRelation
 from zope import component
 from zope.event import notify
 from zope.interface import implementer
 
+import event
+import interfaces
+
 
 @implementer(interfaces.ICheckinCheckoutPolicy)
+@component.adapter(interfaces.IIterateAware)
 class CheckinCheckoutPolicyAdapter(object):
     """
     Default Checkin Checkout Policy For Content
@@ -49,7 +52,6 @@ class CheckinCheckoutPolicyAdapter(object):
 
     dexterity folder has dexterity compatible one
     """
-    component.adapts(interfaces.IIterateAware)
 
     # used when creating baseline version for first time
     default_base_message = "Created Baseline"
diff --git a/plone/app/iterate/profiles.py b/plone/app/iterate/profiles.py
index ebf4007..bf8d286 100644
--- a/plone/app/iterate/profiles.py
+++ b/plone/app/iterate/profiles.py
@@ -1,6 +1,6 @@
 # -*- coding: utf-8 -*-
-from zope.interface import implementer
 from Products.CMFPlone.interfaces import INonInstallable
+from zope.interface import implementer
 
 
 @implementer(INonInstallable)
diff --git a/plone/app/iterate/relation.py b/plone/app/iterate/relation.py
index b5b3c0e..10d75f8 100644
--- a/plone/app/iterate/relation.py
+++ b/plone/app/iterate/relation.py
@@ -24,17 +24,15 @@
 $Id: relation.py 1392 2006-06-20 01:02:17Z hazmat $
 """
 
-from zope.interface import implementer
-from zope.component import adapts
-from zope.annotation.interfaces import IAttributeAnnotatable
-
+from interfaces import ICheckinCheckoutReference
+from interfaces import IIterateAware
+from interfaces import IWorkingCopyRelation
 from Products.Archetypes import config as atconf
 from Products.Archetypes.exceptions import ReferenceException
 from Products.Archetypes.ReferenceEngine import Reference
-
-from interfaces import IWorkingCopyRelation
-from interfaces import ICheckinCheckoutReference
-from interfaces import IIterateAware
+from zope.annotation.interfaces import IAttributeAnnotatable
+from zope.component import adapter
+from zope.interface import implementer
 
 import logging
 
@@ -53,6 +51,7 @@ class WorkingCopyRelation(Reference):
 
 
 @implementer(ICheckinCheckoutReference)
+@adapter(IIterateAware)
 class CheckinCheckoutReferenceAdapter(object):
     """
     default adapter for references.
@@ -71,7 +70,6 @@ class CheckinCheckoutReferenceAdapter(object):
     backward refs on baseline are kept by virtue of UID transferance
 
     """
-    adapts(IIterateAware)
 
     storage_key = "coci.references"
 
@@ -119,9 +117,11 @@ def checkin(self, baseline, wc, refs, storage):
 
         wc_ref_container = getattr(wc, atconf.REFERENCE_ANNOTATION)
 
-        # references aren't globally addable w/ associated perm which default copysupport
-        # wants to check, temporarily monkey around the issue.
-        def _verifyObjectPaste(*args, **kw): pass
+        # references aren't globally addable w/ associated perm which default
+        # copysupport wants to check, temporarily monkey around the issue.
+        def _verifyObjectPaste(*args, **kw):
+            pass
+
         wc_ref_container._verifyObjectPaste = _verifyObjectPaste
         try:
             wc_ref_container.manage_pasteObjects(clipboard)
diff --git a/plone/app/iterate/subscribers/locking.py b/plone/app/iterate/subscribers/locking.py
index 79ccb10..783e8cd 100644
--- a/plone/app/iterate/subscribers/locking.py
+++ b/plone/app/iterate/subscribers/locking.py
@@ -24,8 +24,8 @@
 $Id: locking.py 1824 2007-02-08 17:59:41Z hazmat $
 """
 
-from plone.locking.interfaces import ILockable
 from plone.app.iterate import lock
+from plone.locking.interfaces import ILockable
 
 
 def handleWCDeleted(event):
diff --git a/plone/app/iterate/subscribers/marker.py b/plone/app/iterate/subscribers/marker.py
index ee0ab6b..53d0ba8 100644
--- a/plone/app/iterate/subscribers/marker.py
+++ b/plone/app/iterate/subscribers/marker.py
@@ -24,8 +24,8 @@
 $Id: marker.py 1824 2007-02-08 17:59:41Z hazmat $
 """
 
-from Products.Five.utilities import marker
 from plone.app.iterate import interfaces
+from Products.Five.utilities import marker
 
 
 def handleCheckout(event):
diff --git a/plone/app/iterate/subscribers/metadata.py b/plone/app/iterate/subscribers/metadata.py
index 3f164f3..61edcfb 100644
--- a/plone/app/iterate/subscribers/metadata.py
+++ b/plone/app/iterate/subscribers/metadata.py
@@ -26,8 +26,8 @@
 
 from AccessControl import getSecurityManager
 from DateTime import DateTime
-from plone.app.iterate.util import get_storage
 from plone.app.iterate.interfaces import keys
+from plone.app.iterate.util import get_storage
 
 
 def handleCheckout(event):
diff --git a/plone/app/iterate/subscribers/workflow.py b/plone/app/iterate/subscribers/workflow.py
index 2f84346..83afb8d 100644
--- a/plone/app/iterate/subscribers/workflow.py
+++ b/plone/app/iterate/subscribers/workflow.py
@@ -28,11 +28,11 @@
 """
 
 from Acquisition import aq_base
-from Products.CMFPlacefulWorkflow.PlacefulWorkflowTool import WorkflowPolicyConfig_id  # noqa
-from Products.CMFPlacefulWorkflow.WorkflowPolicyConfig import WorkflowPolicyConfig  # noqa
 from plone.app.iterate.interfaces import IIterateSettings
 from plone.app.iterate.util import get_storage
 from plone.registry.interfaces import IRegistry
+from Products.CMFPlacefulWorkflow.PlacefulWorkflowTool import WorkflowPolicyConfig_id  # noqa
+from Products.CMFPlacefulWorkflow.WorkflowPolicyConfig import WorkflowPolicyConfig  # noqa
 from zope.component import getUtility
 
 
diff --git a/plone/app/iterate/testing.py b/plone/app/iterate/testing.py
index 3fcf22b..082ecf2 100644
--- a/plone/app/iterate/testing.py
+++ b/plone/app/iterate/testing.py
@@ -1,9 +1,9 @@
 # -*- coding: utf-8 -*-
 """Testing setup for integration and functional tests."""
 from plone.app.contenttypes.testing import PloneAppContenttypes
+from plone.app.testing import applyProfile
 from plone.app.testing import PLONE_FIXTURE
 from plone.app.testing import PloneSandboxLayer
-from plone.app.testing import applyProfile
 from plone.app.testing.layers import FunctionalTesting
 from plone.app.testing.layers import IntegrationTesting
 from plone.testing import z2
diff --git a/plone/app/iterate/tests/content.py b/plone/app/iterate/tests/content.py
index 1a1322f..5023591 100644
--- a/plone/app/iterate/tests/content.py
+++ b/plone/app/iterate/tests/content.py
@@ -1,7 +1,9 @@
 # -*- coding: utf-8 -*-
-from plone.app.folder.folder import ATFolder, ATFolderSchema
-from Products.ATContentTypes.content.base import registerATCT
+from plone.app.folder.folder import ATFolder
+from plone.app.folder.folder import ATFolderSchema
 from Products.Archetypes import atapi
+from Products.ATContentTypes.content.base import registerATCT
+
 
 RichFolderSchema = ATFolderSchema.copy() + atapi.Schema((
     atapi.TextField('text',
@@ -17,6 +19,7 @@ class RichFolder(ATFolder):
     schema = RichFolderSchema
     portal_type = 'RichFolder'
 
+
 registerATCT(RichFolder, 'plone.app.iterate')
 
 
diff --git a/plone/app/iterate/tests/test_annotations.py b/plone/app/iterate/tests/test_annotations.py
index cab1f79..c19e5b4 100644
--- a/plone/app/iterate/tests/test_annotations.py
+++ b/plone/app/iterate/tests/test_annotations.py
@@ -1,16 +1,16 @@
 # -*- coding: utf-8 -*-
 
-import unittest
-
 from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
 from plone.app.iterate.interfaces import IWCContainerLocator
 from plone.app.iterate.testing import PLONEAPPITERATEDEX_INTEGRATION_TESTING
-from plone.app.testing import TEST_USER_ID
 from plone.app.testing import setRoles
+from plone.app.testing import TEST_USER_ID
 from zope.annotation.interfaces import IAnnotatable
 from zope.annotation.interfaces import IAnnotations
 from zope.component import getAdapters
 
+import unittest
+
 
 class AnnotationsTestCase(unittest.TestCase):
 
diff --git a/plone/app/iterate/tests/test_doctests.py b/plone/app/iterate/tests/test_doctests.py
index ce053be..579a925 100644
--- a/plone/app/iterate/tests/test_doctests.py
+++ b/plone/app/iterate/tests/test_doctests.py
@@ -1,10 +1,10 @@
 # -*- coding: utf-8 -*-
-import doctest
-from unittest import TestSuite
-
 from plone.app.iterate.testing import PLONEAPPITERATE_FUNCTIONAL_TESTING
 from plone.app.iterate.testing import PLONEAPPITERATEDEX_FUNCTIONAL_TESTING
 from plone.testing import layered
+from unittest import TestSuite
+
+import doctest
 
 
 def test_suite():
diff --git a/plone/app/iterate/tests/test_interfaces.py b/plone/app/iterate/tests/test_interfaces.py
index b5f732a..1b7378c 100644
--- a/plone/app/iterate/tests/test_interfaces.py
+++ b/plone/app/iterate/tests/test_interfaces.py
@@ -4,11 +4,11 @@
 from plone.app.iterate.interfaces import IIterateAware
 from plone.app.iterate.interfaces import IWorkingCopy
 from plone.app.iterate.testing import PLONEAPPITERATEDEX_INTEGRATION_TESTING
-from plone.app.testing import TEST_USER_ID
-from plone.app.testing import TEST_USER_NAME
 from plone.app.testing import login
 from plone.app.testing import logout
 from plone.app.testing import setRoles
+from plone.app.testing import TEST_USER_ID
+from plone.app.testing import TEST_USER_NAME
 from plone.dexterity.utils import createContentInContainer
 from unittest2 import TestCase
 
diff --git a/plone/app/iterate/tests/test_iterate.py b/plone/app/iterate/tests/test_iterate.py
index 2d0ed53..235928a 100644
--- a/plone/app/iterate/tests/test_iterate.py
+++ b/plone/app/iterate/tests/test_iterate.py
@@ -25,14 +25,15 @@
 """
 
 from AccessControl import getSecurityManager
-from Products.CMFCore.utils import getToolByName
 from plone.app.iterate.browser.control import Control
 from plone.app.iterate.interfaces import ICheckinCheckoutPolicy
 from plone.app.iterate.testing import PLONEAPPITERATE_INTEGRATION_TESTING
-from plone.app.testing import TEST_USER_ID
-from plone.app.testing import TEST_USER_NAME
 from plone.app.testing import login
 from plone.app.testing import setRoles
+from plone.app.testing import TEST_USER_ID
+from plone.app.testing import TEST_USER_NAME
+from Products.CMFCore.utils import getToolByName
+
 import unittest2 as unittest
 
 
diff --git a/plone/app/iterate/util.py b/plone/app/iterate/util.py
index 6eb32f7..cd06bcc 100644
--- a/plone/app/iterate/util.py
+++ b/plone/app/iterate/util.py
@@ -21,10 +21,10 @@
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ##################################################################
 
-from zope.annotation import IAnnotations
-from persistent.dict import PersistentDict
 from interfaces import annotation_key
+from persistent.dict import PersistentDict
 from Products.CMFCore.utils import getToolByName
+from zope.annotation import IAnnotations
 
 
 def get_storage(context, default=None):
diff --git a/setup.py b/setup.py
index a1e5ef0..fc8f810 100644
--- a/setup.py
+++ b/setup.py
@@ -1,6 +1,8 @@
 # -*- coding: utf-8 -*-
 """Setup plone.app.iterate."""
-from setuptools import setup, find_packages
+from setuptools import find_packages
+from setuptools import setup
+
 
 LONG_DESCRIPTION = (
     open('README.rst').read() +
@@ -11,18 +13,18 @@
 setup(
     name='plone.app.iterate',
     version='3.2.4.dev0',
-    description="check-out/check-in staging for Plone",
+    description='check-out/check-in staging for Plone',
     long_description=LONG_DESCRIPTION,
     classifiers=[
-        "Environment :: Web Environment",
-        "Framework :: Plone",
-        "Framework :: Plone :: 5.0",
-        "Framework :: Plone :: 5.1",
-        "Framework :: Zope2",
-        "License :: OSI Approved :: GNU General Public License (GPL)",
-        "Operating System :: OS Independent",
-        "Programming Language :: Python",
-        "Programming Language :: Python :: 2.7",
+        'Environment :: Web Environment',
+        'Framework :: Plone',
+        'Framework :: Plone :: 5.0',
+        'Framework :: Plone :: 5.1',
+        'Framework :: Zope2',
+        'License :: OSI Approved :: GNU General Public License (GPL)',
+        'Operating System :: OS Independent',
+        'Programming Language :: Python',
+        'Programming Language :: Python :: 2.7',
     ],
     keywords='check-out check-in staging',
     author='Plone Foundation',
@@ -34,10 +36,19 @@
     include_package_data=True,
     zip_safe=False,
     install_requires=[
-        'setuptools',
-        'Products.GenericSetup>=1.8.2',
+        'Acquisition',
+        'DateTime',
         'plone.locking',
         'plone.memoize',
+        'Products.Archetypes',
+        'Products.CMFCore',
+        'Products.CMFEditions',
+        'Products.CMFPlacefulWorkflow',
+        'Products.DCWorkflow',
+        'Products.GenericSetup>=1.8.2',
+        'Products.statusmessages',
+        'setuptools',
+        'ZODB3',
         'zope.annotation',
         'zope.component',
         'zope.event',
@@ -46,15 +57,6 @@
         'zope.lifecycleevent',
         'zope.schema',
         'zope.viewlet',
-        'Acquisition',
-        'DateTime',
-        'Products.Archetypes',
-        'Products.CMFCore',
-        'Products.CMFEditions',
-        'Products.CMFPlacefulWorkflow',
-        'Products.DCWorkflow',
-        'Products.statusmessages',
-        'ZODB3',
         'Zope2',
     ],
     extras_require={


