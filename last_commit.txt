Repository: plone.contentrules


Branch: refs/heads/master
Date: 2015-12-13T23:45:01+01:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.contentrules/commit/67c056a91edba3a7de9bfd967313c2a3fe78c112

Revert "Merge branch 'write-on-read'"

This reverts commit c637f42ba6ea8e479ac17b470ac94c0d6999a580, reversing
changes made to 44a6c4fcd58600aa63ba33e3eafa5f715e1f9401.

Files changed:
M CHANGES.rst
M plone/contentrules/engine/assignments.py

diff --git a/CHANGES.rst b/CHANGES.rst
index e2e3c25..4b8d987 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -12,8 +12,6 @@ Fixes:
 
 - *add item here*
 
-- CSRF fix: safe write on read.
-  [gforcada]
 
 2.0.4 (2014-01-27)
 ------------------
diff --git a/plone/contentrules/engine/assignments.py b/plone/contentrules/engine/assignments.py
index b316a7c..7918fca 100644
--- a/plone/contentrules/engine/assignments.py
+++ b/plone/contentrules/engine/assignments.py
@@ -16,12 +16,6 @@
 
 from BTrees.OOBTree import OOBTree
 
-try:
-    from plone.protect.auto import safeWrite
-except ImportError:
-    def safeWrite(*args):
-        pass
-
 
 def check_rules_with_dotted_name_moved(rule):
     """Migrate on-the-fly added event dotted name
@@ -91,10 +85,6 @@ def ruleAssignmentManagerAdapterFactory(context):
     annotations = IAnnotations(context)
     manager = annotations.get(KEY, None)
     if manager is None:
-        annotations[KEY] = RuleAssignmentManager()
-        manager = annotations[KEY]
-        # protect both context and its annotations from a write on read error
-        safeWrite(context)
-        safeWrite(context.__annotations__)
+        manager = annotations[KEY] = RuleAssignmentManager()
 
     return manager


