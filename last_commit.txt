Repository: plone.app.content


Branch: refs/heads/master
Date: 2016-04-27T17:11:19+02:00
Author: Alexander Loechel (loechel) <Alexander.Loechel@lmu.de>
Commit: https://github.com/plone/plone.app.content/commit/e77fbadb678262ef54c9e816e20017cf2fee5aa2

Correct how Type is looked Up

Files changed:
M plone/app/content/browser/file.py

diff --git a/plone/app/content/browser/file.py b/plone/app/content/browser/file.py
index 79cc234..5564ecf 100644
--- a/plone/app/content/browser/file.py
+++ b/plone/app/content/browser/file.py
@@ -129,9 +129,8 @@ def __call__(self):
         if not filedata:
             return
 
-        # Determine if the default file/image types are DX or AT based
         ctr = getToolByName(self.context, 'content_type_registry')
-        type_ = ctr.findTypeName(filename.lower(), '', '') or 'File'
+        type_ = ctr.findTypeName(filename.lower(), content_type, '') or 'File'
 
         # Now check that the object is not restricted to be added in the
         # current context
@@ -149,6 +148,7 @@ def __call__(self):
                     "try another one"
                 )
 
+        # Determine if the default file/image types are DX or AT based
         dx_based = False
         pt = getToolByName(self.context, 'portal_types')
         if IDexterityFTI.providedBy(getattr(pt, type_)):


Repository: plone.app.content


Branch: refs/heads/master
Date: 2016-04-27T23:08:28+02:00
Author: Alexander Loechel (loechel) <Alexander.Loechel@lmu.de>
Commit: https://github.com/plone/plone.app.content/commit/64320d2ac496b0d4e46fa91ee4b3fb4699e0d0ba

added Change Log

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index c1b58d7..a13595c 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,6 +14,9 @@ New features:
 
 Bug fixes:
 
+- Lookup of Content Type for passing in Content Type Factory improved, so that all Images (especially Tiff) are stored as Images not Files.
+  [loechel]
+
 - *add item here*
 
 
@@ -49,7 +52,7 @@ Fixes:
   ``portal_type`` is now available on the attributes object.
   [thet]
 
-- Vocabulary permissions are considered View permission by default, if not 
+- Vocabulary permissions are considered View permission by default, if not
   stated different in PERMISSION global. Renamed _permissions to PERMISSIONS,
   Deprecated BBB name in place. Also minor code-style changes
   [jensens, thet]


Repository: plone.app.content


Branch: refs/heads/master
Date: 2016-04-28T15:10:59+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.content/commit/89fafcd44830c34a0c50f807824047924da8bb71

Merge pull request #88 from plone/check_content_type

Correct how Type is looked Up

Files changed:
M CHANGES.rst
M plone/app/content/browser/file.py

diff --git a/CHANGES.rst b/CHANGES.rst
index c1b58d7..a13595c 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,6 +14,9 @@ New features:
 
 Bug fixes:
 
+- Lookup of Content Type for passing in Content Type Factory improved, so that all Images (especially Tiff) are stored as Images not Files.
+  [loechel]
+
 - *add item here*
 
 
@@ -49,7 +52,7 @@ Fixes:
   ``portal_type`` is now available on the attributes object.
   [thet]
 
-- Vocabulary permissions are considered View permission by default, if not 
+- Vocabulary permissions are considered View permission by default, if not
   stated different in PERMISSION global. Renamed _permissions to PERMISSIONS,
   Deprecated BBB name in place. Also minor code-style changes
   [jensens, thet]
diff --git a/plone/app/content/browser/file.py b/plone/app/content/browser/file.py
index 79cc234..5564ecf 100644
--- a/plone/app/content/browser/file.py
+++ b/plone/app/content/browser/file.py
@@ -129,9 +129,8 @@ def __call__(self):
         if not filedata:
             return
 
-        # Determine if the default file/image types are DX or AT based
         ctr = getToolByName(self.context, 'content_type_registry')
-        type_ = ctr.findTypeName(filename.lower(), '', '') or 'File'
+        type_ = ctr.findTypeName(filename.lower(), content_type, '') or 'File'
 
         # Now check that the object is not restricted to be added in the
         # current context
@@ -149,6 +148,7 @@ def __call__(self):
                     "try another one"
                 )
 
+        # Determine if the default file/image types are DX or AT based
         dx_based = False
         pt = getToolByName(self.context, 'portal_types')
         if IDexterityFTI.providedBy(getattr(pt, type_)):


