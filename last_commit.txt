Repository: plone.app.blob


Branch: refs/heads/master
Date: 2017-10-30T16:44:27+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.blob/commit/d7dcfe051a8d8c59ca0ec07524cca159acd9ce03

use jpg in test that fails due to broken gif-upload.

Files changed:
M src/plone/app/blob/tests/replacement-types.txt

diff --git a/src/plone/app/blob/tests/replacement-types.txt b/src/plone/app/blob/tests/replacement-types.txt
index 45bfe84..21a2fd1 100644
--- a/src/plone/app/blob/tests/replacement-types.txt
+++ b/src/plone/app/blob/tests/replacement-types.txt
@@ -77,7 +77,8 @@ Images
 ------
 
 Next a similar test is conducted for an "Image" content item:
-
+  >>> import io
+  >>> import os.path
   >>> from plone.app.blob.tests.utils import getFile
   >>> browser.open(folder.absolute_url())
   >>> browser.getLink(url='createObject?type_name=Image').click()
@@ -85,7 +86,7 @@ Next a similar test is conducted for an "Image" content item:
   'http://nohost/plone/.../portal_factory/Image/image.../edit...'
   >>> browser.getControl(name='title').value = 'Bar'
   >>> control = browser.getControl(name='image_file')
-  >>> control.add_file(getFile('image.png'), None, 'bar.gif')
+  >>> control.add_file(getFile('image.png'), None, 'image.png')
   >>> browser.getControl('Save').click()
 
   >>> browser.url
@@ -107,7 +108,8 @@ however, so we can check it was actually updated:
   >>> browser.getControl(name='title').value = 'Foobar'
   >>> browser.getControl('Replace with new image').selected = True
   >>> control = browser.getControl(name='image_file')
-  >>> control.add_file(getFile('image.gif'), None, 'foobar.gif')
+  >>> image_path = os.path.join(os.path.dirname(__file__), 'data/image.jpg')
+  >>> control.add_file(getFile('image.jpg'), None, 'image.jpg')
   >>> browser.getControl('Save').click()
 
   >>> browser.url
@@ -115,8 +117,8 @@ however, so we can check it was actually updated:
   >>> browser.contents
   '...Info...Changes saved...
    ...Foobar...
-   ...<img src="http://.../bar.../image_preview"...title="Foobar"...
-   ...ull-size...1 KB...'
+   ...<img src="http://.../bar/image_preview"...title="Foobar"...
+   ...ull-size...3 KB...'
 
 The actual image should also have been updated, of course:
 
@@ -129,47 +131,47 @@ The actual image should also have been updated, of course:
 Viewing an image should also work when browsing its URL directly, i.e.
 without the `/view` action part:
 
-  >>> gif = getFile('image.gif').read()
+  >>> jpg = getFile('image.jpg').read()
   >>> url = browser.url.replace('/view', '')
   >>> browser.open(url)
-  >>> browser.contents == gif
+  >>> browser.contents == jpg
   True
   >>> browser.headers.getheader('status').upper()
   '200 OK'
   >>> browser.headers.getheader('content-type')
-  'image/gif'
+  'image/jpeg'
   >>> browser.headers.getheader('content-disposition')
-  'inline; filename="foobar.gif"'
+  'inline; filename="image.jpg"'
 
 Appending `/index_html` should be the same:
 
   >>> browser.open(url + '/index_html')
-  >>> browser.contents == gif
+  >>> browser.contents == jpg
   True
   >>> browser.headers.getheader('status').upper()
   '200 OK'
   >>> browser.headers.getheader('content-type')
-  'image/gif'
+  'image/jpeg'
   >>> browser.headers.getheader('content-disposition')
-  'inline; filename="foobar.gif"'
+  'inline; filename="image.jpg"'
 
 Let's also check the scaled versions included the un-scaled variant:
 
   >>> browser.open(url + '/image_thumb')
   >>> browser.contents
-  'GIF87a...'
+  '\xff\xd8\xff\xe0\x00\x10JFIF...'
   >>> browser.headers.getheader('status').upper()
   '200 OK'
   >>> browser.headers.getheader('content-type')
-  'image/gif'
+  'image/jpeg'
 
   >>> browser.open(url + '/image')
   >>> browser.contents
-  'GIF89a...'
+  '\xff\xd8\xff\xe0\x00\x10JFIF...'
   >>> browser.headers.getheader('status').upper()
   '200 OK'
   >>> browser.headers.getheader('content-type')
-  'image/gif'
+  'image/jpeg'
 
 It should also be possible to remove the image. Again, for this to work the
 field must not be required.  That is not the default in Plone, however, so


