Repository: plone.locking


Branch: refs/heads/master
Date: 2017-05-16T21:30:16+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.locking/commit/ef0ed707b46ee74ed3e8a021b925b0425cdfa814

All LockingOperations method can optionally redirect to the context view

Files changed:
M CHANGES.rst
M plone/locking/browser/locking.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 9025a79..325f456 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -1,7 +1,7 @@
 Changelog
 =========
 
-2.1.4 (unreleased)
+2.2.0 (unreleased)
 ------------------
 
 Breaking changes:
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- All LockingOperations method can optionally redirect to the context view
+  [ale-rt]
 
 Bug fixes:
 
diff --git a/plone/locking/browser/locking.py b/plone/locking/browser/locking.py
index 4832f36..cbfa0c4 100644
--- a/plone/locking/browser/locking.py
+++ b/plone/locking/browser/locking.py
@@ -1,16 +1,16 @@
-
+# -*- coding: utf-8 -*-
 from Acquisition import aq_inner
-from zope.component import getUtility
-from Products.Five import BrowserView
-from Products.CMFCore.utils import getToolByName
-
 from DateTime import DateTime
 from datetime import timedelta
-
-from plone.locking.interfaces import ILockable, IRefreshableLockable
+from plone.locking.interfaces import ILockable
+from plone.locking.interfaces import IRefreshableLockable
 from plone.registry.interfaces import IRegistry
+from Products.CMFCore.utils import getToolByName
+from Products.Five import BrowserView
+from zope.component import getUtility
 from zope.i18nmessageid import MessageFactory
 
+
 _ = MessageFactory('plone')
 
 
@@ -18,6 +18,17 @@ class LockingOperations(BrowserView):
     """Lock acquisition and stealing operations
     """
 
+    def redirect(self):
+        """Redirect to the context view if needed
+        """
+        url = self.context.absolute_url()
+        registry = getUtility(IRegistry)
+        types_use_view = registry.get(
+            'plone.types_use_view_action_in_listings', [])
+        if self.context.portal_type in types_use_view:
+            url += '/view'
+        self.request.RESPONSE.redirect(url)
+
     def force_unlock(self, redirect=True):
         """Steal the lock.
 
@@ -27,35 +38,34 @@ def force_unlock(self, redirect=True):
         lockable = ILockable(self.context)
         lockable.unlock()
         if redirect:
-            url = self.context.absolute_url()
-            registry = getUtility(IRegistry)
-            types_use_view = registry.get(
-                'plone.types_use_view_action_in_listings', [])
-            if self.context.portal_type in types_use_view:
-                url += '/view'
+            self.redirect()
 
-            self.request.RESPONSE.redirect(url)
-
-    def create_lock(self):
+    def create_lock(self, redirect=True):
         """Lock the object if it is unlocked
         """
         lockable = IRefreshableLockable(self.context, None)
         if lockable is not None:
             lockable.lock()
+        if redirect:
+            self.redirect()
 
-    def safe_unlock(self):
+    def safe_unlock(self, redirect=True):
         """Unlock the object if the current user has the lock
         """
         lockable = ILockable(self.context)
         if lockable.can_safely_unlock():
             lockable.unlock()
+        if redirect:
+            self.redirect()
 
-    def refresh_lock(self):
+    def refresh_lock(self, redirect=True):
         """Reset the lock start time
         """
         lockable = IRefreshableLockable(self.context, None)
         if lockable is not None:
             lockable.refresh_lock()
+        if redirect:
+            self.redirect()
 
 
 class LockingInformation(BrowserView):
diff --git a/setup.py b/setup.py
index 72b7f7b..5a56623 100644
--- a/setup.py
+++ b/setup.py
@@ -1,6 +1,6 @@
 from setuptools import setup, find_packages
 
-version = '2.1.4.dev0'
+version = '2.2.0.dev0'
 
 setup(name='plone.locking',
       version=version,


Repository: plone.locking


Branch: refs/heads/master
Date: 2017-05-17T00:22:58+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.locking/commit/7f8076e4b97c68e2ec79c16c10abbbcd748dee68

Merge pull request #14 from plone/allow-all-methods-to-redirect

All LockingOperations method can optionally redirect to the context view

Files changed:
M CHANGES.rst
M plone/locking/browser/locking.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 9025a79..325f456 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -1,7 +1,7 @@
 Changelog
 =========
 
-2.1.4 (unreleased)
+2.2.0 (unreleased)
 ------------------
 
 Breaking changes:
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- All LockingOperations method can optionally redirect to the context view
+  [ale-rt]
 
 Bug fixes:
 
diff --git a/plone/locking/browser/locking.py b/plone/locking/browser/locking.py
index 4832f36..cbfa0c4 100644
--- a/plone/locking/browser/locking.py
+++ b/plone/locking/browser/locking.py
@@ -1,16 +1,16 @@
-
+# -*- coding: utf-8 -*-
 from Acquisition import aq_inner
-from zope.component import getUtility
-from Products.Five import BrowserView
-from Products.CMFCore.utils import getToolByName
-
 from DateTime import DateTime
 from datetime import timedelta
-
-from plone.locking.interfaces import ILockable, IRefreshableLockable
+from plone.locking.interfaces import ILockable
+from plone.locking.interfaces import IRefreshableLockable
 from plone.registry.interfaces import IRegistry
+from Products.CMFCore.utils import getToolByName
+from Products.Five import BrowserView
+from zope.component import getUtility
 from zope.i18nmessageid import MessageFactory
 
+
 _ = MessageFactory('plone')
 
 
@@ -18,6 +18,17 @@ class LockingOperations(BrowserView):
     """Lock acquisition and stealing operations
     """
 
+    def redirect(self):
+        """Redirect to the context view if needed
+        """
+        url = self.context.absolute_url()
+        registry = getUtility(IRegistry)
+        types_use_view = registry.get(
+            'plone.types_use_view_action_in_listings', [])
+        if self.context.portal_type in types_use_view:
+            url += '/view'
+        self.request.RESPONSE.redirect(url)
+
     def force_unlock(self, redirect=True):
         """Steal the lock.
 
@@ -27,35 +38,34 @@ def force_unlock(self, redirect=True):
         lockable = ILockable(self.context)
         lockable.unlock()
         if redirect:
-            url = self.context.absolute_url()
-            registry = getUtility(IRegistry)
-            types_use_view = registry.get(
-                'plone.types_use_view_action_in_listings', [])
-            if self.context.portal_type in types_use_view:
-                url += '/view'
+            self.redirect()
 
-            self.request.RESPONSE.redirect(url)
-
-    def create_lock(self):
+    def create_lock(self, redirect=True):
         """Lock the object if it is unlocked
         """
         lockable = IRefreshableLockable(self.context, None)
         if lockable is not None:
             lockable.lock()
+        if redirect:
+            self.redirect()
 
-    def safe_unlock(self):
+    def safe_unlock(self, redirect=True):
         """Unlock the object if the current user has the lock
         """
         lockable = ILockable(self.context)
         if lockable.can_safely_unlock():
             lockable.unlock()
+        if redirect:
+            self.redirect()
 
-    def refresh_lock(self):
+    def refresh_lock(self, redirect=True):
         """Reset the lock start time
         """
         lockable = IRefreshableLockable(self.context, None)
         if lockable is not None:
             lockable.refresh_lock()
+        if redirect:
+            self.redirect()
 
 
 class LockingInformation(BrowserView):
diff --git a/setup.py b/setup.py
index 72b7f7b..5a56623 100644
--- a/setup.py
+++ b/setup.py
@@ -1,6 +1,6 @@
 from setuptools import setup, find_packages
 
-version = '2.1.4.dev0'
+version = '2.2.0.dev0'
 
 setup(name='plone.locking',
       version=version,


