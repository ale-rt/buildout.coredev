Repository: plone.namedfile


Branch: refs/heads/2.0.x
Date: 2015-12-07T12:32:12+01:00
Author: Godefroid Chapelle (gotcha) <gotcha@bubblenet.be>
Commit: https://github.com/plone/plone.namedfile/commit/d2ef939d1dccb417b830d87f263ebcd736bd31ae

remove useless line

Files changed:
M plone/namedfile/scaling.py

diff --git a/plone/namedfile/scaling.py b/plone/namedfile/scaling.py
index e6c48f8..556b0b5 100644
--- a/plone/namedfile/scaling.py
+++ b/plone/namedfile/scaling.py
@@ -288,7 +288,6 @@ def modified(self):
         """ provide a callable to return the modification time of content
             items, so stored image scales can be invalidated """
         context = aq_base(self.context)
-        date = None
         try:
             if hasattr(context, 'modified') and callable(context.modified):
                 date = context.modified()


Repository: plone.namedfile


Branch: refs/heads/2.0.x
Date: 2015-12-07T12:32:28+01:00
Author: Godefroid Chapelle (gotcha) <gotcha@bubblenet.be>
Commit: https://github.com/plone/plone.namedfile/commit/901cd2f7f5ac56e0e32b7f16af49fd30be6a5f8c

stabilize tests that depends on modified time

modified is measured in milliseconds
wait 5ms to ensure modified will have changed

Files changed:
M plone/namedfile/tests/test_scaling.py

diff --git a/plone/namedfile/tests/test_scaling.py b/plone/namedfile/tests/test_scaling.py
index dafef96..9109bb4 100644
--- a/plone/namedfile/tests/test_scaling.py
+++ b/plone/namedfile/tests/test_scaling.py
@@ -1,3 +1,4 @@
+import time
 from DateTime import DateTime
 from OFS.SimpleItem import SimpleItem
 from plone.namedfile.interfaces import IImageScaleTraversable, IAvailableSizes
@@ -12,10 +13,15 @@
 from zope.component import getSiteManager, getGlobalSiteManager
 from zope.interface import implements
 
-
 import re
 
 
+def wait_to_ensure_modified():
+    # modified is measured in milliseconds
+    # wait 5ms to ensure modified will have changed
+    time.sleep(0.005)
+
+
 class IHasImage(IImageScaleTraversable):
     image = NamedImageField()
 
@@ -91,6 +97,7 @@ def testScaleInvalidation(self):
         # first get the scale of the original image
         self.scaling.available_sizes = {'foo': (23, 23)}
         foo1 = self.scaling.scale('image', scale='foo')
+        wait_to_ensure_modified()
         # now upload a new one and make sure the scale has changed
         data = getFile('image.jpg').read()
         self.item.image = NamedImage(data, 'image/jpeg', u'image.jpg')
@@ -172,6 +179,7 @@ def testScaledImageQuality(self):
         gsm = getGlobalSiteManager()
         qualitySupplier = DummyQualitySupplier()
         gsm.registerUtility(qualitySupplier.getQuality, IScaledImageQuality)
+        wait_to_ensure_modified()
         # now scale again
         bar = self.scaling.scale('image', width=100, height=80)
         size_bar = bar.data.getSize()
@@ -225,6 +233,7 @@ def testScaleInvalidation(self):
         # first view the thumbnail of the original image
         ImageScaling._sizes = {'thumb': (128, 128)}
         uid1, ext, width1, height1 = self.traverse('image/thumb')
+        wait_to_ensure_modified()
         # now upload a new one and make sure the thumbnail has changed
         data = getFile('image.jpg').read()
         self.item.image = NamedImage(data, 'image/jpeg', u'image.jpg')


