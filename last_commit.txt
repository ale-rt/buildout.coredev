Repository: archetypes.referencebrowserwidget


Branch: refs/heads/master
Date: 2015-11-25T11:05:53+01:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/archetypes.referencebrowserwidget/commit/df9eac8a3699e12d1938095d57343affb54b1d9c

Do not fail if a level of the path we are adding the object using the ReferenceBrowser widget is not accessible by the current user.

Files changed:
M CHANGES.rst
M src/archetypes/referencebrowserwidget/browser/view.py
M src/archetypes/referencebrowserwidget/tests/test_product.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 35ca3ec..3f96c56 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,9 @@ New:
 
 Fixes:
 
-- *add item here*
+- Do not fail if a level of the path we are adding the object using
+  the ReferenceBrowser widget is not accessible by the current user.
+  [gbastien]
 
 
 2.5.5 (2015-10-27)
diff --git a/src/archetypes/referencebrowserwidget/browser/view.py b/src/archetypes/referencebrowserwidget/browser/view.py
index e30e816..a28426b 100644
--- a/src/archetypes/referencebrowserwidget/browser/view.py
+++ b/src/archetypes/referencebrowserwidget/browser/view.py
@@ -226,8 +226,8 @@ def update(self):
             self.has_brain = True
             self.brainuid = at_brain.UID
         else:
-            self.at_obj = context.restrictedTraverse(
-                    urllib.unquote(self.at_url))
+            self.at_obj = context.unrestrictedTraverse(
+                urllib.unquote(self.at_url))
         self.field = self.at_obj.Schema()[self.fieldRealName]
         self.widget = self.field.widget
         self.multiValued = int(self.field.multiValued)
diff --git a/src/archetypes/referencebrowserwidget/tests/test_product.py b/src/archetypes/referencebrowserwidget/tests/test_product.py
index 5c6f9fc..37ee063 100644
--- a/src/archetypes/referencebrowserwidget/tests/test_product.py
+++ b/src/archetypes/referencebrowserwidget/tests/test_product.py
@@ -20,6 +20,9 @@
 from plone.app.layout.navigation.interfaces import INavigationRoot
 
 from Products.Archetypes.tests.utils import makeContent
+from Products.CMFCore.permissions import AccessContentsInformation
+from Products.CMFCore.permissions import View
+from Products.CMFCore.utils import _checkPermission
 from Products.CMFCore.utils import getToolByName
 from Products.PloneTestCase.PloneTestCase import default_password
 from Products.PloneTestCase.PloneTestCase import portal_owner
@@ -331,6 +334,21 @@ def test_at_url(self):
         popup = self._getPopup(obj=obj)
         self.assertEqual(popup.at_url, '/plone/layer1/layer2/with%20space')
 
+    def test_new_content_inaccessible_folder_in_path(self):
+        # make 'layer1' not accessible by current user
+        layer1 = self.portal.layer1
+        layer1.manage_permission(View, 'Manager')
+        layer1.manage_permission(AccessContentsInformation, 'Manager')
+        self.assertFalse(_checkPermission(AccessContentsInformation, layer1))
+        self.assertFalse(_checkPermission(View, layer1))
+        makeContent(self.folder, portal_type='RefBrowserDemo', id='accessible')
+        obj = self.folder['accessible']
+        fieldname = 'singleRef'
+        self.request.set('fieldName', fieldname)
+        self.request.set('fieldRealName', fieldname)
+        self.request.set('at_url', '/plone/layer1/layer2/accessible')
+        self.assertTrue(self._getPopup(obj=obj))
+
     def test_subsite_query(self):
         """searches should not be restricted to subsites"""
         self.loginAsPortalOwner()


Repository: archetypes.referencebrowserwidget


Branch: refs/heads/master
Date: 2015-11-27T13:18:43+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/archetypes.referencebrowserwidget/commit/6d490245afabe253ae54ea4f0dc8fa7b170ef61a

Merge pull request #30 from gbastien/master

Do not fail if a level of the path we are adding the object using the ReferenceBrowser widget is not accessible by the current user.

Files changed:
M CHANGES.rst
M src/archetypes/referencebrowserwidget/browser/view.py
M src/archetypes/referencebrowserwidget/tests/test_product.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 35ca3ec..3f96c56 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,9 @@ New:
 
 Fixes:
 
-- *add item here*
+- Do not fail if a level of the path we are adding the object using
+  the ReferenceBrowser widget is not accessible by the current user.
+  [gbastien]
 
 
 2.5.5 (2015-10-27)
diff --git a/src/archetypes/referencebrowserwidget/browser/view.py b/src/archetypes/referencebrowserwidget/browser/view.py
index e30e816..a28426b 100644
--- a/src/archetypes/referencebrowserwidget/browser/view.py
+++ b/src/archetypes/referencebrowserwidget/browser/view.py
@@ -226,8 +226,8 @@ def update(self):
             self.has_brain = True
             self.brainuid = at_brain.UID
         else:
-            self.at_obj = context.restrictedTraverse(
-                    urllib.unquote(self.at_url))
+            self.at_obj = context.unrestrictedTraverse(
+                urllib.unquote(self.at_url))
         self.field = self.at_obj.Schema()[self.fieldRealName]
         self.widget = self.field.widget
         self.multiValued = int(self.field.multiValued)
diff --git a/src/archetypes/referencebrowserwidget/tests/test_product.py b/src/archetypes/referencebrowserwidget/tests/test_product.py
index 5c6f9fc..37ee063 100644
--- a/src/archetypes/referencebrowserwidget/tests/test_product.py
+++ b/src/archetypes/referencebrowserwidget/tests/test_product.py
@@ -20,6 +20,9 @@
 from plone.app.layout.navigation.interfaces import INavigationRoot
 
 from Products.Archetypes.tests.utils import makeContent
+from Products.CMFCore.permissions import AccessContentsInformation
+from Products.CMFCore.permissions import View
+from Products.CMFCore.utils import _checkPermission
 from Products.CMFCore.utils import getToolByName
 from Products.PloneTestCase.PloneTestCase import default_password
 from Products.PloneTestCase.PloneTestCase import portal_owner
@@ -331,6 +334,21 @@ def test_at_url(self):
         popup = self._getPopup(obj=obj)
         self.assertEqual(popup.at_url, '/plone/layer1/layer2/with%20space')
 
+    def test_new_content_inaccessible_folder_in_path(self):
+        # make 'layer1' not accessible by current user
+        layer1 = self.portal.layer1
+        layer1.manage_permission(View, 'Manager')
+        layer1.manage_permission(AccessContentsInformation, 'Manager')
+        self.assertFalse(_checkPermission(AccessContentsInformation, layer1))
+        self.assertFalse(_checkPermission(View, layer1))
+        makeContent(self.folder, portal_type='RefBrowserDemo', id='accessible')
+        obj = self.folder['accessible']
+        fieldname = 'singleRef'
+        self.request.set('fieldName', fieldname)
+        self.request.set('fieldRealName', fieldname)
+        self.request.set('at_url', '/plone/layer1/layer2/accessible')
+        self.assertTrue(self._getPopup(obj=obj))
+
     def test_subsite_query(self):
         """searches should not be restricted to subsites"""
         self.loginAsPortalOwner()


