Repository: plone.api


Branch: refs/heads/master
Date: 2016-10-30T19:36:39+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.api/commit/529a81dea64ae31fc1ef5db72d14541ead790d16

Add failing test

Files changed:
M src/plone/api/tests/test_env.py

diff --git a/src/plone/api/tests/test_env.py b/src/plone/api/tests/test_env.py
index 9d4fc18..38910fe 100644
--- a/src/plone/api/tests/test_env.py
+++ b/src/plone/api/tests/test_env.py
@@ -370,6 +370,10 @@ def test_adopting_zope_users(self):
         api.env.adopt_user(username='admin')
         api.env.adopt_user(user=api.user.get(username='admin'))
 
+    def test_adopting_anonymous(self):
+        from AccessControl import users
+        api.env.adopt_user(user=users.nobody)
+
     def test_empty_warning(self):
         """Tests that empty roles lists get warned about."""
         from plone.api.exc import InvalidParameterError


Repository: plone.api


Branch: refs/heads/master
Date: 2016-10-30T19:52:47+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.api/commit/d7c5ea36aedcbb57e795ee54ae1a40efb31932ce

Check that we're actually changing too.

Files changed:
M src/plone/api/env.py
M src/plone/api/tests/test_env.py

diff --git a/src/plone/api/env.py b/src/plone/api/env.py
index 19d9e1b..0417472 100644
--- a/src/plone/api/env.py
+++ b/src/plone/api/env.py
@@ -34,27 +34,29 @@ def adopt_user(username=None, user=None):
     # accepts 'user' objects that are actually things like MemberData
     # objects, which AccessControl isn't so keen on.
 
+    # ZopeSecurityPolicy appears to strongly expect the user object to
+    # be Acquisition-wrapped in the acl_users from which it was taken.
+
     unwrapped = None
     plone = portal.get()
     acls = [plone.acl_users, plone.__parent__.acl_users]
 
     if username is None:
+        # Note: this path does not raise UserNotFoundError, so we can still
+        # support SpecialUser ie 'Anonymous User'
         for acl_users in acls:
             unwrapped = acl_users.getUserById(user.getId())
             if unwrapped:
+                user = unwrapped.__of__(acl_users)
                 break
     else:
         for acl_users in acls:
             unwrapped = acl_users.getUser(username)
             if unwrapped:
+                user = unwrapped.__of__(acl_users)
                 break
-
-    if unwrapped is None:
-        raise UserNotFoundError
-
-    # ZopeSecurityPolicy appears to strongly expect the user object to
-    # be Acquisition-wrapped in the acl_users from which it was taken.
-    user = unwrapped.__of__(acl_users)
+        else:
+            raise UserNotFoundError
 
     return _adopt_user(user)
 
diff --git a/src/plone/api/tests/test_env.py b/src/plone/api/tests/test_env.py
index 38910fe..e9ec1b7 100644
--- a/src/plone/api/tests/test_env.py
+++ b/src/plone/api/tests/test_env.py
@@ -371,8 +371,10 @@ def test_adopting_zope_users(self):
         api.env.adopt_user(user=api.user.get(username='admin'))
 
     def test_adopting_anonymous(self):
-        from AccessControl import users
-        api.env.adopt_user(user=users.nobody)
+        from AccessControl.users import nobody
+        self.assertNotEqual(nobody, api.user.get_current())
+        with api.env.adopt_user(user=nobody):
+            self.assertEqual(nobody, api.user.get_current())
 
     def test_empty_warning(self):
         """Tests that empty roles lists get warned about."""


Repository: plone.api


Branch: refs/heads/master
Date: 2016-10-30T19:55:26+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.api/commit/1b5a54565cdacf91ff96338bb89a499d40541dbd

changelog

Files changed:
M docs/CHANGES.rst

diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index c757d89..d6ea069 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -5,6 +5,9 @@ Changelog
 ------------------
 
 Fixes:
+- Allow adopting to a Special User. Fixes #320 - checking permissions for Anonymous User.
+  [jaroel]
+
 - Fix an AttributeError in `api.user.revoke_roles`
   [ale-rt]
 


Repository: plone.api


Branch: refs/heads/master
Date: 2016-10-31T23:41:17+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.api/commit/016c80866e585c1a324f11ee710e74af8bd81f9c

Merge pull request #327 from plone/fix-320-has_permission_anonymous

Allow adopting to a Special User

Files changed:
M docs/CHANGES.rst
M src/plone/api/env.py
M src/plone/api/tests/test_env.py

diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index c757d89..d6ea069 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -5,6 +5,9 @@ Changelog
 ------------------
 
 Fixes:
+- Allow adopting to a Special User. Fixes #320 - checking permissions for Anonymous User.
+  [jaroel]
+
 - Fix an AttributeError in `api.user.revoke_roles`
   [ale-rt]
 
diff --git a/src/plone/api/env.py b/src/plone/api/env.py
index 19d9e1b..0417472 100644
--- a/src/plone/api/env.py
+++ b/src/plone/api/env.py
@@ -34,27 +34,29 @@ def adopt_user(username=None, user=None):
     # accepts 'user' objects that are actually things like MemberData
     # objects, which AccessControl isn't so keen on.
 
+    # ZopeSecurityPolicy appears to strongly expect the user object to
+    # be Acquisition-wrapped in the acl_users from which it was taken.
+
     unwrapped = None
     plone = portal.get()
     acls = [plone.acl_users, plone.__parent__.acl_users]
 
     if username is None:
+        # Note: this path does not raise UserNotFoundError, so we can still
+        # support SpecialUser ie 'Anonymous User'
         for acl_users in acls:
             unwrapped = acl_users.getUserById(user.getId())
             if unwrapped:
+                user = unwrapped.__of__(acl_users)
                 break
     else:
         for acl_users in acls:
             unwrapped = acl_users.getUser(username)
             if unwrapped:
+                user = unwrapped.__of__(acl_users)
                 break
-
-    if unwrapped is None:
-        raise UserNotFoundError
-
-    # ZopeSecurityPolicy appears to strongly expect the user object to
-    # be Acquisition-wrapped in the acl_users from which it was taken.
-    user = unwrapped.__of__(acl_users)
+        else:
+            raise UserNotFoundError
 
     return _adopt_user(user)
 
diff --git a/src/plone/api/tests/test_env.py b/src/plone/api/tests/test_env.py
index 9d4fc18..e9ec1b7 100644
--- a/src/plone/api/tests/test_env.py
+++ b/src/plone/api/tests/test_env.py
@@ -370,6 +370,12 @@ def test_adopting_zope_users(self):
         api.env.adopt_user(username='admin')
         api.env.adopt_user(user=api.user.get(username='admin'))
 
+    def test_adopting_anonymous(self):
+        from AccessControl.users import nobody
+        self.assertNotEqual(nobody, api.user.get_current())
+        with api.env.adopt_user(user=nobody):
+            self.assertEqual(nobody, api.user.get_current())
+
     def test_empty_warning(self):
         """Tests that empty roles lists get warned about."""
         from plone.api.exc import InvalidParameterError


