Repository: Products.ExtendedPathIndex


Branch: refs/heads/master
Date: 2016-08-27T14:54:34+02:00
Author: Hanno Schlichting (hannosch) <hanno@hannosch.eu>
Commit: https://github.com/plone/Products.ExtendedPathIndex/commit/c861ef651296c0ffe3a0bfce3ef4342bea110405

Make EPI testable on its own with minimal dependencies.

Files changed:
M buildout.cfg

diff --git a/buildout.cfg b/buildout.cfg
index df0c5e7..47f982f 100644
--- a/buildout.cfg
+++ b/buildout.cfg
@@ -1,20 +1,16 @@
 [buildout]
-extends =
-    http://svn.plone.org/svn/collective/buildout/plonetest/plone-4.1.x.cfg
-
-find-links = http://dist.plone.org/thirdparty/
+extends = http://dist.plone.org/release/5-latest/versions.cfg
 
+develop = .
 package-name = Products.ExtendedPathIndex
-
-parts =
-    instance
-    test
-
-[instance]
-# We have no zcml.
-zcml -= ${buildout:package-name}
+parts = test
+versions = versions
 
 [versions]
-# Empty this one, otherwise we won't even use the current directory as
-# development egg:
 Products.ExtendedPathIndex =
+
+[test]
+recipe = zc.recipe.testrunner
+defaults = ['-s', '${buildout:package-name}', '--auto-color', '--auto-progress']
+eggs =
+    ${buildout:package-name}


Repository: Products.ExtendedPathIndex


Branch: refs/heads/master
Date: 2016-08-27T14:56:39+02:00
Author: Hanno Schlichting (hannosch) <hanno@hannosch.eu>
Commit: https://github.com/plone/Products.ExtendedPathIndex/commit/38771fc8c2ed26d97419204f44447457f4087798

Add forward compatibility with ZCatalog 4's IQueryIndex interface.

Files changed:
M CHANGES.txt
M Products/ExtendedPathIndex/ExtendedPathIndex.py
M setup.py

diff --git a/CHANGES.txt b/CHANGES.txt
index 07c08de..3d29a14 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,7 +1,7 @@
 Changelog
 =========
 
-3.1.2 (unreleased)
+3.2.0 (unreleased)
 ------------------
 
 Breaking changes:
@@ -10,7 +10,7 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Add forward compatibility with ZCatalog 4's IQueryIndex interface.
 
 Bug fixes:
 
diff --git a/Products/ExtendedPathIndex/ExtendedPathIndex.py b/Products/ExtendedPathIndex/ExtendedPathIndex.py
index fc05746..6332a50 100644
--- a/Products/ExtendedPathIndex/ExtendedPathIndex.py
+++ b/Products/ExtendedPathIndex/ExtendedPathIndex.py
@@ -6,16 +6,26 @@
 from BTrees.OIBTree import OIBTree
 from zope.interface import implementer
 
-from Products.PluginIndexes.common.util import parseIndexRequest
 from Products.PluginIndexes.common import safe_callable
 from Products.PluginIndexes.interfaces import ILimitedResultIndex
 from Products.PluginIndexes.PathIndex.PathIndex import PathIndex
 
+# Forward compatibility with ZCatalog 4.0
+try:
+    from Products.ZCatalog.query import IndexQuery
+    from Products.PluginIndexes.interfaces import IQueryIndex
+except ImportError:
+    from zope.interface import Interface
+    from Products.PluginIndexes.common.util import \
+        parseIndexRequest as IndexQuery
+    IQueryIndex = Interface
+
+
 _marker = []
 logger = logging.getLogger('ExtendedPathIndex')
 
 
-@implementer(ILimitedResultIndex)
+@implementer(ILimitedResultIndex, IQueryIndex)
 class ExtendedPathIndex(PathIndex):
     """A path index stores all path components of the physical path of an
     object.
@@ -330,11 +340,12 @@ def _apply_index(self, request, resultset=None):
              additionaly a parameter "path_level" might be passed
              to specify the level (see search())
         """
-
-        record = parseIndexRequest(request, self.id, self.query_options)
-        if record.keys == None:
+        record = IndexQuery(request, self.id, self.query_options)
+        if record.keys is None:
             return None
+        return (self.query_index(record), (self.id, ))
 
+    def query_index(self, record, resultset=None):
         level = record.get("level", 0)
         operator = record.get('operator', self.useOperator).lower()
         depth = getattr(record, 'depth', -1)  # use getattr to get 0 value
@@ -354,9 +365,8 @@ def _apply_index(self, request, resultset=None):
             result = set_func(result, rows)
 
         if result:
-            return (result, (self.id, ))
-        else:
-            return (IISet(), (self.id, ))
+            return result
+        return IISet()
 
     def getIndexSourceNames(self):
         """ return names of indexed attributes """
diff --git a/setup.py b/setup.py
index 21d0a79..2b3bc17 100644
--- a/setup.py
+++ b/setup.py
@@ -1,6 +1,6 @@
 from setuptools import setup, find_packages
 
-version = '3.1.2.dev0'
+version = '3.2.0.dev0'
 
 setup(
     name='Products.ExtendedPathIndex',


