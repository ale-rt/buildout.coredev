Repository: plone.resourceeditor


Branch: refs/heads/master
Date: 2016-03-17T09:28:27+01:00
Author: Eric BREHAULT (ebrehault) <ebrehault@gmail.com>
Commit: https://github.com/plone/plone.resourceeditor/commit/49d0a906f80a0e52d479aa7a35879b22dcd7c38c

Do not crash on saving in FilesystemResourceDirectory

Files changed:
M CHANGES.rst
M plone/resourceeditor/browser.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 2f3c977..d36f6b5 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -13,6 +13,10 @@ Fixes:
 - Cleanup code according to Plone style guide.
   [gforcada]
 
+- Do not crash on saving in FilesystemResourceDirectory, and return the file
+  content as 'tmp'.
+  [ebrehault]
+
 
 2.0.4 (2015-10-28)
 ------------------
diff --git a/plone/resourceeditor/browser.py b/plone/resourceeditor/browser.py
index 5d84f17..112ab07 100644
--- a/plone/resourceeditor/browser.py
+++ b/plone/resourceeditor/browser.py
@@ -3,6 +3,7 @@
 from DateTime import DateTime
 from OFS.Image import File
 from OFS.Image import Image
+from plone.resource.directory import FilesystemResourceDirectory
 from plone.resource.file import FilesystemFile
 from plone.resource.interfaces import IResourceDirectory
 from Products.CMFCore.utils import getToolByName
@@ -193,9 +194,14 @@ def saveFile(self, path, value):
                 out = posixpath.relpath(target, start=base_dir)
                 value = value.replace(url.strip('"').strip("'"), out)
 
-        self.context.writeFile(path, value.encode('utf-8'))
         self.request.response.setHeader('Content-Type', 'application/json')
-        return json.dumps({'success': 'save'})
+        if isinstance(self.context, FilesystemResourceDirectory):
+            # we cannot save in an FS directory, but we return the file content
+            # (useful when we compile less from the theming editor)
+            return json.dumps({'success': 'tmp', 'value': value})
+        else:
+            self.context.writeFile(path, value.encode('utf-8'))
+            return json.dumps({'success': 'save'})
 
     def addFolder(self, path, name):
         """Create a new directory on the server within the given path.


Repository: plone.resourceeditor


Branch: refs/heads/master
Date: 2016-03-17T07:53:15-05:00
Author: Nathan Van Gheem (vangheem) <vangheem@gmail.com>
Commit: https://github.com/plone/plone.resourceeditor/commit/54244e2c50d34377791843effb1f219263c13cd0

Merge pull request #17 from plone/fix-build-css-for-fs-themes

Do not crash on saving in FilesystemResourceDirectory

Files changed:
M CHANGES.rst
M plone/resourceeditor/browser.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 2f3c977..d36f6b5 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -13,6 +13,10 @@ Fixes:
 - Cleanup code according to Plone style guide.
   [gforcada]
 
+- Do not crash on saving in FilesystemResourceDirectory, and return the file
+  content as 'tmp'.
+  [ebrehault]
+
 
 2.0.4 (2015-10-28)
 ------------------
diff --git a/plone/resourceeditor/browser.py b/plone/resourceeditor/browser.py
index 5d84f17..112ab07 100644
--- a/plone/resourceeditor/browser.py
+++ b/plone/resourceeditor/browser.py
@@ -3,6 +3,7 @@
 from DateTime import DateTime
 from OFS.Image import File
 from OFS.Image import Image
+from plone.resource.directory import FilesystemResourceDirectory
 from plone.resource.file import FilesystemFile
 from plone.resource.interfaces import IResourceDirectory
 from Products.CMFCore.utils import getToolByName
@@ -193,9 +194,14 @@ def saveFile(self, path, value):
                 out = posixpath.relpath(target, start=base_dir)
                 value = value.replace(url.strip('"').strip("'"), out)
 
-        self.context.writeFile(path, value.encode('utf-8'))
         self.request.response.setHeader('Content-Type', 'application/json')
-        return json.dumps({'success': 'save'})
+        if isinstance(self.context, FilesystemResourceDirectory):
+            # we cannot save in an FS directory, but we return the file content
+            # (useful when we compile less from the theming editor)
+            return json.dumps({'success': 'tmp', 'value': value})
+        else:
+            self.context.writeFile(path, value.encode('utf-8'))
+            return json.dumps({'success': 'save'})
 
     def addFolder(self, path, name):
         """Create a new directory on the server within the given path.


