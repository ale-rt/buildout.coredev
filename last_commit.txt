Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2016-03-09T15:41:15+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/da1a915c83c0aaaf9dfc5b3a9e755394ad55032b

Revert "New Lessvar for Plone Toolbar Submenu - fix typo"

Files changed:
M CHANGES.rst
M plone/app/upgrade/tests/base.py
M plone/app/upgrade/v50/final.py
M plone/app/upgrade/v50/profiles/to_503/registry.xml
M plone/app/upgrade/v50/tests.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 68c740b..a025590 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -6,8 +6,7 @@ Changelog
 
 New:
 
-- Registry upgrades (less variables).
-  [jensens]
+- *add item here*
 
 Fixes:
 
diff --git a/plone/app/upgrade/tests/base.py b/plone/app/upgrade/tests/base.py
index b403e32..c17c50f 100644
--- a/plone/app/upgrade/tests/base.py
+++ b/plone/app/upgrade/tests/base.py
@@ -1,54 +1,50 @@
-# -*- coding: utf-8 -*-
+#
+# Base TestCase for upgrades
+#
+
 from os.path import abspath
 from os.path import dirname
 from os.path import join
+
+import transaction
+from zope.site.hooks import setSite
+
+from Testing.ZopeTestCase.sandbox import Sandboxed
 from plone.app.testing.bbb import PloneTestCase
+
 from Products.CMFCore.interfaces import IActionCategory
 from Products.CMFCore.interfaces import IActionInfo
-from Products.CMFCore.tests.base.testcase import WarningInterceptor
 from Products.CMFCore.utils import getToolByName
+from Products.CMFCore.tests.base.testcase import WarningInterceptor
 from Products.GenericSetup.context import TarballImportContext
-from zope.site.hooks import setSite
 
-import transaction
+from Products.Five import zcml
 
-#
-# Base TestCase for upgrades
-#
 
 
 class MigrationTest(PloneTestCase):
 
-    def removeActionFromTool(
-        self,
-        action_id,
-        category=None,
-        action_provider='portal_actions'
-    ):
+    def removeActionFromTool(self, action_id, category=None, action_provider='portal_actions'):
         # Removes an action from portal_actions
         tool = getToolByName(self.portal, action_provider)
         if category is None:
-            if action_id in tool.objectIds() and \
-               IActionInfo.providedBy(tool._getOb(action_id)):
+            if action_id in tool.objectIds() and IActionInfo.providedBy(tool._getOb(action_id)):
                 tool._delOb(action_id)
-        elif (
-            category in tool.objectIds() and
-            IActionCategory.providedBy(tool._getOb(category)) and
-            action_id in tool.objectIds() and
-            IActionInfo.providedBy(tool._getOb(action_id))
-        ):
-            tool._delOb(action_id)
+        else:
+            if category in tool.objectIds() and IActionCategory.providedBy(tool._getOb(category)):
+                if action_id in tool.objectIds() and IActionInfo.providedBy(tool._getOb(action_id)):
+                    tool._delOb(action_id)
 
     def addResourceToJSTool(self, resource_name):
         # Registers a resource with the javascripts tool
         tool = getToolByName(self.portal, 'portal_javascripts')
-        if resource_name not in tool.getResourceIds():
+        if not resource_name in tool.getResourceIds():
             tool.registerScript(resource_name)
 
     def addResourceToCSSTool(self, resource_name):
         # Registers a resource with the css tool
         tool = getToolByName(self.portal, 'portal_css')
-        if resource_name not in tool.getResourceIds():
+        if not resource_name in tool.getResourceIds():
             tool.registerStylesheet(resource_name)
 
     def removeSiteProperty(self, property_id):
@@ -114,6 +110,7 @@ def removeSkinLayer(self, layer, skin='Plone Default'):
             skins.addSkinSelection(skin, ','.join(path))
 
 
+
 class FunctionalUpgradeTestCase(PloneTestCase, WarningInterceptor):
 
     _setup_fixture = 0
diff --git a/plone/app/upgrade/v50/final.py b/plone/app/upgrade/v50/final.py
index 4bcfdcf..55e8afc 100644
--- a/plone/app/upgrade/v50/final.py
+++ b/plone/app/upgrade/v50/final.py
@@ -5,7 +5,6 @@
 from Products.CMFPlone.utils import safe_unicode
 from zope.component import getUtility
 from zope.component.hooks import getSite
-
 import logging
 
 
@@ -93,26 +92,6 @@ def to502(context):
     loadMigrationProfile(context, 'profile-plone.app.querystring:upgrade_to_5')
 
 
-def _fix_typo_in_toolbar_less_variable(context):
-    registry = getUtility(IRegistry)
-    _marker = list()
-
-    plv = 'plone.lessvariables'
-    value = registry[plv].get('plone-toolbar-font-secundary', _marker)
-    if (value == _marker):
-        return
-    if 'plone-toolbar-font-secondary' in registry[plv]:
-        logger.warn(
-            'Try to migrate registry value "plone-toolbar-font-secundary" to '
-            '"plone-toolbar-font-secondary", but latter already exists. '
-            'Migration to fix the typo is not executed.'
-        )
-        return
-    registry[plv]['plone-toolbar-font-secondary'] = value
-    del registry[plv]['plone-toolbar-font-secundary']
-
-
 def to503(context):
     """5.0.2 -> 5.0.3"""
     loadMigrationProfile(context, 'profile-plone.app.upgrade.v50:to503')
-    _fix_typo_in_toolbar_less_variable(context)
diff --git a/plone/app/upgrade/v50/profiles/to_503/registry.xml b/plone/app/upgrade/v50/profiles/to_503/registry.xml
index 44fa4e0..6b8dcea 100644
--- a/plone/app/upgrade/v50/profiles/to_503/registry.xml
+++ b/plone/app/upgrade/v50/profiles/to_503/registry.xml
@@ -1,28 +1,15 @@
 <?xml version="1.0"?>
 <registry>
-  <records
-      interface="Products.CMFPlone.interfaces.IBundleRegistry"
-      prefix="plone.bundles/plone-logged-in">
+  <records prefix="plone.bundles/plone-logged-in"
+           interface='Products.CMFPlone.interfaces.IBundleRegistry'>
     <value key="last_compilation">2015-02-16 00:00:00</value>
-    <value
-        key="stub_js_modules"
-        purge="False">
+    <value key="stub_js_modules" purge="False">
       <element>mockup-patterns-moment</element>
       <element>moment</element>
     </value>
   </records>
-  <records
-      interface="Products.CMFPlone.interfaces.IBundleRegistry"
-      prefix="plone.bundles/plone">
+  <records prefix="plone.bundles/plone"
+            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
     <value key="last_compilation">2015-02-16 00:00:00</value>
   </records>
-  <records
-      interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings"
-      prefix="plone">
-    <value
-        key="lessvariables"
-        purge="False">
-      <element key="plone-toolbar-submenu-width">180px</element>
-    </value>
-  </records>
 </registry>
diff --git a/plone/app/upgrade/v50/tests.py b/plone/app/upgrade/v50/tests.py
index e04f435..3fd73aa 100644
--- a/plone/app/upgrade/v50/tests.py
+++ b/plone/app/upgrade/v50/tests.py
@@ -1,5 +1,4 @@
-# -*- coding: utf-8 -*-
-from plone.app.testing import PLONE_INTEGRATION_TESTING
+from Products.CMFCore.utils import getToolByName
 from plone.app.upgrade.tests.base import MigrationTest
 from plone.app.upgrade.v50.testing import REAL_UPGRADE_FUNCTIONAL
 from plone.app.viewletmanager.interfaces import IViewletSettingsStorage
@@ -7,7 +6,6 @@
 from plone.portlets.interfaces import IPortletManager
 from plone.registry.interfaces import IRegistry
 from plone.testing.z2 import Browser
-from Products.CMFCore.utils import getToolByName
 from zope.component import getMultiAdapter
 from zope.component import getSiteManager
 from zope.component import getUtility
@@ -126,35 +124,6 @@ def testBarcelonetaThemeIsInstalled(self):
         )
 
 
-class UpgradeRegistry502to503Test(unittest.TestCase):
-    """test registry changes
-    """
-
-    layer = PLONE_INTEGRATION_TESTING
-
-    def test_migrate_less_variable_typo(self):
-        from plone.app.upgrade.v50.final import \
-            _fix_typo_in_toolbar_less_variable
-        from plone.registry.interfaces import IRegistry
-        registry = getUtility(IRegistry)
-
-        # set to a defined state
-        plv = 'plone.lessvariables'
-        registry[plv]['plone-toolbar-font-secundary'] = "Foo"
-        if 'plone-toolbar-font-secondary' in registry[plv]:
-            del registry[plv]['plone-toolbar-font-secondary']
-
-        # start testing
-        _fix_typo_in_toolbar_less_variable(self)
-        self.assertEqual(
-            registry[plv]['plone-toolbar-font-secondary'],
-            'Foo',
-        )
-        self.assertTrue(
-            'plone-toolbar-font-secundary' not in registry[plv]
-        )
-
-
 def test_suite():
     # Skip these tests on Plone 4
     from unittest import TestSuite, makeSuite
@@ -164,5 +133,4 @@ def test_suite():
         suite = TestSuite()
         suite.addTest(makeSuite(PASUpgradeTest))
         suite.addTest(makeSuite(TestFunctionalMigrations))
-        suite.addTest(makeSuite(UpgradeRegistry502to503Test))
         return suite


Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2016-03-09T15:42:13+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/7b5214b5ed4761c956ff38657ad7fe339ce5da5f

Merge pull request #70 from plone/revert-69-jensens-new-lessvar-plone-left-toolbar-level-two

Revert "New Lessvar for Plone Toolbar Submenu - fix typo"

Files changed:
M CHANGES.rst
M plone/app/upgrade/tests/base.py
M plone/app/upgrade/v50/final.py
M plone/app/upgrade/v50/profiles/to_503/registry.xml
M plone/app/upgrade/v50/tests.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 68c740b..a025590 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -6,8 +6,7 @@ Changelog
 
 New:
 
-- Registry upgrades (less variables).
-  [jensens]
+- *add item here*
 
 Fixes:
 
diff --git a/plone/app/upgrade/tests/base.py b/plone/app/upgrade/tests/base.py
index b403e32..c17c50f 100644
--- a/plone/app/upgrade/tests/base.py
+++ b/plone/app/upgrade/tests/base.py
@@ -1,54 +1,50 @@
-# -*- coding: utf-8 -*-
+#
+# Base TestCase for upgrades
+#
+
 from os.path import abspath
 from os.path import dirname
 from os.path import join
+
+import transaction
+from zope.site.hooks import setSite
+
+from Testing.ZopeTestCase.sandbox import Sandboxed
 from plone.app.testing.bbb import PloneTestCase
+
 from Products.CMFCore.interfaces import IActionCategory
 from Products.CMFCore.interfaces import IActionInfo
-from Products.CMFCore.tests.base.testcase import WarningInterceptor
 from Products.CMFCore.utils import getToolByName
+from Products.CMFCore.tests.base.testcase import WarningInterceptor
 from Products.GenericSetup.context import TarballImportContext
-from zope.site.hooks import setSite
 
-import transaction
+from Products.Five import zcml
 
-#
-# Base TestCase for upgrades
-#
 
 
 class MigrationTest(PloneTestCase):
 
-    def removeActionFromTool(
-        self,
-        action_id,
-        category=None,
-        action_provider='portal_actions'
-    ):
+    def removeActionFromTool(self, action_id, category=None, action_provider='portal_actions'):
         # Removes an action from portal_actions
         tool = getToolByName(self.portal, action_provider)
         if category is None:
-            if action_id in tool.objectIds() and \
-               IActionInfo.providedBy(tool._getOb(action_id)):
+            if action_id in tool.objectIds() and IActionInfo.providedBy(tool._getOb(action_id)):
                 tool._delOb(action_id)
-        elif (
-            category in tool.objectIds() and
-            IActionCategory.providedBy(tool._getOb(category)) and
-            action_id in tool.objectIds() and
-            IActionInfo.providedBy(tool._getOb(action_id))
-        ):
-            tool._delOb(action_id)
+        else:
+            if category in tool.objectIds() and IActionCategory.providedBy(tool._getOb(category)):
+                if action_id in tool.objectIds() and IActionInfo.providedBy(tool._getOb(action_id)):
+                    tool._delOb(action_id)
 
     def addResourceToJSTool(self, resource_name):
         # Registers a resource with the javascripts tool
         tool = getToolByName(self.portal, 'portal_javascripts')
-        if resource_name not in tool.getResourceIds():
+        if not resource_name in tool.getResourceIds():
             tool.registerScript(resource_name)
 
     def addResourceToCSSTool(self, resource_name):
         # Registers a resource with the css tool
         tool = getToolByName(self.portal, 'portal_css')
-        if resource_name not in tool.getResourceIds():
+        if not resource_name in tool.getResourceIds():
             tool.registerStylesheet(resource_name)
 
     def removeSiteProperty(self, property_id):
@@ -114,6 +110,7 @@ def removeSkinLayer(self, layer, skin='Plone Default'):
             skins.addSkinSelection(skin, ','.join(path))
 
 
+
 class FunctionalUpgradeTestCase(PloneTestCase, WarningInterceptor):
 
     _setup_fixture = 0
diff --git a/plone/app/upgrade/v50/final.py b/plone/app/upgrade/v50/final.py
index 4bcfdcf..55e8afc 100644
--- a/plone/app/upgrade/v50/final.py
+++ b/plone/app/upgrade/v50/final.py
@@ -5,7 +5,6 @@
 from Products.CMFPlone.utils import safe_unicode
 from zope.component import getUtility
 from zope.component.hooks import getSite
-
 import logging
 
 
@@ -93,26 +92,6 @@ def to502(context):
     loadMigrationProfile(context, 'profile-plone.app.querystring:upgrade_to_5')
 
 
-def _fix_typo_in_toolbar_less_variable(context):
-    registry = getUtility(IRegistry)
-    _marker = list()
-
-    plv = 'plone.lessvariables'
-    value = registry[plv].get('plone-toolbar-font-secundary', _marker)
-    if (value == _marker):
-        return
-    if 'plone-toolbar-font-secondary' in registry[plv]:
-        logger.warn(
-            'Try to migrate registry value "plone-toolbar-font-secundary" to '
-            '"plone-toolbar-font-secondary", but latter already exists. '
-            'Migration to fix the typo is not executed.'
-        )
-        return
-    registry[plv]['plone-toolbar-font-secondary'] = value
-    del registry[plv]['plone-toolbar-font-secundary']
-
-
 def to503(context):
     """5.0.2 -> 5.0.3"""
     loadMigrationProfile(context, 'profile-plone.app.upgrade.v50:to503')
-    _fix_typo_in_toolbar_less_variable(context)
diff --git a/plone/app/upgrade/v50/profiles/to_503/registry.xml b/plone/app/upgrade/v50/profiles/to_503/registry.xml
index 44fa4e0..6b8dcea 100644
--- a/plone/app/upgrade/v50/profiles/to_503/registry.xml
+++ b/plone/app/upgrade/v50/profiles/to_503/registry.xml
@@ -1,28 +1,15 @@
 <?xml version="1.0"?>
 <registry>
-  <records
-      interface="Products.CMFPlone.interfaces.IBundleRegistry"
-      prefix="plone.bundles/plone-logged-in">
+  <records prefix="plone.bundles/plone-logged-in"
+           interface='Products.CMFPlone.interfaces.IBundleRegistry'>
     <value key="last_compilation">2015-02-16 00:00:00</value>
-    <value
-        key="stub_js_modules"
-        purge="False">
+    <value key="stub_js_modules" purge="False">
       <element>mockup-patterns-moment</element>
       <element>moment</element>
     </value>
   </records>
-  <records
-      interface="Products.CMFPlone.interfaces.IBundleRegistry"
-      prefix="plone.bundles/plone">
+  <records prefix="plone.bundles/plone"
+            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
     <value key="last_compilation">2015-02-16 00:00:00</value>
   </records>
-  <records
-      interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings"
-      prefix="plone">
-    <value
-        key="lessvariables"
-        purge="False">
-      <element key="plone-toolbar-submenu-width">180px</element>
-    </value>
-  </records>
 </registry>
diff --git a/plone/app/upgrade/v50/tests.py b/plone/app/upgrade/v50/tests.py
index e04f435..3fd73aa 100644
--- a/plone/app/upgrade/v50/tests.py
+++ b/plone/app/upgrade/v50/tests.py
@@ -1,5 +1,4 @@
-# -*- coding: utf-8 -*-
-from plone.app.testing import PLONE_INTEGRATION_TESTING
+from Products.CMFCore.utils import getToolByName
 from plone.app.upgrade.tests.base import MigrationTest
 from plone.app.upgrade.v50.testing import REAL_UPGRADE_FUNCTIONAL
 from plone.app.viewletmanager.interfaces import IViewletSettingsStorage
@@ -7,7 +6,6 @@
 from plone.portlets.interfaces import IPortletManager
 from plone.registry.interfaces import IRegistry
 from plone.testing.z2 import Browser
-from Products.CMFCore.utils import getToolByName
 from zope.component import getMultiAdapter
 from zope.component import getSiteManager
 from zope.component import getUtility
@@ -126,35 +124,6 @@ def testBarcelonetaThemeIsInstalled(self):
         )
 
 
-class UpgradeRegistry502to503Test(unittest.TestCase):
-    """test registry changes
-    """
-
-    layer = PLONE_INTEGRATION_TESTING
-
-    def test_migrate_less_variable_typo(self):
-        from plone.app.upgrade.v50.final import \
-            _fix_typo_in_toolbar_less_variable
-        from plone.registry.interfaces import IRegistry
-        registry = getUtility(IRegistry)
-
-        # set to a defined state
-        plv = 'plone.lessvariables'
-        registry[plv]['plone-toolbar-font-secundary'] = "Foo"
-        if 'plone-toolbar-font-secondary' in registry[plv]:
-            del registry[plv]['plone-toolbar-font-secondary']
-
-        # start testing
-        _fix_typo_in_toolbar_less_variable(self)
-        self.assertEqual(
-            registry[plv]['plone-toolbar-font-secondary'],
-            'Foo',
-        )
-        self.assertTrue(
-            'plone-toolbar-font-secundary' not in registry[plv]
-        )
-
-
 def test_suite():
     # Skip these tests on Plone 4
     from unittest import TestSuite, makeSuite
@@ -164,5 +133,4 @@ def test_suite():
         suite = TestSuite()
         suite.addTest(makeSuite(PASUpgradeTest))
         suite.addTest(makeSuite(TestFunctionalMigrations))
-        suite.addTest(makeSuite(UpgradeRegistry502to503Test))
         return suite


