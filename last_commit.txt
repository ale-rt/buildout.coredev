Repository: icalendar


Branch: refs/heads/master
Date: 2017-04-19T00:21:16+02:00
Author: Christian Geier (geier) <geier@lostpackets.de>
Commit: https://github.com/collective/icalendar/commit/0368e16faad09f57d8a6e39480cd29a916c8a1c6

Reproduce #217

Files changed:
A src/icalendar/tests/timezone_same_start.ics
M src/icalendar/tests/test_timezoned.py

diff --git a/src/icalendar/tests/test_timezoned.py b/src/icalendar/tests/test_timezoned.py
index a24402b..858e4d5 100644
--- a/src/icalendar/tests/test_timezoned.py
+++ b/src/icalendar/tests/test_timezoned.py
@@ -318,3 +318,13 @@ def test_create_pacific_fiji(self):
             ),
             tz._tzinfos.keys()
         )
+
+    def test_same_start_date(self):
+        """testing if we can handle VTIMEZONEs whose different components
+        have the same start DTIMEs."""
+        directory = os.path.dirname(__file__)
+        with open(os.path.join(directory, 'timezone_same_start.ics'), 'rb') as fp:
+            data = fp.read()
+        cal = icalendar.Calendar.from_ical(data)
+        d = cal.subcomponents[1]['DTSTART'].dt
+        self.assertEqual(d.strftime('%c'), 'Fri Feb 24 12:00:00 2017')
diff --git a/src/icalendar/tests/timezone_same_start.ics b/src/icalendar/tests/timezone_same_start.ics
new file mode 100644
index 0000000..a221ae3
--- /dev/null
+++ b/src/icalendar/tests/timezone_same_start.ics
@@ -0,0 +1,27 @@
+BEGIN:VCALENDAR
+VERSION:2.0
+PRODID:Microsoft Exchange Server 2010
+METHOD:REQUEST
+BEGIN:VTIMEZONE
+TZID:Pacific Standard Time
+BEGIN:STANDARD
+DTSTART:16010101T020000
+RRULE:FREQ=YEARLY;INTERVAL=1;BYDAY=1SU;BYMONTH=11
+TZOFFSETFROM:-0700
+TZOFFSETTO:-0800
+END:STANDARD
+BEGIN:DAYLIGHT
+DTSTART:16010101T020000
+RRULE:FREQ=YEARLY;INTERVAL=1;BYDAY=2SU;BYMONTH=3
+TZOFFSETFROM:-0800
+TZOFFSETTO:-0700
+END:DAYLIGHT
+END:VTIMEZONE
+BEGIN:VEVENT
+SUMMARY;LANGUAGE=en-US:Test 4
+DTSTART;TZID="Pacific Standard Time":20170224T120000
+DTEND;TZID="Pacific Standard Time":20170224T123000
+DTSTAMP:20170224T180431Z
+UID:040000008200E00074C5B7101A82E0080000000090E19664858ED20100000000000000
+END:VEVENT
+END:VCALENDAR


Repository: icalendar


Branch: refs/heads/master
Date: 2017-04-19T00:21:59+02:00
Author: Christian Geier (geier) <geier@lostpackets.de>
Commit: https://github.com/collective/icalendar/commit/5c269e1082a9c62a2d14eaba29d59fea794c5d7b

Fix handling of VTIMEZONEs with subcomponents with the same DTSTARTs

For VTIMEZONE subcomponents without a TZNAME we would construct a
TZNAME from their shared TZID and DTSTART, if their DTSTART was equal,
this would lead to the same TZNAME and with that to a broken timezone
object.

Fixes #217.

Files changed:
M CHANGES.rst
M src/icalendar/cal.py
M src/icalendar/tests/test_timezoned.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 260f0ff..6faf27d 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -17,6 +17,11 @@ Bug fixes:
 - Don't break on parameter values which contain equal signs, e.g. base64 encoded
   binary data [geier]
 
+- Fix handling of VTIMEZONEs with subcomponents with the same DTSTARTs.
+  [geier]
+
+- *add item here*
+
 
 3.11.3 (2017-02-15)
 -------------------
diff --git a/src/icalendar/cal.py b/src/icalendar/cal.py
index 9ace041..5b8b915 100644
--- a/src/icalendar/cal.py
+++ b/src/icalendar/cal.py
@@ -517,19 +517,11 @@ class Timezone(Component):
     singletons = ('TZID', 'LAST-MODIFIED', 'TZURL',)
 
     @staticmethod
-    def _extract_offsets(component, zone):
+    def _extract_offsets(component, tzname):
         """extract offsets and transition times from a VTIMEZONE component
         :param component: a STANDARD or DAYLIGHT component
-        :param zone: the name of the zone, used for constructing a TZNAME if
-                     this component has none
+        :param tzname: the name of the zone
         """
-        try:
-            tzname = str(component['TZNAME'])
-        except KeyError:
-            tzname = '{0}_{1}'.format(
-                zone,
-                component['DTSTART'].to_ical().decode('utf-8')
-            )
         offsetfrom = component['TZOFFSETFROM'].td
         offsetto = component['TZOFFSETTO'].td
         dtstart = component['DTSTART'].dt
@@ -586,12 +578,14 @@ def to_tz(self):
             try:
                 tzname = str(component['TZNAME'])
             except KeyError:
-                tzname = '{0}_{1}'.format(
+                tzname = '{0}_{1}_{2}_{3}'.format(
                     zone,
-                    component['DTSTART'].to_ical().decode('utf-8')
+                    component['DTSTART'].to_ical().decode('utf-8'),
+                    component['TZOFFSETFROM'].to_ical(),  # for whatever reason this is str/unicode
+                    component['TZOFFSETTO'].to_ical(),  # for whatever reason this is str/unicode
                 )
             dst[tzname], component_transitions = self._extract_offsets(
-                component, zone
+                component, tzname
             )
             transitions.extend(component_transitions)
 
@@ -622,6 +616,7 @@ def to_tz(self):
                         if not dst[transitions[index][3]]:  # [3] is the name
                             dst_offset = osto - transitions[index][2]  # [2] is osto  # noqa
                             break
+            assert dst_offset is not False
             transition_info.append((osto, dst_offset, name))
 
         cls = type(zone, (DstTzInfo,), {
diff --git a/src/icalendar/tests/test_timezoned.py b/src/icalendar/tests/test_timezoned.py
index 858e4d5..e93abfa 100644
--- a/src/icalendar/tests/test_timezoned.py
+++ b/src/icalendar/tests/test_timezoned.py
@@ -266,39 +266,39 @@ def test_create_pacific_fiji(self):
             [(
                 datetime.timedelta(0, 43200),
                 datetime.timedelta(0),
-                'custom_Pacific/Fiji_19151026T000000'
+                'custom_Pacific/Fiji_19151026T000000_+115544_+1200'
             )] +
             3 * [(
                 datetime.timedelta(0, 46800),
                 datetime.timedelta(0, 3600),
-                'custom_Pacific/Fiji_19981101T020000'
+                'custom_Pacific/Fiji_19981101T020000_+1200_+1300'
             ), (
                 datetime.timedelta(0, 43200),
                 datetime.timedelta(0),
-                'custom_Pacific/Fiji_19990228T030000')
+                'custom_Pacific/Fiji_19990228T030000_+1300_+1200')
             ] +
             3 * [(
                 datetime.timedelta(0, 46800),
                 datetime.timedelta(0, 3600),
-                'custom_Pacific/Fiji_20101024T020000'
+                'custom_Pacific/Fiji_20101024T020000_+1200_+1300'
             ), (
                 datetime.timedelta(0, 43200),
                 datetime.timedelta(0),
-                'custom_Pacific/Fiji_19990228T030000'
+                'custom_Pacific/Fiji_19990228T030000_+1300_+1200'
             )] +
             25 * [(
                 datetime.timedelta(0, 46800),
                 datetime.timedelta(0, 3600),
-                'custom_Pacific/Fiji_20101024T020000'
+                'custom_Pacific/Fiji_20101024T020000_+1200_+1300'
             ), (
                 datetime.timedelta(0, 43200),
                 datetime.timedelta(0),
-                'custom_Pacific/Fiji_20140119T020000'
+                'custom_Pacific/Fiji_20140119T020000_+1300_+1200'
             )] +
             [(
                 datetime.timedelta(0, 46800),
                 datetime.timedelta(0, 3600),
-                'custom_Pacific/Fiji_20101024T020000'
+                'custom_Pacific/Fiji_20101024T020000_+1200_+1300'
             )]
         )
 
@@ -306,7 +306,7 @@ def test_create_pacific_fiji(self):
             (
                 datetime.timedelta(0, 46800),
                 datetime.timedelta(0, 3600),
-                'custom_Pacific/Fiji_19981101T020000'
+                'custom_Pacific/Fiji_19981101T020000_+1200_+1300'
             ),
             tz._tzinfos.keys()
         )
@@ -314,7 +314,7 @@ def test_create_pacific_fiji(self):
             (
                 datetime.timedelta(0, 43200),
                 datetime.timedelta(0),
-                'custom_Pacific/Fiji_19990228T030000'
+                'custom_Pacific/Fiji_19990228T030000_+1300_+1200'
             ),
             tz._tzinfos.keys()
         )


Repository: icalendar


Branch: refs/heads/master
Date: 2017-04-19T00:35:51+02:00
Author: Christian Geier (geier) <github@lostpackets.de>
Commit: https://github.com/collective/icalendar/commit/01f788e9907ae4cdcea15a2e4c1f846f2bb17368

Merge pull request #220 from collective/fix/217

Fix handling of VTIMEZONEs with subcomponents with the same DTSTARTs

fixes #217

Files changed:
A src/icalendar/tests/timezone_same_start.ics
M CHANGES.rst
M src/icalendar/cal.py
M src/icalendar/tests/test_timezoned.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 260f0ff..6faf27d 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -17,6 +17,11 @@ Bug fixes:
 - Don't break on parameter values which contain equal signs, e.g. base64 encoded
   binary data [geier]
 
+- Fix handling of VTIMEZONEs with subcomponents with the same DTSTARTs.
+  [geier]
+
+- *add item here*
+
 
 3.11.3 (2017-02-15)
 -------------------
diff --git a/src/icalendar/cal.py b/src/icalendar/cal.py
index 9ace041..5b8b915 100644
--- a/src/icalendar/cal.py
+++ b/src/icalendar/cal.py
@@ -517,19 +517,11 @@ class Timezone(Component):
     singletons = ('TZID', 'LAST-MODIFIED', 'TZURL',)
 
     @staticmethod
-    def _extract_offsets(component, zone):
+    def _extract_offsets(component, tzname):
         """extract offsets and transition times from a VTIMEZONE component
         :param component: a STANDARD or DAYLIGHT component
-        :param zone: the name of the zone, used for constructing a TZNAME if
-                     this component has none
+        :param tzname: the name of the zone
         """
-        try:
-            tzname = str(component['TZNAME'])
-        except KeyError:
-            tzname = '{0}_{1}'.format(
-                zone,
-                component['DTSTART'].to_ical().decode('utf-8')
-            )
         offsetfrom = component['TZOFFSETFROM'].td
         offsetto = component['TZOFFSETTO'].td
         dtstart = component['DTSTART'].dt
@@ -586,12 +578,14 @@ def to_tz(self):
             try:
                 tzname = str(component['TZNAME'])
             except KeyError:
-                tzname = '{0}_{1}'.format(
+                tzname = '{0}_{1}_{2}_{3}'.format(
                     zone,
-                    component['DTSTART'].to_ical().decode('utf-8')
+                    component['DTSTART'].to_ical().decode('utf-8'),
+                    component['TZOFFSETFROM'].to_ical(),  # for whatever reason this is str/unicode
+                    component['TZOFFSETTO'].to_ical(),  # for whatever reason this is str/unicode
                 )
             dst[tzname], component_transitions = self._extract_offsets(
-                component, zone
+                component, tzname
             )
             transitions.extend(component_transitions)
 
@@ -622,6 +616,7 @@ def to_tz(self):
                         if not dst[transitions[index][3]]:  # [3] is the name
                             dst_offset = osto - transitions[index][2]  # [2] is osto  # noqa
                             break
+            assert dst_offset is not False
             transition_info.append((osto, dst_offset, name))
 
         cls = type(zone, (DstTzInfo,), {
diff --git a/src/icalendar/tests/test_timezoned.py b/src/icalendar/tests/test_timezoned.py
index a24402b..e93abfa 100644
--- a/src/icalendar/tests/test_timezoned.py
+++ b/src/icalendar/tests/test_timezoned.py
@@ -266,39 +266,39 @@ def test_create_pacific_fiji(self):
             [(
                 datetime.timedelta(0, 43200),
                 datetime.timedelta(0),
-                'custom_Pacific/Fiji_19151026T000000'
+                'custom_Pacific/Fiji_19151026T000000_+115544_+1200'
             )] +
             3 * [(
                 datetime.timedelta(0, 46800),
                 datetime.timedelta(0, 3600),
-                'custom_Pacific/Fiji_19981101T020000'
+                'custom_Pacific/Fiji_19981101T020000_+1200_+1300'
             ), (
                 datetime.timedelta(0, 43200),
                 datetime.timedelta(0),
-                'custom_Pacific/Fiji_19990228T030000')
+                'custom_Pacific/Fiji_19990228T030000_+1300_+1200')
             ] +
             3 * [(
                 datetime.timedelta(0, 46800),
                 datetime.timedelta(0, 3600),
-                'custom_Pacific/Fiji_20101024T020000'
+                'custom_Pacific/Fiji_20101024T020000_+1200_+1300'
             ), (
                 datetime.timedelta(0, 43200),
                 datetime.timedelta(0),
-                'custom_Pacific/Fiji_19990228T030000'
+                'custom_Pacific/Fiji_19990228T030000_+1300_+1200'
             )] +
             25 * [(
                 datetime.timedelta(0, 46800),
                 datetime.timedelta(0, 3600),
-                'custom_Pacific/Fiji_20101024T020000'
+                'custom_Pacific/Fiji_20101024T020000_+1200_+1300'
             ), (
                 datetime.timedelta(0, 43200),
                 datetime.timedelta(0),
-                'custom_Pacific/Fiji_20140119T020000'
+                'custom_Pacific/Fiji_20140119T020000_+1300_+1200'
             )] +
             [(
                 datetime.timedelta(0, 46800),
                 datetime.timedelta(0, 3600),
-                'custom_Pacific/Fiji_20101024T020000'
+                'custom_Pacific/Fiji_20101024T020000_+1200_+1300'
             )]
         )
 
@@ -306,7 +306,7 @@ def test_create_pacific_fiji(self):
             (
                 datetime.timedelta(0, 46800),
                 datetime.timedelta(0, 3600),
-                'custom_Pacific/Fiji_19981101T020000'
+                'custom_Pacific/Fiji_19981101T020000_+1200_+1300'
             ),
             tz._tzinfos.keys()
         )
@@ -314,7 +314,17 @@ def test_create_pacific_fiji(self):
             (
                 datetime.timedelta(0, 43200),
                 datetime.timedelta(0),
-                'custom_Pacific/Fiji_19990228T030000'
+                'custom_Pacific/Fiji_19990228T030000_+1300_+1200'
             ),
             tz._tzinfos.keys()
         )
+
+    def test_same_start_date(self):
+        """testing if we can handle VTIMEZONEs whose different components
+        have the same start DTIMEs."""
+        directory = os.path.dirname(__file__)
+        with open(os.path.join(directory, 'timezone_same_start.ics'), 'rb') as fp:
+            data = fp.read()
+        cal = icalendar.Calendar.from_ical(data)
+        d = cal.subcomponents[1]['DTSTART'].dt
+        self.assertEqual(d.strftime('%c'), 'Fri Feb 24 12:00:00 2017')
diff --git a/src/icalendar/tests/timezone_same_start.ics b/src/icalendar/tests/timezone_same_start.ics
new file mode 100644
index 0000000..a221ae3
--- /dev/null
+++ b/src/icalendar/tests/timezone_same_start.ics
@@ -0,0 +1,27 @@
+BEGIN:VCALENDAR
+VERSION:2.0
+PRODID:Microsoft Exchange Server 2010
+METHOD:REQUEST
+BEGIN:VTIMEZONE
+TZID:Pacific Standard Time
+BEGIN:STANDARD
+DTSTART:16010101T020000
+RRULE:FREQ=YEARLY;INTERVAL=1;BYDAY=1SU;BYMONTH=11
+TZOFFSETFROM:-0700
+TZOFFSETTO:-0800
+END:STANDARD
+BEGIN:DAYLIGHT
+DTSTART:16010101T020000
+RRULE:FREQ=YEARLY;INTERVAL=1;BYDAY=2SU;BYMONTH=3
+TZOFFSETFROM:-0800
+TZOFFSETTO:-0700
+END:DAYLIGHT
+END:VTIMEZONE
+BEGIN:VEVENT
+SUMMARY;LANGUAGE=en-US:Test 4
+DTSTART;TZID="Pacific Standard Time":20170224T120000
+DTEND;TZID="Pacific Standard Time":20170224T123000
+DTSTAMP:20170224T180431Z
+UID:040000008200E00074C5B7101A82E0080000000090E19664858ED20100000000000000
+END:VEVENT
+END:VCALENDAR


