Repository: plone.stringinterp


Branch: refs/heads/master
Date: 2016-07-05T23:18:00+02:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.stringinterp/commit/d42a0cfbb905da550f74c465e89046723db439eb

Use zope.interface decorator

This not only makes code more pleasent to read,
but also makes the code python 3 compatible
(while maintaining python 2 compatibility).

Files changed:
M CHANGES.rst
M plone/stringinterp/adapters.py
M plone/stringinterp/dollarReplace.py

diff --git a/CHANGES.rst b/CHANGES.rst
index a39b66e..7d81492 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 1.1.3 (2016-05-25)
diff --git a/plone/stringinterp/adapters.py b/plone/stringinterp/adapters.py
index 8806118..22fd412 100644
--- a/plone/stringinterp/adapters.py
+++ b/plone/stringinterp/adapters.py
@@ -7,7 +7,7 @@
 Copyright (c) 2009 Plone Foundation.
 """
 
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 from zope.component import adapts
 from zope.i18n import translate
 from zope.site.hooks import getSite
@@ -30,8 +30,8 @@
 from plone.stringinterp.interfaces import IStringSubstitution
 
 
+@implementer(IStringSubstitution)
 class BaseSubstitution(object):
-    implements(IStringSubstitution)
 
     def __init__(self, context):
         self.context = context
diff --git a/plone/stringinterp/dollarReplace.py b/plone/stringinterp/dollarReplace.py
index 23f5bd1..df97aed 100644
--- a/plone/stringinterp/dollarReplace.py
+++ b/plone/stringinterp/dollarReplace.py
@@ -9,7 +9,7 @@
 
 import string
 
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import adapts, getAdapter, ComponentLookupError
 
 from AccessControl import Unauthorized
@@ -47,9 +47,9 @@ def __getitem__(self, key):
         raise KeyError(key)
 
 
+@implementer(IStringInterpolator)
 class Interpolator(object):
     adapts(IContentish)
-    implements(IStringInterpolator)
 
     def __init__(self, context):
         self._ldict = LazyDict(context)


Repository: plone.stringinterp


Branch: refs/heads/master
Date: 2016-07-10T19:01:08+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.stringinterp/commit/671a257b8b846ff1009ed1ea9faa3fb931eb08f5

Merge pull request #8 from plone/gforcada-use-zope-decorators

Use zope.interface decorator

Files changed:
M CHANGES.rst
M plone/stringinterp/adapters.py
M plone/stringinterp/dollarReplace.py

diff --git a/CHANGES.rst b/CHANGES.rst
index a39b66e..7d81492 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 1.1.3 (2016-05-25)
diff --git a/plone/stringinterp/adapters.py b/plone/stringinterp/adapters.py
index 8806118..22fd412 100644
--- a/plone/stringinterp/adapters.py
+++ b/plone/stringinterp/adapters.py
@@ -7,7 +7,7 @@
 Copyright (c) 2009 Plone Foundation.
 """
 
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 from zope.component import adapts
 from zope.i18n import translate
 from zope.site.hooks import getSite
@@ -30,8 +30,8 @@
 from plone.stringinterp.interfaces import IStringSubstitution
 
 
+@implementer(IStringSubstitution)
 class BaseSubstitution(object):
-    implements(IStringSubstitution)
 
     def __init__(self, context):
         self.context = context
diff --git a/plone/stringinterp/dollarReplace.py b/plone/stringinterp/dollarReplace.py
index 23f5bd1..df97aed 100644
--- a/plone/stringinterp/dollarReplace.py
+++ b/plone/stringinterp/dollarReplace.py
@@ -9,7 +9,7 @@
 
 import string
 
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import adapts, getAdapter, ComponentLookupError
 
 from AccessControl import Unauthorized
@@ -47,9 +47,9 @@ def __getitem__(self, key):
         raise KeyError(key)
 
 
+@implementer(IStringInterpolator)
 class Interpolator(object):
     adapts(IContentish)
-    implements(IStringInterpolator)
 
     def __init__(self, context):
         self._ldict = LazyDict(context)


