Repository: Products.Marshall


Branch: refs/heads/master
Date: 2016-07-05T23:19:36+02:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/Products.Marshall/commit/5b2929ff518555c3c05e25bc0ebcdd6f06552b53

Use zope.interface decorator

This not only makes code more pleasent to read,
but also makes the code python 3 compatible
(while maintaining python 2 compatibility).

Files changed:
M CHANGES.txt
M Products/Marshall/predicates/_base.py
M Products/Marshall/profile.py
M Products/Marshall/registry.py

diff --git a/CHANGES.txt b/CHANGES.txt
index ece66c0..09c3c14 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -4,7 +4,8 @@ Changelog
 2.2.1 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Use zope.interface decorator.
+  [gforcada]
 
 
 2.2.0 (2015-09-27)
@@ -165,4 +166,3 @@ Changelog
 
 - Initial version, see README.txt for details.
   [lots of people]
-
diff --git a/Products/Marshall/predicates/_base.py b/Products/Marshall/predicates/_base.py
index aa06155..8f9316c 100644
--- a/Products/Marshall/predicates/_base.py
+++ b/Products/Marshall/predicates/_base.py
@@ -19,7 +19,7 @@
 $Id$
 """
 
-from zope.interface import implements
+from zope.interface import implementer
 
 from OFS.SimpleItem import SimpleItem
 from App.class_init import InitializeClass
@@ -33,6 +33,7 @@
 from Products.Marshall.interfaces import IPredicate
 
 
+@implementer(IPredicate)
 class Predicate(SimpleItem):
     """ A Predicate for selecting marshallers.
 
@@ -42,8 +43,6 @@ class Predicate(SimpleItem):
     a component name to be used for that object.
     """
 
-    implements(IPredicate)
-
     meta_type = "Marshaller Predicate"
     predicate_type = None
     predicate_name = None
diff --git a/Products/Marshall/profile.py b/Products/Marshall/profile.py
index 18da7ce..4140be0 100644
--- a/Products/Marshall/profile.py
+++ b/Products/Marshall/profile.py
@@ -18,7 +18,7 @@
 """
 """
 
-from zope.interface import implements
+from zope.interface import implementer
 
 from Products.GenericSetup.interfaces import IFilesystemExporter
 from Products.GenericSetup.interfaces import IFilesystemImporter
@@ -150,10 +150,10 @@ def _getImportMapping(self):
          }
 
 
+@implementer(IFilesystemExporter, IFilesystemImporter)
 class MarshallRegistryFileExportImportAdapter(object):
     """ Designed for use when exporting / importing within a container.
     """
-    implements(IFilesystemExporter, IFilesystemImporter)
 
     def __init__(self, context):
         self.context = context
diff --git a/Products/Marshall/registry.py b/Products/Marshall/registry.py
index 343a3b6..08db3ae 100644
--- a/Products/Marshall/registry.py
+++ b/Products/Marshall/registry.py
@@ -18,7 +18,7 @@
 """
 """
 
-from zope.interface import implements
+from zope.interface import implementer
 
 from OFS.OrderedFolder import OrderedFolder
 from App.class_init import InitializeClass
@@ -71,6 +71,7 @@ def createPredicate(name, id, title, expression, component_name):
     return registry[name].create(id, title, expression, component_name)
 
 
+@implementer(IMarshallRegistry)
 class Registry(OrderedFolder, Export):
     """ A registry that holds predicates and applies them to
     objects in the hope of selecting the right one that matches
@@ -80,7 +81,6 @@ class Registry(OrderedFolder, Export):
     meta_type = 'Marshaller Registry'
     id = TOOL_ID
     security = ClassSecurityInfo()
-    implements(IMarshallRegistry)
 
     def __init__(self, id='', title=''):
         OrderedFolder.__init__(self, self.id)


Repository: Products.Marshall


Branch: refs/heads/master
Date: 2016-07-10T20:30:47+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/Products.Marshall/commit/f4b8e58227a9a9f5310503fbc5669456c9804403

Merge pull request #4 from plone/gforcada-use-zope-decorators

Use zope.interface decorator

Files changed:
M CHANGES.txt
M Products/Marshall/predicates/_base.py
M Products/Marshall/profile.py
M Products/Marshall/registry.py

diff --git a/CHANGES.txt b/CHANGES.txt
index ece66c0..09c3c14 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -4,7 +4,8 @@ Changelog
 2.2.1 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Use zope.interface decorator.
+  [gforcada]
 
 
 2.2.0 (2015-09-27)
@@ -165,4 +166,3 @@ Changelog
 
 - Initial version, see README.txt for details.
   [lots of people]
-
diff --git a/Products/Marshall/predicates/_base.py b/Products/Marshall/predicates/_base.py
index aa06155..8f9316c 100644
--- a/Products/Marshall/predicates/_base.py
+++ b/Products/Marshall/predicates/_base.py
@@ -19,7 +19,7 @@
 $Id$
 """
 
-from zope.interface import implements
+from zope.interface import implementer
 
 from OFS.SimpleItem import SimpleItem
 from App.class_init import InitializeClass
@@ -33,6 +33,7 @@
 from Products.Marshall.interfaces import IPredicate
 
 
+@implementer(IPredicate)
 class Predicate(SimpleItem):
     """ A Predicate for selecting marshallers.
 
@@ -42,8 +43,6 @@ class Predicate(SimpleItem):
     a component name to be used for that object.
     """
 
-    implements(IPredicate)
-
     meta_type = "Marshaller Predicate"
     predicate_type = None
     predicate_name = None
diff --git a/Products/Marshall/profile.py b/Products/Marshall/profile.py
index 18da7ce..4140be0 100644
--- a/Products/Marshall/profile.py
+++ b/Products/Marshall/profile.py
@@ -18,7 +18,7 @@
 """
 """
 
-from zope.interface import implements
+from zope.interface import implementer
 
 from Products.GenericSetup.interfaces import IFilesystemExporter
 from Products.GenericSetup.interfaces import IFilesystemImporter
@@ -150,10 +150,10 @@ def _getImportMapping(self):
          }
 
 
+@implementer(IFilesystemExporter, IFilesystemImporter)
 class MarshallRegistryFileExportImportAdapter(object):
     """ Designed for use when exporting / importing within a container.
     """
-    implements(IFilesystemExporter, IFilesystemImporter)
 
     def __init__(self, context):
         self.context = context
diff --git a/Products/Marshall/registry.py b/Products/Marshall/registry.py
index 343a3b6..08db3ae 100644
--- a/Products/Marshall/registry.py
+++ b/Products/Marshall/registry.py
@@ -18,7 +18,7 @@
 """
 """
 
-from zope.interface import implements
+from zope.interface import implementer
 
 from OFS.OrderedFolder import OrderedFolder
 from App.class_init import InitializeClass
@@ -71,6 +71,7 @@ def createPredicate(name, id, title, expression, component_name):
     return registry[name].create(id, title, expression, component_name)
 
 
+@implementer(IMarshallRegistry)
 class Registry(OrderedFolder, Export):
     """ A registry that holds predicates and applies them to
     objects in the hope of selecting the right one that matches
@@ -80,7 +81,6 @@ class Registry(OrderedFolder, Export):
     meta_type = 'Marshaller Registry'
     id = TOOL_ID
     security = ClassSecurityInfo()
-    implements(IMarshallRegistry)
 
     def __init__(self, id='', title=''):
         OrderedFolder.__init__(self, self.id)


