Repository: plone.subrequest


Branch: refs/heads/master
Date: 2016-04-23T18:49:56+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.subrequest/commit/e621acfd82e732b7bea772c2cbdbfa56caf361aa

Allow to pass a custom exception handler for the response.

Files changed:
M CHANGES.rst
M plone/subrequest/__init__.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 34cf5f6..729906d 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -1,12 +1,13 @@
 Changelog
 =========
 
-1.6.12 (unreleased)
--------------------
+1.7.0 (unreleased)
+------------------
 
 New:
 
-- *add item here*
+- Allow to pass a custom exception handler for the response.
+  [jensens]
 
 Fixes:
 
diff --git a/plone/subrequest/__init__.py b/plone/subrequest/__init__.py
index ec37844..65ceb24 100644
--- a/plone/subrequest/__init__.py
+++ b/plone/subrequest/__init__.py
@@ -68,7 +68,7 @@ class IDisableCSRFProtection(Interface):
 logger = getLogger('plone.subrequest')
 
 
-def subrequest(url, root=None, stdout=None):
+def subrequest(url, root=None, stdout=None, exception_handler=None):
     assert url is not None, 'You must pass a url'
     if isinstance(url, unicode):
         url = url.encode('utf-8')
@@ -156,9 +156,12 @@ def subrequest(url, root=None, stdout=None):
                 response.setBody(result)
             for key, value in request.response.cookies.items():
                 parent_request.response.cookies[key] = value
-        except Exception:
+        except Exception, e:
             logger.exception('Error handling subrequest to {0}'.format(url))
-            response.exception()
+            if exception_handler is not None:
+                exception_handler(response, e)
+            else:
+                response.exception()
         return response
     finally:
         if SAFE_WRITE_KEY in request.environ:
diff --git a/setup.py b/setup.py
index b6a614f..a1b386c 100644
--- a/setup.py
+++ b/setup.py
@@ -5,7 +5,7 @@
 import os.path
 
 
-version = '1.6.12.dev0'
+version = '1.7.0.dev0'
 
 setup(
     name='plone.subrequest',


Repository: plone.subrequest


Branch: refs/heads/master
Date: 2016-04-24T11:12:44+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.subrequest/commit/9db2b2dd401a659dfda47cad10199a66de4861d6

Merge pull request #9 from plone/custom-exception-handler

Allow to pass a custom exception handler for the response.

Files changed:
M CHANGES.rst
M plone/subrequest/__init__.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 34cf5f6..729906d 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -1,12 +1,13 @@
 Changelog
 =========
 
-1.6.12 (unreleased)
--------------------
+1.7.0 (unreleased)
+------------------
 
 New:
 
-- *add item here*
+- Allow to pass a custom exception handler for the response.
+  [jensens]
 
 Fixes:
 
diff --git a/plone/subrequest/__init__.py b/plone/subrequest/__init__.py
index ec37844..65ceb24 100644
--- a/plone/subrequest/__init__.py
+++ b/plone/subrequest/__init__.py
@@ -68,7 +68,7 @@ class IDisableCSRFProtection(Interface):
 logger = getLogger('plone.subrequest')
 
 
-def subrequest(url, root=None, stdout=None):
+def subrequest(url, root=None, stdout=None, exception_handler=None):
     assert url is not None, 'You must pass a url'
     if isinstance(url, unicode):
         url = url.encode('utf-8')
@@ -156,9 +156,12 @@ def subrequest(url, root=None, stdout=None):
                 response.setBody(result)
             for key, value in request.response.cookies.items():
                 parent_request.response.cookies[key] = value
-        except Exception:
+        except Exception, e:
             logger.exception('Error handling subrequest to {0}'.format(url))
-            response.exception()
+            if exception_handler is not None:
+                exception_handler(response, e)
+            else:
+                response.exception()
         return response
     finally:
         if SAFE_WRITE_KEY in request.environ:
diff --git a/setup.py b/setup.py
index b6a614f..a1b386c 100644
--- a/setup.py
+++ b/setup.py
@@ -5,7 +5,7 @@
 import os.path
 
 
-version = '1.6.12.dev0'
+version = '1.7.0.dev0'
 
 setup(
     name='plone.subrequest',


