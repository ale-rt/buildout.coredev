Repository: plone.protect


Branch: refs/heads/2.x
Date: 2016-02-12T22:23:15+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.protect/commit/c792890c162a58b59e60aeab088d03c7475a3695

Added plone.protect.interfaces.IDisableCSRFProtection from plone.protect 3.

It has no effect in this version.  It is only here to avoid having to
do conditional imports when you want to disable csrf protection that
is not actually in this version.

Files changed:
M CHANGES.txt
M plone/protect/interfaces.py

diff --git a/CHANGES.txt b/CHANGES.txt
index 6ee907a..0dce055 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -4,7 +4,10 @@ Changelog
 2.0.3 (unreleased)
 ------------------
 
-- Nothing changed yet.
+- Added ``plone.protect.interfaces.IDisableCSRFProtection`` from
+  plone.protect 3.  It has no effect in this version.  It is only here
+  to avoid having to do conditional imports when you want to disable
+  csrf protection that is not actually in this version.  [maurits]
 
 
 2.0.2 (2012-12-09)
diff --git a/plone/protect/interfaces.py b/plone/protect/interfaces.py
index 08ddbff..897889c 100644
--- a/plone/protect/interfaces.py
+++ b/plone/protect/interfaces.py
@@ -13,3 +13,20 @@ def verify():
         """
         Verify if the request contains a valid authenticator.
         """
+
+
+class IDisableCSRFProtection(Interface):
+    """Be able to disable on a per-request basis.
+
+    In this version of plone.protect it does nothing.
+
+    Forward port from plone.protect 3, so you do not need code like this
+    when you want to disable csrf protection:
+
+        try:
+            from plone.protect.interfaces import IDisableCSRFProtection
+        except ImportError:
+            IDisableCSRFProtection = None
+        if IDisableCSRFProtection is not None:
+            alsoProvides(request, IDisableCSRFProtection)
+    """


Repository: plone.protect


Branch: refs/heads/2.x
Date: 2016-02-12T23:07:44+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.protect/commit/f6eb1861515a7d9ec2c5273c6eccf3db17b45648

Added token to @@authenticator view.

For forward compatibility with plone.protect 3.

Files changed:
M CHANGES.txt
M plone/protect/authenticator.py
M plone/protect/interfaces.py

diff --git a/CHANGES.txt b/CHANGES.txt
index 0dce055..af24a60 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -4,6 +4,9 @@ Changelog
 2.0.3 (unreleased)
 ------------------
 
+- Added ``token`` to ``@@authenticator`` view.  For forward
+  compatibility with plone.protect 3.  [maurits]
+
 - Added ``plone.protect.interfaces.IDisableCSRFProtection`` from
   plone.protect 3.  It has no effect in this version.  It is only here
   to avoid having to do conditional imports when you want to disable
diff --git a/plone/protect/authenticator.py b/plone/protect/authenticator.py
index e3db48c..9c0c4e6 100644
--- a/plone/protect/authenticator.py
+++ b/plone/protect/authenticator.py
@@ -64,6 +64,9 @@ def createToken(extra=''):
 class AuthenticatorView(BrowserView):
     implements(IAuthenticatorView)
 
+    def token(self, extra=''):
+        return createToken(extra)
+
     def authenticator(self, extra='', name='_authenticator'):
         auth = createToken(extra)
         return '<input type="hidden" name="%s" value="%s"/>' % (
diff --git a/plone/protect/interfaces.py b/plone/protect/interfaces.py
index 897889c..04b4f05 100644
--- a/plone/protect/interfaces.py
+++ b/plone/protect/interfaces.py
@@ -3,6 +3,9 @@
 
 class IAuthenticatorView(Interface):
 
+    def token():
+        """return token value"""
+
     def authenticator():
         """Return an xhtml snippet which sets an authenticator.
 


