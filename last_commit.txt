Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2017-12-12T11:57:50+02:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.multilingual/commit/a9371792b67a21b433f7529eed1f99159113fc3f

Fix issue where rendering translation menu did write on get when translations were enabled on site with existing content

Files changed:
M src/plone/app/multilingual/browser/menu.py

diff --git a/src/plone/app/multilingual/browser/menu.py b/src/plone/app/multilingual/browser/menu.py
index 62fc31d5..a7517263 100644
--- a/src/plone/app/multilingual/browser/menu.py
+++ b/src/plone/app/multilingual/browser/menu.py
@@ -15,9 +15,10 @@
 from Products.CMFPlone.interfaces import ILanguage
 from plone.app.multilingual.interfaces import IMultiLanguageExtraOptionsSchema
 from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled
+from plone.app.multilingual.interfaces import ITG
+from plone.app.multilingual.interfaces import ITranslatable
 from plone.app.multilingual.interfaces import ITranslationManager
 from plone.app.multilingual.interfaces import LANGUAGE_INDEPENDENT
-from plone.app.multilingual.interfaces import ITranslatable
 from plone.app.multilingual.permissions import ManageTranslations
 from plone.memoize import view
 from plone.registry.interfaces import IRegistry
@@ -62,7 +63,7 @@ def getMenuItems(self, context, request):
         )
         content_translated = translated_languages(content)
         content_untranslated = untranslated_languages(content)
-        content_translation_group = ITranslationManager(content).tg
+        content_translation_group = ITG(content, '')
         if not ITranslatable.providedBy(content):
             content = None
 
@@ -80,7 +81,7 @@ def getMenuItems(self, context, request):
             )
             folder_translated = translated_languages(folder)
             folder_untranslated = untranslated_languages(folder)
-            folder_translation_group = ITranslationManager(folder).tg
+            folder_translation_group = ITG(folder, '')
         else:
             folder_url = ''
             folder_language = ''


Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2017-12-12T11:57:54+02:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.multilingual/commit/9d7d8caa7c07b7df05980991f5b088f701b88cdb

Fix issues where rendering universal link failed when context did not have translation information yet

Files changed:
M src/plone/app/multilingual/browser/menu.py

diff --git a/src/plone/app/multilingual/browser/menu.py b/src/plone/app/multilingual/browser/menu.py
index a7517263..4a97268f 100644
--- a/src/plone/app/multilingual/browser/menu.py
+++ b/src/plone/app/multilingual/browser/menu.py
@@ -232,26 +232,27 @@ def getMenuItems(self, context, request):
                 "submenu": None,
             })
             # Universal link
-            results_folder.append({
-                "title": _(
-                    u"universal_link",
-                    default=u"Universal link"
-                ),
-                "description": _(
-                    u"description_universal_link",
-                    default=u"Universal link to the content in user's preferred language"  # noqa
-                ),
-                "action": "%s/@@multilingual-universal-link/%s" % (
-                    site_url, folder_translation_group),
-                "selected": False,
-                "icon": None,
-                "extra": {
-                    "id": "_universal_folder_link",
-                    "separator": None,
-                    "class": ""
-                },
-                "submenu": None,
-            })
+            if folder_translation_group:
+                results_folder.append({
+                    "title": _(
+                        u"universal_link",
+                        default=u"Universal link"
+                    ),
+                    "description": _(
+                        u"description_universal_link",
+                        default=u"Universal link to the content in user's preferred language"  # noqa
+                    ),
+                    "action": "%s/@@multilingual-universal-link/%s" % (
+                        site_url, folder_translation_group),
+                    "selected": False,
+                    "icon": None,
+                    "extra": {
+                        "id": "_universal_folder_link",
+                        "separator": None,
+                        "class": ""
+                    },
+                    "submenu": None,
+                })
 
         if results_folder:
             # Folder translation separator
@@ -396,26 +397,27 @@ def getMenuItems(self, context, request):
                 "submenu": None,
             })
             # Universal link
-            results_content.append({
-                "title": _(
-                    u"universal_link",
-                    default=u"Universal link"
-                ),
-                "description": _(
-                    u"description_universal_link",
-                    default=u"Universal link to the content in user's preferred language"  # noqa
-                ),
-                "action": "%s/@@multilingual-universal-link/%s" % (
-                    site_url, content_translation_group),
-                "selected": False,
-                "icon": None,
-                "extra": {
-                    "id": "_universal_link",
-                    "separator": None,
-                    "class": ""
-                },
-                "submenu": None,
-            })
+            if content_translation_group:
+                results_content.append({
+                    "title": _(
+                        u"universal_link",
+                        default=u"Universal link"
+                    ),
+                    "description": _(
+                        u"description_universal_link",
+                        default=u"Universal link to the content in user's preferred language"  # noqa
+                    ),
+                    "action": "%s/@@multilingual-universal-link/%s" % (
+                        site_url, content_translation_group),
+                    "selected": False,
+                    "icon": None,
+                    "extra": {
+                        "id": "_universal_link",
+                        "separator": None,
+                        "class": ""
+                    },
+                    "submenu": None,
+                })
 
         if results_folder and results_content:
             # Item translations separator


Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2017-12-12T11:57:54+02:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.multilingual/commit/f7885a0dc0617490b3c90b873d548b9df54996a1

Fix edge case ValueError raised frm DX translatable subscriber when no translations were available

Files changed:
M src/plone/app/multilingual/dx/subscriber.py

diff --git a/src/plone/app/multilingual/dx/subscriber.py b/src/plone/app/multilingual/dx/subscriber.py
index 44f45fc3..1255ad27 100644
--- a/src/plone/app/multilingual/dx/subscriber.py
+++ b/src/plone/app/multilingual/dx/subscriber.py
@@ -103,7 +103,8 @@ def get_all_translations(self, content):
         """Return all translations excluding the just modified content"""
         content_lang = queryAdapter(content, ILanguage).get_language()
         translations = ITranslationManager(content).get_translated_languages()
-        translations.remove(content_lang)
+        while content_lang in translations:
+            translations.remove(content_lang)
         return translations
 
 


Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2017-12-12T11:57:55+02:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.multilingual/commit/5813cce77c595b4574e153e9e188145c3bafd2ad

Fix to only execute DX multilingual subscriber when multilingual in installed

Files changed:
M src/plone/app/multilingual/dx/subscriber.py

diff --git a/src/plone/app/multilingual/dx/subscriber.py b/src/plone/app/multilingual/dx/subscriber.py
index 1255ad27..7856832f 100644
--- a/src/plone/app/multilingual/dx/subscriber.py
+++ b/src/plone/app/multilingual/dx/subscriber.py
@@ -8,6 +8,7 @@
 from Products.CMFPlone.interfaces import ILanguage
 from plone.app.multilingual.interfaces import ILanguageIndependentFieldsManager
 from plone.app.multilingual.interfaces import IMultiLanguageExtraOptionsSchema
+from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled
 from plone.app.multilingual.interfaces import ITranslationManager
 from plone.dexterity.interfaces import IDexterityFTI
 from plone.registry.interfaces import IRegistry
@@ -26,6 +27,10 @@ class LanguageIndependentModifier(object):
     def __call__(self, content, event):
         """Called by the event system."""
         request = getattr(event.object, 'REQUEST', getRequest())
+
+        if not IPloneAppMultilingualInstalled.providedBy(request):
+            return
+
         translation_info = getattr(request, 'translation_info', {})
 
         if 'tg' in translation_info.keys():


Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2017-12-12T11:57:56+02:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.multilingual/commit/ff078676e3ddcba081a3184ec97a3c62c8b7760d

Update changelog

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index c8bb800a..5411b02c 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -15,6 +15,21 @@ New features:
 Bug fixes:
 
 - *add item here*
+- Fix issue where rendering translation menu did write on get when translations
+  were enabled on old site with existing content
+  [datakurre]
+
+- Fix issue where DX multilingual subscriber was executed even multilingual
+  was not installed
+  [Asko Soukka]
+
+- Fix edge case where ValueError was raised from DX translatable subscriber
+  when no translations were yet available for the content
+  [datakurre]
+
+- Fix issue where rendering universal link failed when trnanslation information
+  was not yet available for the content
+  [datakurre]
 
 
 5.1.3 (2017-11-25)


Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2017-12-14T22:34:18+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.multilingual/commit/ab08f395e1519a9a7c00b31acb011d1d9c2a4cd0

Merge pull request #298 from plone/datakurre-fixes

Fix various edge cases when multilingual was enable on old site with existing content

Files changed:
M CHANGES.rst
M src/plone/app/multilingual/browser/menu.py
M src/plone/app/multilingual/dx/subscriber.py

diff --git a/CHANGES.rst b/CHANGES.rst
index c8bb800a..5411b02c 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -15,6 +15,21 @@ New features:
 Bug fixes:
 
 - *add item here*
+- Fix issue where rendering translation menu did write on get when translations
+  were enabled on old site with existing content
+  [datakurre]
+
+- Fix issue where DX multilingual subscriber was executed even multilingual
+  was not installed
+  [Asko Soukka]
+
+- Fix edge case where ValueError was raised from DX translatable subscriber
+  when no translations were yet available for the content
+  [datakurre]
+
+- Fix issue where rendering universal link failed when trnanslation information
+  was not yet available for the content
+  [datakurre]
 
 
 5.1.3 (2017-11-25)
diff --git a/src/plone/app/multilingual/browser/menu.py b/src/plone/app/multilingual/browser/menu.py
index 62fc31d5..4a97268f 100644
--- a/src/plone/app/multilingual/browser/menu.py
+++ b/src/plone/app/multilingual/browser/menu.py
@@ -15,9 +15,10 @@
 from Products.CMFPlone.interfaces import ILanguage
 from plone.app.multilingual.interfaces import IMultiLanguageExtraOptionsSchema
 from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled
+from plone.app.multilingual.interfaces import ITG
+from plone.app.multilingual.interfaces import ITranslatable
 from plone.app.multilingual.interfaces import ITranslationManager
 from plone.app.multilingual.interfaces import LANGUAGE_INDEPENDENT
-from plone.app.multilingual.interfaces import ITranslatable
 from plone.app.multilingual.permissions import ManageTranslations
 from plone.memoize import view
 from plone.registry.interfaces import IRegistry
@@ -62,7 +63,7 @@ def getMenuItems(self, context, request):
         )
         content_translated = translated_languages(content)
         content_untranslated = untranslated_languages(content)
-        content_translation_group = ITranslationManager(content).tg
+        content_translation_group = ITG(content, '')
         if not ITranslatable.providedBy(content):
             content = None
 
@@ -80,7 +81,7 @@ def getMenuItems(self, context, request):
             )
             folder_translated = translated_languages(folder)
             folder_untranslated = untranslated_languages(folder)
-            folder_translation_group = ITranslationManager(folder).tg
+            folder_translation_group = ITG(folder, '')
         else:
             folder_url = ''
             folder_language = ''
@@ -231,26 +232,27 @@ def getMenuItems(self, context, request):
                 "submenu": None,
             })
             # Universal link
-            results_folder.append({
-                "title": _(
-                    u"universal_link",
-                    default=u"Universal link"
-                ),
-                "description": _(
-                    u"description_universal_link",
-                    default=u"Universal link to the content in user's preferred language"  # noqa
-                ),
-                "action": "%s/@@multilingual-universal-link/%s" % (
-                    site_url, folder_translation_group),
-                "selected": False,
-                "icon": None,
-                "extra": {
-                    "id": "_universal_folder_link",
-                    "separator": None,
-                    "class": ""
-                },
-                "submenu": None,
-            })
+            if folder_translation_group:
+                results_folder.append({
+                    "title": _(
+                        u"universal_link",
+                        default=u"Universal link"
+                    ),
+                    "description": _(
+                        u"description_universal_link",
+                        default=u"Universal link to the content in user's preferred language"  # noqa
+                    ),
+                    "action": "%s/@@multilingual-universal-link/%s" % (
+                        site_url, folder_translation_group),
+                    "selected": False,
+                    "icon": None,
+                    "extra": {
+                        "id": "_universal_folder_link",
+                        "separator": None,
+                        "class": ""
+                    },
+                    "submenu": None,
+                })
 
         if results_folder:
             # Folder translation separator
@@ -395,26 +397,27 @@ def getMenuItems(self, context, request):
                 "submenu": None,
             })
             # Universal link
-            results_content.append({
-                "title": _(
-                    u"universal_link",
-                    default=u"Universal link"
-                ),
-                "description": _(
-                    u"description_universal_link",
-                    default=u"Universal link to the content in user's preferred language"  # noqa
-                ),
-                "action": "%s/@@multilingual-universal-link/%s" % (
-                    site_url, content_translation_group),
-                "selected": False,
-                "icon": None,
-                "extra": {
-                    "id": "_universal_link",
-                    "separator": None,
-                    "class": ""
-                },
-                "submenu": None,
-            })
+            if content_translation_group:
+                results_content.append({
+                    "title": _(
+                        u"universal_link",
+                        default=u"Universal link"
+                    ),
+                    "description": _(
+                        u"description_universal_link",
+                        default=u"Universal link to the content in user's preferred language"  # noqa
+                    ),
+                    "action": "%s/@@multilingual-universal-link/%s" % (
+                        site_url, content_translation_group),
+                    "selected": False,
+                    "icon": None,
+                    "extra": {
+                        "id": "_universal_link",
+                        "separator": None,
+                        "class": ""
+                    },
+                    "submenu": None,
+                })
 
         if results_folder and results_content:
             # Item translations separator
diff --git a/src/plone/app/multilingual/dx/subscriber.py b/src/plone/app/multilingual/dx/subscriber.py
index 44f45fc3..7856832f 100644
--- a/src/plone/app/multilingual/dx/subscriber.py
+++ b/src/plone/app/multilingual/dx/subscriber.py
@@ -8,6 +8,7 @@
 from Products.CMFPlone.interfaces import ILanguage
 from plone.app.multilingual.interfaces import ILanguageIndependentFieldsManager
 from plone.app.multilingual.interfaces import IMultiLanguageExtraOptionsSchema
+from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled
 from plone.app.multilingual.interfaces import ITranslationManager
 from plone.dexterity.interfaces import IDexterityFTI
 from plone.registry.interfaces import IRegistry
@@ -26,6 +27,10 @@ class LanguageIndependentModifier(object):
     def __call__(self, content, event):
         """Called by the event system."""
         request = getattr(event.object, 'REQUEST', getRequest())
+
+        if not IPloneAppMultilingualInstalled.providedBy(request):
+            return
+
         translation_info = getattr(request, 'translation_info', {})
 
         if 'tg' in translation_info.keys():
@@ -103,7 +108,8 @@ def get_all_translations(self, content):
         """Return all translations excluding the just modified content"""
         content_lang = queryAdapter(content, ILanguage).get_language()
         translations = ITranslationManager(content).get_translated_languages()
-        translations.remove(content_lang)
+        while content_lang in translations:
+            translations.remove(content_lang)
         return translations
 
 


