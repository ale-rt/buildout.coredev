Repository: plone.cachepurging


Branch: refs/heads/master
Date: 2016-07-05T23:14:55+02:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.cachepurging/commit/96adf016c04d922dfcfd6bf72f2134f9a600c248

Use zope.interface decorator

This not only makes code more pleasent to read,
but also makes the code python 3 compatible
(while maintaining python 2 compatibility).

Files changed:
M CHANGES.rst
M plone/cachepurging/paths.py
M plone/cachepurging/purger.py
M plone/cachepurging/rewrite.py
M plone/cachepurging/tests/test_hooks.py
M plone/cachepurging/tests/test_traversable_paths.py
M plone/cachepurging/tests/test_utils.py
M plone/cachepurging/tests/test_views.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 7fbbf32..deb2f31 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ New:
 
 Fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 1.0.11 (2016-01-08)
diff --git a/plone/cachepurging/paths.py b/plone/cachepurging/paths.py
index 2972526..37f0878 100644
--- a/plone/cachepurging/paths.py
+++ b/plone/cachepurging/paths.py
@@ -1,15 +1,14 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import adapts
 
 from z3c.caching.interfaces import IPurgePaths
 
 from OFS.interfaces import ITraversable
 
+@implementer(IPurgePaths)
 class TraversablePurgePaths(object):
     """Default purge for OFS.Traversable-style objects
     """
-
-    implements(IPurgePaths)
     adapts(ITraversable)
 
     def __init__(self, context):
diff --git a/plone/cachepurging/purger.py b/plone/cachepurging/purger.py
index ab69e44..25c5ef6 100644
--- a/plone/cachepurging/purger.py
+++ b/plone/cachepurging/purger.py
@@ -22,7 +22,7 @@
 import urlparse
 
 from App.config import getConfiguration
-from zope.interface import implements
+from zope.interface import implementer
 
 from plone.cachepurging.interfaces import IPurger
 
@@ -59,10 +59,9 @@ def connect(self):
             raise ValueError("Invalid scheme '%s'" % self.scheme)
 
 
+@implementer(IPurger)
 class DefaultPurger(object):
 
-    implements(IPurger)
-
     def __init__(self, factory=Connection, timeout=30, backlog=200,
             errorHeaders=('x-squid-error', ), http_1_1=True):
         self.factory = factory
diff --git a/plone/cachepurging/rewrite.py b/plone/cachepurging/rewrite.py
index f2360bc..f66f707 100644
--- a/plone/cachepurging/rewrite.py
+++ b/plone/cachepurging/rewrite.py
@@ -1,6 +1,6 @@
 import urlparse
 
-from zope.interface import Interface, implements
+from zope.interface import Interface, implementer
 from zope.component import adapts, queryUtility
 
 from plone.registry.interfaces import IRegistry
@@ -8,11 +8,10 @@
 from plone.cachepurging.interfaces import IPurgePathRewriter
 from plone.cachepurging.interfaces import ICachePurgingSettings
 
+@implementer(IPurgePathRewriter)
 class DefaultRewriter(object):
     """Default rewriter, which is aware of virtual hosting
     """
-
-    implements(IPurgePathRewriter)
     adapts(Interface)
 
     def __init__(self, request):
diff --git a/plone/cachepurging/tests/test_hooks.py b/plone/cachepurging/tests/test_hooks.py
index 1024703..33ae519 100644
--- a/plone/cachepurging/tests/test_hooks.py
+++ b/plone/cachepurging/tests/test_hooks.py
@@ -1,7 +1,7 @@
 import unittest
 import zope.component.testing
 
-from zope.interface import implements
+from zope.interface import implementer
 from zope.interface import alsoProvides
 
 from zope.component import adapts
@@ -60,8 +60,8 @@ def test_no_request(self):
         settings.enabled = True
         settings.cachingProxies = ('http://localhost:1234',)
 
+        @implementer(IPurgePaths)
         class FauxPurgePaths(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -94,8 +94,8 @@ def test_request_not_annotatable(self):
         settings.enabled = True
         settings.cachingProxies = ('http://localhost:1234',)
 
+        @implementer(IPurgePaths)
         class FauxPurgePaths(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -122,8 +122,8 @@ def test_no_registry(self):
         alsoProvides(request, IAttributeAnnotatable)
         setRequest(request)
 
+        @implementer(IPurgePaths)
         class FauxPurgePaths(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -156,8 +156,8 @@ def test_caching_disabled(self):
         settings.enabled = False
         settings.cachingProxies = ('http://localhost:1234',)
 
+        @implementer(IPurgePaths)
         class FauxPurgePaths(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -210,8 +210,8 @@ def test_enabled(self):
         settings.enabled = True
         settings.cachingProxies = ('http://localhost:1234',)
 
+        @implementer(IPurgePaths)
         class FauxPurgePaths(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -251,8 +251,8 @@ def test_request_not_annotatable(self):
         settings.enabled = True
         settings.cachingProxies = ('http://localhost:1234',)
 
+        @implementer(IPurger)
         class FauxPurger(object):
-            implements(IPurger)
 
             def __init__(self):
                 self.purged = []
@@ -279,8 +279,8 @@ def test_no_path_key(self):
         settings.enabled = True
         settings.cachingProxies = ('http://localhost:1234',)
 
+        @implementer(IPurger)
         class FauxPurger(object):
-            implements(IPurger)
 
             def __init__(self):
                 self.purged = []
@@ -309,8 +309,8 @@ def test_no_paths(self):
         settings.enabled = True
         settings.cachingProxies = ('http://localhost:1234',)
 
+        @implementer(IPurger)
         class FauxPurger(object):
-            implements(IPurger)
 
             def __init__(self):
                 self.purged = []
@@ -331,8 +331,8 @@ def test_no_registry(self):
 
         IAnnotations(request)['plone.cachepurging.urls'] = set(['/foo', '/bar'])
 
+        @implementer(IPurger)
         class FauxPurger(object):
-            implements(IPurger)
 
             def __init__(self):
                 self.purged = []
@@ -361,8 +361,8 @@ def test_caching_disabled(self):
         settings.enabled = False
         settings.cachingProxies = ('http://localhost:1234',)
 
+        @implementer(IPurger)
         class FauxPurger(object):
-            implements(IPurger)
 
             def __init__(self):
                 self.purged = []
@@ -410,8 +410,8 @@ def test_purge(self):
         settings.enabled = True
         settings.cachingProxies = ('http://localhost:1234',)
 
+        @implementer(IPurger)
         class FauxPurger(object):
-            implements(IPurger)
 
             def __init__(self):
                 self.purged = []
diff --git a/plone/cachepurging/tests/test_traversable_paths.py b/plone/cachepurging/tests/test_traversable_paths.py
index 88c3d34..242c024 100644
--- a/plone/cachepurging/tests/test_traversable_paths.py
+++ b/plone/cachepurging/tests/test_traversable_paths.py
@@ -1,12 +1,12 @@
 import unittest
 
-from zope.interface import implements
+from zope.interface import implementer
 
 from plone.cachepurging.paths import TraversablePurgePaths
 from OFS.interfaces import ITraversable
 
+@implementer(ITraversable)
 class FauxTraversable(object):
-    implements(ITraversable)
 
     def virtual_url_path(self):
         return 'foo'
diff --git a/plone/cachepurging/tests/test_utils.py b/plone/cachepurging/tests/test_utils.py
index ba3d603..edaa92c 100644
--- a/plone/cachepurging/tests/test_utils.py
+++ b/plone/cachepurging/tests/test_utils.py
@@ -1,7 +1,7 @@
 import unittest
 import zope.component.testing
 
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import provideUtility
 from zope.component import provideAdapter
 from zope.component import adapts
@@ -100,8 +100,8 @@ def test_no_purge_paths(self):
 
     def test_empty_relative_paths(self):
 
+        @implementer(IPurgePaths)
         class FauxPurgePaths(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -118,8 +118,8 @@ def getAbsolutePaths(self):
         self.assertEqual([], list(utils.getPathsToPurge(self.context, self.request)))
 
     def test_no_rewriter(self):
+        @implementer(IPurgePaths)
         class FauxPurgePaths(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -137,8 +137,8 @@ def getAbsolutePaths(self):
             list(utils.getPathsToPurge(self.context, self.request)))
 
     def test_test_rewriter(self):
+        @implementer(IPurgePaths)
         class FauxPurgePaths(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -152,8 +152,8 @@ def getAbsolutePaths(self):
 
         provideAdapter(FauxPurgePaths, name="test1")
 
+        @implementer(IPurgePathRewriter)
         class DefaultRewriter(object):
-            implements(IPurgePathRewriter)
             adapts(FauxRequest)
 
             def __init__(self, request):
@@ -170,8 +170,8 @@ def __call__(self, path):
             list(utils.getPathsToPurge(self.context, self.request)))
 
     def test_multiple_purge_paths(self):
+        @implementer(IPurgePaths)
         class FauxPurgePaths1(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -185,8 +185,8 @@ def getAbsolutePaths(self):
 
         provideAdapter(FauxPurgePaths1, name="test1")
 
+        @implementer(IPurgePaths)
         class FauxPurgePaths2(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -200,8 +200,8 @@ def getAbsolutePaths(self):
 
         provideAdapter(FauxPurgePaths2, name="test2")
 
+        @implementer(IPurgePathRewriter)
         class DefaultRewriter(object):
-            implements(IPurgePathRewriter)
             adapts(FauxRequest)
 
             def __init__(self, request):
@@ -217,8 +217,8 @@ def __call__(self, path):
             list(utils.getPathsToPurge(self.context, self.request)))
 
     def test_rewriter_abort(self):
+        @implementer(IPurgePaths)
         class FauxPurgePaths1(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -232,8 +232,8 @@ def getAbsolutePaths(self):
 
         provideAdapter(FauxPurgePaths1, name="test1")
 
+        @implementer(IPurgePaths)
         class FauxPurgePaths2(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -247,8 +247,8 @@ def getAbsolutePaths(self):
 
         provideAdapter(FauxPurgePaths2, name="test2")
 
+        @implementer(IPurgePathRewriter)
         class DefaultRewriter(object):
-            implements(IPurgePathRewriter)
             adapts(FauxRequest)
 
             def __init__(self, request):
diff --git a/plone/cachepurging/tests/test_views.py b/plone/cachepurging/tests/test_views.py
index 41d7c0b..e06ffac 100644
--- a/plone/cachepurging/tests/test_views.py
+++ b/plone/cachepurging/tests/test_views.py
@@ -1,7 +1,7 @@
 import unittest
 import zope.component.testing
 
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import adapts
 from zope.component import adapter
 from zope.component import provideUtility
@@ -82,8 +82,8 @@ def setUp(self):
         self.settings.enabled = True
         self.settings.cachingProxies = ('http://localhost:1234',)
 
+        @implementer(IPurgePaths)
         class FauxPurgePaths(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -97,8 +97,8 @@ def getAbsolutePaths(self):
 
         provideAdapter(FauxPurgePaths, name="test1")
 
+        @implementer(IPurger)
         class FauxPurger(object):
-            implements(IPurger)
 
             def purgeSync(self, url, httpVerb='PURGE'):
                 return "200 OK", "cached", None


Repository: plone.cachepurging


Branch: refs/heads/master
Date: 2016-07-07T00:50:33+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.cachepurging/commit/bf1e1bef4519abcddcaf1f90bc2311de0cedae82

Merge pull request #6 from plone/gforcada-use-zope-decorators

Use zope.interface decorator

Files changed:
M CHANGES.rst
M plone/cachepurging/paths.py
M plone/cachepurging/purger.py
M plone/cachepurging/rewrite.py
M plone/cachepurging/tests/test_hooks.py
M plone/cachepurging/tests/test_traversable_paths.py
M plone/cachepurging/tests/test_utils.py
M plone/cachepurging/tests/test_views.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 7fbbf32..deb2f31 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ New:
 
 Fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 1.0.11 (2016-01-08)
diff --git a/plone/cachepurging/paths.py b/plone/cachepurging/paths.py
index 2972526..37f0878 100644
--- a/plone/cachepurging/paths.py
+++ b/plone/cachepurging/paths.py
@@ -1,15 +1,14 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import adapts
 
 from z3c.caching.interfaces import IPurgePaths
 
 from OFS.interfaces import ITraversable
 
+@implementer(IPurgePaths)
 class TraversablePurgePaths(object):
     """Default purge for OFS.Traversable-style objects
     """
-
-    implements(IPurgePaths)
     adapts(ITraversable)
 
     def __init__(self, context):
diff --git a/plone/cachepurging/purger.py b/plone/cachepurging/purger.py
index ab69e44..25c5ef6 100644
--- a/plone/cachepurging/purger.py
+++ b/plone/cachepurging/purger.py
@@ -22,7 +22,7 @@
 import urlparse
 
 from App.config import getConfiguration
-from zope.interface import implements
+from zope.interface import implementer
 
 from plone.cachepurging.interfaces import IPurger
 
@@ -59,10 +59,9 @@ def connect(self):
             raise ValueError("Invalid scheme '%s'" % self.scheme)
 
 
+@implementer(IPurger)
 class DefaultPurger(object):
 
-    implements(IPurger)
-
     def __init__(self, factory=Connection, timeout=30, backlog=200,
             errorHeaders=('x-squid-error', ), http_1_1=True):
         self.factory = factory
diff --git a/plone/cachepurging/rewrite.py b/plone/cachepurging/rewrite.py
index f2360bc..f66f707 100644
--- a/plone/cachepurging/rewrite.py
+++ b/plone/cachepurging/rewrite.py
@@ -1,6 +1,6 @@
 import urlparse
 
-from zope.interface import Interface, implements
+from zope.interface import Interface, implementer
 from zope.component import adapts, queryUtility
 
 from plone.registry.interfaces import IRegistry
@@ -8,11 +8,10 @@
 from plone.cachepurging.interfaces import IPurgePathRewriter
 from plone.cachepurging.interfaces import ICachePurgingSettings
 
+@implementer(IPurgePathRewriter)
 class DefaultRewriter(object):
     """Default rewriter, which is aware of virtual hosting
     """
-
-    implements(IPurgePathRewriter)
     adapts(Interface)
 
     def __init__(self, request):
diff --git a/plone/cachepurging/tests/test_hooks.py b/plone/cachepurging/tests/test_hooks.py
index 1024703..33ae519 100644
--- a/plone/cachepurging/tests/test_hooks.py
+++ b/plone/cachepurging/tests/test_hooks.py
@@ -1,7 +1,7 @@
 import unittest
 import zope.component.testing
 
-from zope.interface import implements
+from zope.interface import implementer
 from zope.interface import alsoProvides
 
 from zope.component import adapts
@@ -60,8 +60,8 @@ def test_no_request(self):
         settings.enabled = True
         settings.cachingProxies = ('http://localhost:1234',)
 
+        @implementer(IPurgePaths)
         class FauxPurgePaths(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -94,8 +94,8 @@ def test_request_not_annotatable(self):
         settings.enabled = True
         settings.cachingProxies = ('http://localhost:1234',)
 
+        @implementer(IPurgePaths)
         class FauxPurgePaths(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -122,8 +122,8 @@ def test_no_registry(self):
         alsoProvides(request, IAttributeAnnotatable)
         setRequest(request)
 
+        @implementer(IPurgePaths)
         class FauxPurgePaths(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -156,8 +156,8 @@ def test_caching_disabled(self):
         settings.enabled = False
         settings.cachingProxies = ('http://localhost:1234',)
 
+        @implementer(IPurgePaths)
         class FauxPurgePaths(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -210,8 +210,8 @@ def test_enabled(self):
         settings.enabled = True
         settings.cachingProxies = ('http://localhost:1234',)
 
+        @implementer(IPurgePaths)
         class FauxPurgePaths(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -251,8 +251,8 @@ def test_request_not_annotatable(self):
         settings.enabled = True
         settings.cachingProxies = ('http://localhost:1234',)
 
+        @implementer(IPurger)
         class FauxPurger(object):
-            implements(IPurger)
 
             def __init__(self):
                 self.purged = []
@@ -279,8 +279,8 @@ def test_no_path_key(self):
         settings.enabled = True
         settings.cachingProxies = ('http://localhost:1234',)
 
+        @implementer(IPurger)
         class FauxPurger(object):
-            implements(IPurger)
 
             def __init__(self):
                 self.purged = []
@@ -309,8 +309,8 @@ def test_no_paths(self):
         settings.enabled = True
         settings.cachingProxies = ('http://localhost:1234',)
 
+        @implementer(IPurger)
         class FauxPurger(object):
-            implements(IPurger)
 
             def __init__(self):
                 self.purged = []
@@ -331,8 +331,8 @@ def test_no_registry(self):
 
         IAnnotations(request)['plone.cachepurging.urls'] = set(['/foo', '/bar'])
 
+        @implementer(IPurger)
         class FauxPurger(object):
-            implements(IPurger)
 
             def __init__(self):
                 self.purged = []
@@ -361,8 +361,8 @@ def test_caching_disabled(self):
         settings.enabled = False
         settings.cachingProxies = ('http://localhost:1234',)
 
+        @implementer(IPurger)
         class FauxPurger(object):
-            implements(IPurger)
 
             def __init__(self):
                 self.purged = []
@@ -410,8 +410,8 @@ def test_purge(self):
         settings.enabled = True
         settings.cachingProxies = ('http://localhost:1234',)
 
+        @implementer(IPurger)
         class FauxPurger(object):
-            implements(IPurger)
 
             def __init__(self):
                 self.purged = []
diff --git a/plone/cachepurging/tests/test_traversable_paths.py b/plone/cachepurging/tests/test_traversable_paths.py
index 88c3d34..242c024 100644
--- a/plone/cachepurging/tests/test_traversable_paths.py
+++ b/plone/cachepurging/tests/test_traversable_paths.py
@@ -1,12 +1,12 @@
 import unittest
 
-from zope.interface import implements
+from zope.interface import implementer
 
 from plone.cachepurging.paths import TraversablePurgePaths
 from OFS.interfaces import ITraversable
 
+@implementer(ITraversable)
 class FauxTraversable(object):
-    implements(ITraversable)
 
     def virtual_url_path(self):
         return 'foo'
diff --git a/plone/cachepurging/tests/test_utils.py b/plone/cachepurging/tests/test_utils.py
index ba3d603..edaa92c 100644
--- a/plone/cachepurging/tests/test_utils.py
+++ b/plone/cachepurging/tests/test_utils.py
@@ -1,7 +1,7 @@
 import unittest
 import zope.component.testing
 
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import provideUtility
 from zope.component import provideAdapter
 from zope.component import adapts
@@ -100,8 +100,8 @@ def test_no_purge_paths(self):
 
     def test_empty_relative_paths(self):
 
+        @implementer(IPurgePaths)
         class FauxPurgePaths(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -118,8 +118,8 @@ def getAbsolutePaths(self):
         self.assertEqual([], list(utils.getPathsToPurge(self.context, self.request)))
 
     def test_no_rewriter(self):
+        @implementer(IPurgePaths)
         class FauxPurgePaths(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -137,8 +137,8 @@ def getAbsolutePaths(self):
             list(utils.getPathsToPurge(self.context, self.request)))
 
     def test_test_rewriter(self):
+        @implementer(IPurgePaths)
         class FauxPurgePaths(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -152,8 +152,8 @@ def getAbsolutePaths(self):
 
         provideAdapter(FauxPurgePaths, name="test1")
 
+        @implementer(IPurgePathRewriter)
         class DefaultRewriter(object):
-            implements(IPurgePathRewriter)
             adapts(FauxRequest)
 
             def __init__(self, request):
@@ -170,8 +170,8 @@ def __call__(self, path):
             list(utils.getPathsToPurge(self.context, self.request)))
 
     def test_multiple_purge_paths(self):
+        @implementer(IPurgePaths)
         class FauxPurgePaths1(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -185,8 +185,8 @@ def getAbsolutePaths(self):
 
         provideAdapter(FauxPurgePaths1, name="test1")
 
+        @implementer(IPurgePaths)
         class FauxPurgePaths2(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -200,8 +200,8 @@ def getAbsolutePaths(self):
 
         provideAdapter(FauxPurgePaths2, name="test2")
 
+        @implementer(IPurgePathRewriter)
         class DefaultRewriter(object):
-            implements(IPurgePathRewriter)
             adapts(FauxRequest)
 
             def __init__(self, request):
@@ -217,8 +217,8 @@ def __call__(self, path):
             list(utils.getPathsToPurge(self.context, self.request)))
 
     def test_rewriter_abort(self):
+        @implementer(IPurgePaths)
         class FauxPurgePaths1(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -232,8 +232,8 @@ def getAbsolutePaths(self):
 
         provideAdapter(FauxPurgePaths1, name="test1")
 
+        @implementer(IPurgePaths)
         class FauxPurgePaths2(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -247,8 +247,8 @@ def getAbsolutePaths(self):
 
         provideAdapter(FauxPurgePaths2, name="test2")
 
+        @implementer(IPurgePathRewriter)
         class DefaultRewriter(object):
-            implements(IPurgePathRewriter)
             adapts(FauxRequest)
 
             def __init__(self, request):
diff --git a/plone/cachepurging/tests/test_views.py b/plone/cachepurging/tests/test_views.py
index 41d7c0b..e06ffac 100644
--- a/plone/cachepurging/tests/test_views.py
+++ b/plone/cachepurging/tests/test_views.py
@@ -1,7 +1,7 @@
 import unittest
 import zope.component.testing
 
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import adapts
 from zope.component import adapter
 from zope.component import provideUtility
@@ -82,8 +82,8 @@ def setUp(self):
         self.settings.enabled = True
         self.settings.cachingProxies = ('http://localhost:1234',)
 
+        @implementer(IPurgePaths)
         class FauxPurgePaths(object):
-            implements(IPurgePaths)
             adapts(FauxContext)
 
             def __init__(self, context):
@@ -97,8 +97,8 @@ def getAbsolutePaths(self):
 
         provideAdapter(FauxPurgePaths, name="test1")
 
+        @implementer(IPurger)
         class FauxPurger(object):
-            implements(IPurger)
 
             def purgeSync(self, url, httpVerb='PURGE'):
                 return "200 OK", "cached", None


