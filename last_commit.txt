Repository: plone.app.uuid


Branch: refs/heads/master
Date: 2017-02-02T22:31:30+01:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.uuid/commit/d560469257975a5dd0e19fc13410ee06fd9aae7e

Fix test for 404 response

Files changed:
M CHANGES.rst
M plone/app/uuid/tests.py

diff --git a/CHANGES.rst b/CHANGES.rst
index ca7a892..53f972a 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Fix test in Zope 4.
+  [davisagli]
 
 
 1.1.2 (2016-11-17)
diff --git a/plone/app/uuid/tests.py b/plone/app/uuid/tests.py
index 420f0af..9bdb906 100644
--- a/plone/app/uuid/tests.py
+++ b/plone/app/uuid/tests.py
@@ -151,8 +151,6 @@ def test_redirect_to_uuid_view(self):
         self.assertEqual(d1.absolute_url(), browser.url)
 
     def test_redirect_to_uuid_invalid_uuid(self):
-        from mechanize import HTTPError
-
         portal = self.layer['portal']
         app = self.layer['app']
 
@@ -166,14 +164,13 @@ def test_redirect_to_uuid_invalid_uuid(self):
 
         from plone.testing.z2 import Browser
         browser = Browser(app)
+        browser.handleErrors = False
         browser.addHeader(
             'Authorization',
             'Basic {0}:{1}'.format(TEST_USER_ID, TEST_USER_PASSWORD, )
         )
 
-        try:
-            url = '{0}/@@redirect-to-uuid/gibberish'
+        url = '{0}/@@redirect-to-uuid/gibberish'
+        from zExceptions import NotFound
+        with self.assertRaises(NotFound):
             browser.open(url.format(portal.absolute_url()))
-            self.fail('No error raised')
-        except HTTPError, e:
-            self.assertEqual(e.code, 404)


Repository: plone.app.uuid


Branch: refs/heads/master
Date: 2017-02-07T08:21:51+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.uuid/commit/ed74ba77a97da4e60fe8517d3971af02949b7d10

fix test to work with new exceptions

Files changed:
M plone/app/uuid/tests.py

diff --git a/plone/app/uuid/tests.py b/plone/app/uuid/tests.py
index 9bdb906..0933b50 100644
--- a/plone/app/uuid/tests.py
+++ b/plone/app/uuid/tests.py
@@ -171,6 +171,6 @@ def test_redirect_to_uuid_invalid_uuid(self):
         )
 
         url = '{0}/@@redirect-to-uuid/gibberish'
-        from zExceptions import NotFound
+        from zope.publisher.interfaces import NotFound
         with self.assertRaises(NotFound):
             browser.open(url.format(portal.absolute_url()))


Repository: plone.app.uuid


Branch: refs/heads/master
Date: 2017-02-08T16:27:42+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.uuid/commit/b82cfa2b5d4629fba6dd2522cea587168bb12203

Merge pull request #3 from plone/plonezope4

Fix test for 404 response (Zope4)

Files changed:
M CHANGES.rst
M plone/app/uuid/tests.py

diff --git a/CHANGES.rst b/CHANGES.rst
index ca7a892..53f972a 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Fix test in Zope 4.
+  [davisagli]
 
 
 1.1.2 (2016-11-17)
diff --git a/plone/app/uuid/tests.py b/plone/app/uuid/tests.py
index 420f0af..0933b50 100644
--- a/plone/app/uuid/tests.py
+++ b/plone/app/uuid/tests.py
@@ -151,8 +151,6 @@ def test_redirect_to_uuid_view(self):
         self.assertEqual(d1.absolute_url(), browser.url)
 
     def test_redirect_to_uuid_invalid_uuid(self):
-        from mechanize import HTTPError
-
         portal = self.layer['portal']
         app = self.layer['app']
 
@@ -166,14 +164,13 @@ def test_redirect_to_uuid_invalid_uuid(self):
 
         from plone.testing.z2 import Browser
         browser = Browser(app)
+        browser.handleErrors = False
         browser.addHeader(
             'Authorization',
             'Basic {0}:{1}'.format(TEST_USER_ID, TEST_USER_PASSWORD, )
         )
 
-        try:
-            url = '{0}/@@redirect-to-uuid/gibberish'
+        url = '{0}/@@redirect-to-uuid/gibberish'
+        from zope.publisher.interfaces import NotFound
+        with self.assertRaises(NotFound):
             browser.open(url.format(portal.absolute_url()))
-            self.fail('No error raised')
-        except HTTPError, e:
-            self.assertEqual(e.code, 404)


