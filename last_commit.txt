Repository: plone.subrequest


Branch: refs/heads/master
Date: 2016-04-19T18:38:33+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.subrequest/commit/6f63915aa040156e2e9f69eb3751cc52018c5794

Fixes out-of-memory errors when using lots of subrequests

Files changed:
M CHANGES.rst
M plone/subrequest/__init__.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 8e58b36..6e24336 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,12 @@ New:
 
 Fixes:
 
-- *add item here*
+- When a subrequest modified the DB (or prior to the subrequest the main request),
+  the oids annotated to the requests were doubled with each subsequent subrequest.
+  This resulted in out-of-memory errors when using lots of subrequests,
+  such as it happens on Mosaic based sites with a certain amount of tiles.
+  Fixed by only adding new oids, not already known by parent request.
+  [jensens]
 
 
 1.6.11 (2015-09-07)
diff --git a/plone/subrequest/__init__.py b/plone/subrequest/__init__.py
index d0ce772..26e4ea7 100644
--- a/plone/subrequest/__init__.py
+++ b/plone/subrequest/__init__.py
@@ -156,8 +156,11 @@ def subrequest(url, root=None, stdout=None):
             # append this list of safe oids to parent request
             if SAFE_WRITE_KEY not in parent_request.environ:
                 parent_request.environ[SAFE_WRITE_KEY] = []
-            parent_request.environ[SAFE_WRITE_KEY].extend(
-                request.environ[SAFE_WRITE_KEY])
+            new_keys = (
+                set(request.environ[SAFE_WRITE_KEY]) -
+                set(parent_request.environ[SAFE_WRITE_KEY])
+            )
+            parent_request.environ[SAFE_WRITE_KEY].extend(new_keys)
         if IDisableCSRFProtection.providedBy(request):
             alsoProvides(parent_request, IDisableCSRFProtection)
         request.clear()


Repository: plone.subrequest


Branch: refs/heads/master
Date: 2016-04-19T22:05:46+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.subrequest/commit/045ba638e01edec2ec951fc097d6f7798dc32445

Merge pull request #8 from plone/fix-out-of-memory

Fixes out-of-memory errors when using lots of subrequests

Files changed:
M CHANGES.rst
M plone/subrequest/__init__.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 8e58b36..6e24336 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,12 @@ New:
 
 Fixes:
 
-- *add item here*
+- When a subrequest modified the DB (or prior to the subrequest the main request),
+  the oids annotated to the requests were doubled with each subsequent subrequest.
+  This resulted in out-of-memory errors when using lots of subrequests,
+  such as it happens on Mosaic based sites with a certain amount of tiles.
+  Fixed by only adding new oids, not already known by parent request.
+  [jensens]
 
 
 1.6.11 (2015-09-07)
diff --git a/plone/subrequest/__init__.py b/plone/subrequest/__init__.py
index d0ce772..26e4ea7 100644
--- a/plone/subrequest/__init__.py
+++ b/plone/subrequest/__init__.py
@@ -156,8 +156,11 @@ def subrequest(url, root=None, stdout=None):
             # append this list of safe oids to parent request
             if SAFE_WRITE_KEY not in parent_request.environ:
                 parent_request.environ[SAFE_WRITE_KEY] = []
-            parent_request.environ[SAFE_WRITE_KEY].extend(
-                request.environ[SAFE_WRITE_KEY])
+            new_keys = (
+                set(request.environ[SAFE_WRITE_KEY]) -
+                set(parent_request.environ[SAFE_WRITE_KEY])
+            )
+            parent_request.environ[SAFE_WRITE_KEY].extend(new_keys)
         if IDisableCSRFProtection.providedBy(request):
             alsoProvides(parent_request, IDisableCSRFProtection)
         request.clear()


