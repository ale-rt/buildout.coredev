Repository: Products.LinguaPlone


Branch: refs/heads/master
Date: 2017-01-03T21:45:26Z
Author: Daniel Jowett (djowett) <daniel@jowettenterprises.com>
Commit: https://github.com/plone/Products.LinguaPlone/commit/87f41b6456e4ebb117e749a0ef7208f98d600062

Add tests for sitemap

Files changed:
A Products/LinguaPlone/tests/test_sitemap.py
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 5575fad..5f12fa5 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Add tests for sitemap
+  [djowett]
 
 
 4.1.7 (2016-11-10)
diff --git a/Products/LinguaPlone/tests/test_sitemap.py b/Products/LinguaPlone/tests/test_sitemap.py
new file mode 100644
index 0000000..2db0183
--- /dev/null
+++ b/Products/LinguaPlone/tests/test_sitemap.py
@@ -0,0 +1,118 @@
+# -*- coding: utf-8 -*-
+from gzip import GzipFile
+from plone.app.layout.navigation.interfaces import INavigationRoot
+from plone.app.testing import TEST_USER_ID
+from plone.app.testing import setRoles
+from zope.component import getMultiAdapter
+from zope.interface import alsoProvides
+from Products.CMFCore.utils import getToolByName
+from Products.LinguaPlone.tests.utils import makeContent
+from Products.LinguaPlone.tests.utils import makeTranslation
+from StringIO import StringIO
+
+import unittest
+
+# For Fixture class below
+from plone.app.testing import PloneSandboxLayer
+from plone.app.testing import PLONE_FIXTURE
+from plone.app.testing import IntegrationTesting
+
+# This class and its instantions probably should be moved to a testing.py file
+class Fixture(PloneSandboxLayer):
+
+    defaultBases = (PLONE_FIXTURE,)
+
+    def setUpZope(self, app, configurationContext):
+        import Products.LinguaPlone
+        self.loadZCML(package=Products.LinguaPlone)
+
+FIXTURE = Fixture()
+INTEGRATION_TESTING = IntegrationTesting(
+    bases=(FIXTURE,),
+    name='Products.LinguaPlone:Integration',
+)
+
+
+# This class largely inspired by plone/app/layout/sitemap/tests/test_sitemap.py
+class TestSitemap(unittest.TestCase):
+    
+    layer = INTEGRATION_TESTING
+
+    def setUp(self):
+        self.portal = self.layer['portal']
+        self.request = self.layer['request']
+        setRoles(self.portal, TEST_USER_ID, ['Manager'])
+        
+        self.portal.portal_languages.addSupportedLanguage('ca')
+        self.portal.portal_languages.addSupportedLanguage('es')
+        en = makeContent(self.portal, 'Folder', id='en')
+        en.setLanguage('en')
+
+        self.ca_folder = en.addTranslation('ca')
+        alsoProvides(self.ca_folder, INavigationRoot)
+
+        self.es_folder = en.addTranslation('es')
+        alsoProvides(self.es_folder, INavigationRoot)
+
+        self.sitemap = getMultiAdapter((self.portal, self.portal.REQUEST),
+                                       name='sitemap.xml.gz')
+        self.site_properties = getToolByName(
+            self.portal, 'portal_properties').site_properties
+        self.site_properties.manage_changeProperties(enable_sitemap=True)
+        doc_ca = makeContent(
+            self.ca_folder,
+            'Document',
+            title=u'Test document',
+            id='test-document')
+        doc_es = makeContent(
+            self.es_folder,
+            'Document',
+            title=u'Test document',
+            id='test-document')
+        doc_en = makeContent(
+            self.portal['en'],
+            'Document',
+            title=u'Test document',
+            id='test-document')
+        doc_ca.setLanguage('ca')
+        doc_es.setLanguage('es')
+        doc_en.setLanguage('en')
+
+    def uncompress(self, sitemapdata):
+        sio = StringIO(sitemapdata)
+        unziped = GzipFile(fileobj=sio)
+        xml = unziped.read()
+        unziped.close()
+        return xml
+
+    def test_portalroot_sitemap(self):
+        '''
+        Requests for the sitemap on portalroot return all languages
+        '''
+        xml = self.uncompress(self.sitemap())
+        self.assertIn(
+            '<loc>http://nohost/plone/%s/test-document</loc>' % self.ca_folder.id,
+             xml)
+        self.assertIn(
+            '<loc>http://nohost/plone/en/test-document</loc>',
+             xml)
+        self.assertIn(
+            '<loc>http://nohost/plone/%s/test-document</loc>' % self.es_folder.id,
+             xml)
+
+    def test_navroot_sitemap(self):
+        '''
+        Sitemap generated from a LanguageRootFolder (an INavigationRoot)
+        '''
+        sitemap = getMultiAdapter(
+            (self.es_folder, self.portal.REQUEST), name='sitemap.xml.gz')
+        xml = self.uncompress(sitemap())
+        self.assertNotIn(
+            '<loc>http://nohost/plone/%s/test-document</loc>' % self.ca_folder.id,
+            xml)
+        self.assertNotIn(
+            '<loc>http://nohost/plone/en/test-document</loc>',
+            xml)
+        self.assertIn(
+            '<loc>http://nohost/plone/%s/test-document</loc>' % self.es_folder.id,
+            xml)


Repository: Products.LinguaPlone


Branch: refs/heads/master
Date: 2017-01-03T21:45:26Z
Author: Daniel Jowett (djowett) <daniel@jowettenterprises.com>
Commit: https://github.com/plone/Products.LinguaPlone/commit/2cbed0f5ddb5c13bc066d4067ac46744b0c8b39f

Unpin this product so we are testing development code

Files changed:
M buildout.cfg

diff --git a/buildout.cfg b/buildout.cfg
index 515cbb2..4f65588 100644
--- a/buildout.cfg
+++ b/buildout.cfg
@@ -4,4 +4,7 @@ extends =
     base.cfg
 
 [versions]
+# Unpin this product so we are testing development code
+Products.LinguaPlone = 
+
 #zope.contenttype = 3.5.4


Repository: Products.LinguaPlone


Branch: refs/heads/master
Date: 2017-01-03T21:45:26Z
Author: Daniel Jowett (djowett) <daniel@jowettenterprises.com>
Commit: https://github.com/plone/Products.LinguaPlone/commit/7c4ded9edd0a86c085daab11a8f8545f00f4683d

Add plone.app.testing in [test] extra

Files changed:
M base.cfg
M setup.py

diff --git a/base.cfg b/base.cfg
index e0f8e76..2efd3bb 100644
--- a/base.cfg
+++ b/base.cfg
@@ -15,8 +15,9 @@ parts =
 recipe = zc.recipe.testrunner
 eggs =
     Pillow
+    ${buildout:package-name} [test]
     ${instance:eggs}
-defaults = ['--auto-color', '--auto-progress']
+defaults = ['-s', '${buildout:package-name}', '--auto-color', '--auto-progress']
 
 [ohcount]
 recipe = zc.recipe.egg
diff --git a/setup.py b/setup.py
index 3dc8e63..1b177f4 100644
--- a/setup.py
+++ b/setup.py
@@ -70,4 +70,9 @@
       'zope.schema',
       'zope.site',
     ],
+    extras_require={
+        'test': [
+            'plone.app.testing',
+        ],
+    },
 )


Repository: Products.LinguaPlone


Branch: refs/heads/master
Date: 2017-01-03T21:47:14Z
Author: Daniel Jowett (djowett) <daniel@jowettenterprises.com>
Commit: https://github.com/plone/Products.LinguaPlone/commit/062870f20471779cdd8cdb3e382f5a5f74d337d5

Test sitemap fix for plone.app.multilingual (&gt;=2.x) in plone.app.layout does not break LinguaPlone

Files changed:
M buildout.cfg

diff --git a/buildout.cfg b/buildout.cfg
index 4f65588..58366ad 100644
--- a/buildout.cfg
+++ b/buildout.cfg
@@ -6,5 +6,7 @@ extends =
 [versions]
 # Unpin this product so we are testing development code
 Products.LinguaPlone = 
+# Test sitemap fix in plone.app.layout
+plone.app.layout = 2.3.16
 
 #zope.contenttype = 3.5.4


Repository: Products.LinguaPlone


Branch: refs/heads/master
Date: 2017-01-10T15:34:54+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.LinguaPlone/commit/06d9256167528ef4065cdcb731192842b9f04ee1

Merge pull request #21 from plone/added-tests-for-sitemap

Added tests for sitemap

Files changed:
A Products/LinguaPlone/tests/test_sitemap.py
M CHANGES.rst
M base.cfg
M buildout.cfg
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 5575fad..5f12fa5 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Add tests for sitemap
+  [djowett]
 
 
 4.1.7 (2016-11-10)
diff --git a/Products/LinguaPlone/tests/test_sitemap.py b/Products/LinguaPlone/tests/test_sitemap.py
new file mode 100644
index 0000000..2db0183
--- /dev/null
+++ b/Products/LinguaPlone/tests/test_sitemap.py
@@ -0,0 +1,118 @@
+# -*- coding: utf-8 -*-
+from gzip import GzipFile
+from plone.app.layout.navigation.interfaces import INavigationRoot
+from plone.app.testing import TEST_USER_ID
+from plone.app.testing import setRoles
+from zope.component import getMultiAdapter
+from zope.interface import alsoProvides
+from Products.CMFCore.utils import getToolByName
+from Products.LinguaPlone.tests.utils import makeContent
+from Products.LinguaPlone.tests.utils import makeTranslation
+from StringIO import StringIO
+
+import unittest
+
+# For Fixture class below
+from plone.app.testing import PloneSandboxLayer
+from plone.app.testing import PLONE_FIXTURE
+from plone.app.testing import IntegrationTesting
+
+# This class and its instantions probably should be moved to a testing.py file
+class Fixture(PloneSandboxLayer):
+
+    defaultBases = (PLONE_FIXTURE,)
+
+    def setUpZope(self, app, configurationContext):
+        import Products.LinguaPlone
+        self.loadZCML(package=Products.LinguaPlone)
+
+FIXTURE = Fixture()
+INTEGRATION_TESTING = IntegrationTesting(
+    bases=(FIXTURE,),
+    name='Products.LinguaPlone:Integration',
+)
+
+
+# This class largely inspired by plone/app/layout/sitemap/tests/test_sitemap.py
+class TestSitemap(unittest.TestCase):
+    
+    layer = INTEGRATION_TESTING
+
+    def setUp(self):
+        self.portal = self.layer['portal']
+        self.request = self.layer['request']
+        setRoles(self.portal, TEST_USER_ID, ['Manager'])
+        
+        self.portal.portal_languages.addSupportedLanguage('ca')
+        self.portal.portal_languages.addSupportedLanguage('es')
+        en = makeContent(self.portal, 'Folder', id='en')
+        en.setLanguage('en')
+
+        self.ca_folder = en.addTranslation('ca')
+        alsoProvides(self.ca_folder, INavigationRoot)
+
+        self.es_folder = en.addTranslation('es')
+        alsoProvides(self.es_folder, INavigationRoot)
+
+        self.sitemap = getMultiAdapter((self.portal, self.portal.REQUEST),
+                                       name='sitemap.xml.gz')
+        self.site_properties = getToolByName(
+            self.portal, 'portal_properties').site_properties
+        self.site_properties.manage_changeProperties(enable_sitemap=True)
+        doc_ca = makeContent(
+            self.ca_folder,
+            'Document',
+            title=u'Test document',
+            id='test-document')
+        doc_es = makeContent(
+            self.es_folder,
+            'Document',
+            title=u'Test document',
+            id='test-document')
+        doc_en = makeContent(
+            self.portal['en'],
+            'Document',
+            title=u'Test document',
+            id='test-document')
+        doc_ca.setLanguage('ca')
+        doc_es.setLanguage('es')
+        doc_en.setLanguage('en')
+
+    def uncompress(self, sitemapdata):
+        sio = StringIO(sitemapdata)
+        unziped = GzipFile(fileobj=sio)
+        xml = unziped.read()
+        unziped.close()
+        return xml
+
+    def test_portalroot_sitemap(self):
+        '''
+        Requests for the sitemap on portalroot return all languages
+        '''
+        xml = self.uncompress(self.sitemap())
+        self.assertIn(
+            '<loc>http://nohost/plone/%s/test-document</loc>' % self.ca_folder.id,
+             xml)
+        self.assertIn(
+            '<loc>http://nohost/plone/en/test-document</loc>',
+             xml)
+        self.assertIn(
+            '<loc>http://nohost/plone/%s/test-document</loc>' % self.es_folder.id,
+             xml)
+
+    def test_navroot_sitemap(self):
+        '''
+        Sitemap generated from a LanguageRootFolder (an INavigationRoot)
+        '''
+        sitemap = getMultiAdapter(
+            (self.es_folder, self.portal.REQUEST), name='sitemap.xml.gz')
+        xml = self.uncompress(sitemap())
+        self.assertNotIn(
+            '<loc>http://nohost/plone/%s/test-document</loc>' % self.ca_folder.id,
+            xml)
+        self.assertNotIn(
+            '<loc>http://nohost/plone/en/test-document</loc>',
+            xml)
+        self.assertIn(
+            '<loc>http://nohost/plone/%s/test-document</loc>' % self.es_folder.id,
+            xml)
diff --git a/base.cfg b/base.cfg
index e0f8e76..2efd3bb 100644
--- a/base.cfg
+++ b/base.cfg
@@ -15,8 +15,9 @@ parts =
 recipe = zc.recipe.testrunner
 eggs =
     Pillow
+    ${buildout:package-name} [test]
     ${instance:eggs}
-defaults = ['--auto-color', '--auto-progress']
+defaults = ['-s', '${buildout:package-name}', '--auto-color', '--auto-progress']
 
 [ohcount]
 recipe = zc.recipe.egg
diff --git a/buildout.cfg b/buildout.cfg
index 515cbb2..58366ad 100644
--- a/buildout.cfg
+++ b/buildout.cfg
@@ -4,4 +4,9 @@ extends =
     base.cfg
 
 [versions]
+# Unpin this product so we are testing development code
+Products.LinguaPlone = 
+# Test sitemap fix in plone.app.layout
+plone.app.layout = 2.3.16
+
 #zope.contenttype = 3.5.4
diff --git a/setup.py b/setup.py
index 3dc8e63..1b177f4 100644
--- a/setup.py
+++ b/setup.py
@@ -70,4 +70,9 @@
       'zope.schema',
       'zope.site',
     ],
+    extras_require={
+        'test': [
+            'plone.app.testing',
+        ],
+    },
 )


