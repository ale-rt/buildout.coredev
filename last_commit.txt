Repository: plone.app.content


Branch: refs/heads/master
Date: 2017-04-12T16:10:34+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.content/commit/95d9461ff209170d9b4d0c36699dea9498a6f2f9

Allow operation on inactive content for all folder content actions.
This allows deleting, renaming, rearranging and changing workflow of content which expiration date has already been met or which effective date hasn't met yet.

Files changed:
M CHANGES.rst
M plone/app/content/browser/contents/__init__.py
M plone/app/content/browser/contents/delete.py
M plone/app/content/browser/contents/rearrange.py
M plone/app/content/browser/contents/rename.py
M plone/app/content/browser/contents/workflow.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 76b6d70..20e0085 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -15,6 +15,10 @@ New features:
 
 Bug fixes:
 
+- Allow operation on inactive content for all folder content actions.
+  This allows deleting, renaming, rearranging and changing workflow of content which expiration date has already been met or which effective date hasn't met yet.
+  [thet]
+
 - Fix issue where some actions (copy, delete, paste) on contents view did not
   work if there were any private (innaccessible for the current user) levels the
   current path
diff --git a/plone/app/content/browser/contents/__init__.py b/plone/app/content/browser/contents/__init__.py
index 574d14b..c42d675 100644
--- a/plone/app/content/browser/contents/__init__.py
+++ b/plone/app/content/browser/contents/__init__.py
@@ -95,7 +95,8 @@ def __call__(self):
         self.catalog = getToolByName(context, 'portal_catalog')
         self.mtool = getToolByName(self.context, 'portal_membership')
 
-        for brain in self.catalog(UID=selection):
+        brains = self.catalog(UID=selection, show_inactive=True)
+        for brain in brains:
             # remove everyone so we know if we missed any
             selection.remove(brain.UID)
             obj = brain.getObject()
@@ -316,7 +317,7 @@ def __call__(self):
 
         catalog = getToolByName(self.context, 'portal_catalog')
         try:
-            brains = catalog(UID=IUUID(self.context))
+            brains = catalog(UID=IUUID(self.context), show_inactive=True)
         except TypeError:
             brains = []
         item = None
diff --git a/plone/app/content/browser/contents/delete.py b/plone/app/content/browser/contents/delete.py
index b250431..6a6be7b 100644
--- a/plone/app/content/browser/contents/delete.py
+++ b/plone/app/content/browser/contents/delete.py
@@ -1,15 +1,16 @@
 # -*- coding: utf-8 -*-
 from AccessControl import Unauthorized
 from AccessControl.Permissions import delete_objects
+from plone.app.content.browser.contents import ContentsBaseAction
+from plone.app.content.interfaces import IStructureAction
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone import PloneMessageFactory as _
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-from plone.app.content.browser.contents import ContentsBaseAction
-from plone.app.content.interfaces import IStructureAction
 from zope.component import getMultiAdapter
 from zope.component.hooks import getSite
 from zope.i18n import translate
 from zope.interface import implementer
+
 import json
 
 
@@ -52,7 +53,7 @@ def __call__(self):
                                            name='delete_confirmation_info')
             selection = self.get_selection()
             catalog = getToolByName(self.context, 'portal_catalog')
-            brains = catalog(UID=selection)
+            brains = catalog(UID=selection, show_inactive=True)
             items = [i.getObject() for i in brains]
             self.request.response.setHeader(
                 'Content-Type', 'application/json; charset=utf-8'
diff --git a/plone/app/content/browser/contents/rearrange.py b/plone/app/content/browser/contents/rearrange.py
index a719da7..9f4043a 100644
--- a/plone/app/content/browser/contents/rearrange.py
+++ b/plone/app/content/browser/contents/rearrange.py
@@ -82,7 +82,8 @@ def __call__(self):
                     'query': '/'.join(self.context.getPhysicalPath()),
                     'depth': 1
                 },
-                'sort_on': self.request.form.get('rearrange_on')
+                'sort_on': self.request.form.get('rearrange_on'),
+                'show_inactive': True
             }
             brains = catalog(**query)
             if self.request.form.get('reversed') == 'true':
diff --git a/plone/app/content/browser/contents/rename.py b/plone/app/content/browser/contents/rename.py
index c43a3b0..d0781a5 100644
--- a/plone/app/content/browser/contents/rename.py
+++ b/plone/app/content/browser/contents/rename.py
@@ -61,7 +61,7 @@ def __call__(self):
                 continue
             index = key.split('_')[-1]
             uid = self.request.form[key]
-            brains = catalog(UID=uid)
+            brains = catalog(UID=uid, show_inactive=True)
             if len(brains) == 0:
                 missing.append(uid)
                 continue
diff --git a/plone/app/content/browser/contents/workflow.py b/plone/app/content/browser/contents/workflow.py
index a761950..83e210a 100644
--- a/plone/app/content/browser/contents/workflow.py
+++ b/plone/app/content/browser/contents/workflow.py
@@ -50,7 +50,7 @@ def __call__(self):
             # asking for render information
             selection = self.get_selection()
             catalog = getToolByName(self.context, 'portal_catalog')
-            brains = catalog(UID=selection)
+            brains = catalog(UID=selection, show_inactive=True)
             transitions = []
             for brain in brains:
                 obj = brain.getObject()


Repository: plone.app.content


Branch: refs/heads/master
Date: 2017-04-12T23:55:17+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.content/commit/4a9fed2395cf6b3d2dda0c529cfaeae4c92b59f8

Merge pull request #126 from plone/thet-fc-showinactive

Allow operation on inactive content for all folder content actions.

Files changed:
M CHANGES.rst
M plone/app/content/browser/contents/__init__.py
M plone/app/content/browser/contents/delete.py
M plone/app/content/browser/contents/rearrange.py
M plone/app/content/browser/contents/rename.py
M plone/app/content/browser/contents/workflow.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 76b6d70..20e0085 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -15,6 +15,10 @@ New features:
 
 Bug fixes:
 
+- Allow operation on inactive content for all folder content actions.
+  This allows deleting, renaming, rearranging and changing workflow of content which expiration date has already been met or which effective date hasn't met yet.
+  [thet]
+
 - Fix issue where some actions (copy, delete, paste) on contents view did not
   work if there were any private (innaccessible for the current user) levels the
   current path
diff --git a/plone/app/content/browser/contents/__init__.py b/plone/app/content/browser/contents/__init__.py
index 574d14b..c42d675 100644
--- a/plone/app/content/browser/contents/__init__.py
+++ b/plone/app/content/browser/contents/__init__.py
@@ -95,7 +95,8 @@ def __call__(self):
         self.catalog = getToolByName(context, 'portal_catalog')
         self.mtool = getToolByName(self.context, 'portal_membership')
 
-        for brain in self.catalog(UID=selection):
+        brains = self.catalog(UID=selection, show_inactive=True)
+        for brain in brains:
             # remove everyone so we know if we missed any
             selection.remove(brain.UID)
             obj = brain.getObject()
@@ -316,7 +317,7 @@ def __call__(self):
 
         catalog = getToolByName(self.context, 'portal_catalog')
         try:
-            brains = catalog(UID=IUUID(self.context))
+            brains = catalog(UID=IUUID(self.context), show_inactive=True)
         except TypeError:
             brains = []
         item = None
diff --git a/plone/app/content/browser/contents/delete.py b/plone/app/content/browser/contents/delete.py
index b250431..6a6be7b 100644
--- a/plone/app/content/browser/contents/delete.py
+++ b/plone/app/content/browser/contents/delete.py
@@ -1,15 +1,16 @@
 # -*- coding: utf-8 -*-
 from AccessControl import Unauthorized
 from AccessControl.Permissions import delete_objects
+from plone.app.content.browser.contents import ContentsBaseAction
+from plone.app.content.interfaces import IStructureAction
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone import PloneMessageFactory as _
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-from plone.app.content.browser.contents import ContentsBaseAction
-from plone.app.content.interfaces import IStructureAction
 from zope.component import getMultiAdapter
 from zope.component.hooks import getSite
 from zope.i18n import translate
 from zope.interface import implementer
+
 import json
 
 
@@ -52,7 +53,7 @@ def __call__(self):
                                            name='delete_confirmation_info')
             selection = self.get_selection()
             catalog = getToolByName(self.context, 'portal_catalog')
-            brains = catalog(UID=selection)
+            brains = catalog(UID=selection, show_inactive=True)
             items = [i.getObject() for i in brains]
             self.request.response.setHeader(
                 'Content-Type', 'application/json; charset=utf-8'
diff --git a/plone/app/content/browser/contents/rearrange.py b/plone/app/content/browser/contents/rearrange.py
index a719da7..9f4043a 100644
--- a/plone/app/content/browser/contents/rearrange.py
+++ b/plone/app/content/browser/contents/rearrange.py
@@ -82,7 +82,8 @@ def __call__(self):
                     'query': '/'.join(self.context.getPhysicalPath()),
                     'depth': 1
                 },
-                'sort_on': self.request.form.get('rearrange_on')
+                'sort_on': self.request.form.get('rearrange_on'),
+                'show_inactive': True
             }
             brains = catalog(**query)
             if self.request.form.get('reversed') == 'true':
diff --git a/plone/app/content/browser/contents/rename.py b/plone/app/content/browser/contents/rename.py
index c43a3b0..d0781a5 100644
--- a/plone/app/content/browser/contents/rename.py
+++ b/plone/app/content/browser/contents/rename.py
@@ -61,7 +61,7 @@ def __call__(self):
                 continue
             index = key.split('_')[-1]
             uid = self.request.form[key]
-            brains = catalog(UID=uid)
+            brains = catalog(UID=uid, show_inactive=True)
             if len(brains) == 0:
                 missing.append(uid)
                 continue
diff --git a/plone/app/content/browser/contents/workflow.py b/plone/app/content/browser/contents/workflow.py
index a761950..83e210a 100644
--- a/plone/app/content/browser/contents/workflow.py
+++ b/plone/app/content/browser/contents/workflow.py
@@ -50,7 +50,7 @@ def __call__(self):
             # asking for render information
             selection = self.get_selection()
             catalog = getToolByName(self.context, 'portal_catalog')
-            brains = catalog(UID=selection)
+            brains = catalog(UID=selection, show_inactive=True)
             transitions = []
             for brain in brains:
                 obj = brain.getObject()


