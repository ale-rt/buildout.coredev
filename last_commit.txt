Repository: plone.resource


Branch: refs/heads/master
Date: 2016-11-01T00:57:24-03:00
Author: Juan Pablo Gimenez (jpgimenez) <jpg@rosario.com>
Commit: https://github.com/plone/plone.resource/commit/43b70acdac2f3e713a432848c194f9ad76cec40e

Fire events on resources create and modify

Files changed:
M plone/resource/directory.py
M plone/resource/interfaces.py

diff --git a/plone/resource/directory.py b/plone/resource/directory.py
index 5b9cf37..d4308dd 100644
--- a/plone/resource/directory.py
+++ b/plone/resource/directory.py
@@ -3,6 +3,8 @@
 from OFS.Image import File
 from OFS.interfaces import IObjectManager
 from plone.resource.file import FilesystemFile
+from plone.resource.interfaces import IPloneResourceCreatedEvent
+from plone.resource.interfaces import IPloneResourceModifiedEvent
 from plone.resource.interfaces import IResourceDirectory
 from plone.resource.interfaces import IWritableResourceDirectory
 from Products.BTreeFolder2.BTreeFolder2 import BTreeFolder2
@@ -10,6 +12,8 @@
 from StringIO import StringIO
 from zExceptions import Forbidden
 from zExceptions import NotFound
+from zope.component.interfaces import ObjectEvent
+from zope.event import notify
 from zope.interface import implementer
 from zope.site.hooks import getSite
 import os.path
@@ -21,6 +25,23 @@
 FILTERS = [re.compile(pattern) for pattern in FILTERS]
 
 
+@implementer(IPloneResourceCreatedEvent)
+class PloneResourceCreatedEvent(ObjectEvent):
+    """A resource has been created"""
+
+
+@implementer(IPloneResourceModifiedEvent)
+class PloneResourceModifiedEvent(ObjectEvent):
+    """A resource has been modified"""
+
+    def __init__(self, object, *descriptions):
+        """
+        Init with a list of modification descriptions.
+        """
+        super(PloneResourceModifiedEvent, self).__init__(object)
+        self.descriptions = descriptions
+
+
 @implementer(IWritableResourceDirectory)
 class PersistentResourceDirectory(object):
     """A resource directory stored in the ZODB.
@@ -158,9 +179,13 @@ def writeFile(self, path, data):
             # otherwise HTTPResponse.setBody assumes latin1 and mangles things
             f.content_type = ct + '; charset=utf-8'
         container = self.context.unrestrictedTraverse(basepath)
+        event = PloneResourceCreatedEvent
         if filename in container:
             container._delOb(filename)
+            event = PloneResourceModifiedEvent
         container._setOb(filename, f)
+        obj = container._getOb(filename)
+        notify(event(obj))
 
     def importZip(self, f):
         if not isinstance(f, zipfile.ZipFile):
diff --git a/plone/resource/interfaces.py b/plone/resource/interfaces.py
index 0b4404d..22778a9 100644
--- a/plone/resource/interfaces.py
+++ b/plone/resource/interfaces.py
@@ -1,6 +1,8 @@
 # -*- coding: utf-8 -*-
 from zope.interface import Attribute
 from zope.interface import Interface
+from zope.lifecycleevent.interfaces import IObjectCreatedEvent
+from zope.lifecycleevent.interfaces import IObjectModifiedEvent
 from zope.publisher.interfaces import IPublishTraverse
 
 
@@ -94,5 +96,14 @@ def rename(oldName, newName):
         """Rename a child file or folder
         """
 
+
 class IUniqueResourceRequest(Interface):
     """Marker interface for requests to ++unique++<id>"""
+
+
+class IPloneResourceCreatedEvent(IObjectCreatedEvent):
+    """An resource has been created."""
+
+
+class IPloneResourceModifiedEvent(IObjectModifiedEvent):
+    """An resource has been created."""


Repository: plone.resource


Branch: refs/heads/master
Date: 2016-11-01T21:42:49+01:00
Author: Eric BREHAULT (ebrehault) <ebrehault@gmail.com>
Commit: https://github.com/plone/plone.resource/commit/383f68244b7536ff03d8f98ba69807f1a1317a3a

Fire events: reorganize + add test

Files changed:
A plone/resource/events.py
M CHANGES.rst
M plone/resource/directory.py
M plone/resource/tests/test_directory.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 3e06c34..95fdaf7 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Fire events on resources creation/modification
+  [jpgimenez, ebrehault]
 
 Bug fixes:
 
diff --git a/plone/resource/directory.py b/plone/resource/directory.py
index d4308dd..9ac7d3e 100644
--- a/plone/resource/directory.py
+++ b/plone/resource/directory.py
@@ -2,9 +2,9 @@
 from Acquisition import aq_base, aq_parent
 from OFS.Image import File
 from OFS.interfaces import IObjectManager
+from plone.resource.events import PloneResourceCreatedEvent
+from plone.resource.events import PloneResourceModifiedEvent
 from plone.resource.file import FilesystemFile
-from plone.resource.interfaces import IPloneResourceCreatedEvent
-from plone.resource.interfaces import IPloneResourceModifiedEvent
 from plone.resource.interfaces import IResourceDirectory
 from plone.resource.interfaces import IWritableResourceDirectory
 from Products.BTreeFolder2.BTreeFolder2 import BTreeFolder2
@@ -12,7 +12,6 @@
 from StringIO import StringIO
 from zExceptions import Forbidden
 from zExceptions import NotFound
-from zope.component.interfaces import ObjectEvent
 from zope.event import notify
 from zope.interface import implementer
 from zope.site.hooks import getSite
@@ -25,23 +24,6 @@
 FILTERS = [re.compile(pattern) for pattern in FILTERS]
 
 
-@implementer(IPloneResourceCreatedEvent)
-class PloneResourceCreatedEvent(ObjectEvent):
-    """A resource has been created"""
-
-
-@implementer(IPloneResourceModifiedEvent)
-class PloneResourceModifiedEvent(ObjectEvent):
-    """A resource has been modified"""
-
-    def __init__(self, object, *descriptions):
-        """
-        Init with a list of modification descriptions.
-        """
-        super(PloneResourceModifiedEvent, self).__init__(object)
-        self.descriptions = descriptions
-
-
 @implementer(IWritableResourceDirectory)
 class PersistentResourceDirectory(object):
     """A resource directory stored in the ZODB.
@@ -179,10 +161,11 @@ def writeFile(self, path, data):
             # otherwise HTTPResponse.setBody assumes latin1 and mangles things
             f.content_type = ct + '; charset=utf-8'
         container = self.context.unrestrictedTraverse(basepath)
-        event = PloneResourceCreatedEvent
         if filename in container:
             container._delOb(filename)
             event = PloneResourceModifiedEvent
+        else:
+            event = PloneResourceCreatedEvent
         container._setOb(filename, f)
         obj = container._getOb(filename)
         notify(event(obj))
diff --git a/plone/resource/events.py b/plone/resource/events.py
new file mode 100644
index 0000000..d475052
--- /dev/null
+++ b/plone/resource/events.py
@@ -0,0 +1,14 @@
+from plone.resource.interfaces import IPloneResourceCreatedEvent
+from plone.resource.interfaces import IPloneResourceModifiedEvent
+from zope.component.interfaces import ObjectEvent
+from zope.interface import implementer
+
+
+@implementer(IPloneResourceCreatedEvent)
+class PloneResourceCreatedEvent(ObjectEvent):
+    """A resource has been created"""
+
+
+@implementer(IPloneResourceModifiedEvent)
+class PloneResourceModifiedEvent(ObjectEvent):
+    """A resource has been modified"""
diff --git a/plone/resource/tests/test_directory.py b/plone/resource/tests/test_directory.py
index b62ce9a..3b25687 100644
--- a/plone/resource/tests/test_directory.py
+++ b/plone/resource/tests/test_directory.py
@@ -2,8 +2,13 @@
 import os.path
 import unittest2 as unittest
 from Acquisition import aq_base
+from plone.resource.events import PloneResourceCreatedEvent
+from plone.resource.events import PloneResourceModifiedEvent
+from plone.resource.interfaces import IPloneResourceCreatedEvent
+from plone.resource.interfaces import IPloneResourceModifiedEvent
 from Products.BTreeFolder2.BTreeFolder2 import BTreeFolder2
-
+from zope.component import adapter
+from zope.component import provideHandler
 
 class TestPersistentResourceDirectory(unittest.TestCase):
 
@@ -189,6 +194,34 @@ def test_setitem_directory(self):
 
         self.assertEqual(dir['demo']['foo']['d2'].__name__, 'd2')
 
+    def test_events(self):
+        events = []
+
+        @adapter(IPloneResourceCreatedEvent)
+        def _handleFileCreated(event):
+            events.append(event)
+        provideHandler(_handleFileCreated)
+
+        @adapter(IPloneResourceModifiedEvent)
+        def _handleFileModified(event):
+            events.append(event)
+        provideHandler(_handleFileModified)
+
+        dir = self._makeOne()
+        dir.writeFile('test', 'my test')
+        dir.writeFile('test', 'my test is modified')
+        self.assertTrue(isinstance(events[0], PloneResourceCreatedEvent))
+        self.assertEqual(
+            str(events[0].object), 
+            'my test'
+        )
+        self.assertTrue(isinstance(events[1], PloneResourceModifiedEvent))
+        self.assertEqual(
+            str(events[1].object), 
+            'my test is modified'
+        )
+
+
 class TestFilesystemResourceDirectory(unittest.TestCase):
 
     def _makeOne(self):


Repository: plone.resource


Branch: refs/heads/master
Date: 2016-11-03T00:23:12+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.resource/commit/2d36ac37169612b730ab4650d8037cbd03ea5d3c

Merge pull request #17 from plone/ploneconf2016-sprint-rapido

Ploneconf2016 sprint rapido

Files changed:
A plone/resource/events.py
M CHANGES.rst
M plone/resource/directory.py
M plone/resource/interfaces.py
M plone/resource/tests/test_directory.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 3e06c34..95fdaf7 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Fire events on resources creation/modification
+  [jpgimenez, ebrehault]
 
 Bug fixes:
 
diff --git a/plone/resource/directory.py b/plone/resource/directory.py
index 5b9cf37..9ac7d3e 100644
--- a/plone/resource/directory.py
+++ b/plone/resource/directory.py
@@ -2,6 +2,8 @@
 from Acquisition import aq_base, aq_parent
 from OFS.Image import File
 from OFS.interfaces import IObjectManager
+from plone.resource.events import PloneResourceCreatedEvent
+from plone.resource.events import PloneResourceModifiedEvent
 from plone.resource.file import FilesystemFile
 from plone.resource.interfaces import IResourceDirectory
 from plone.resource.interfaces import IWritableResourceDirectory
@@ -10,6 +12,7 @@
 from StringIO import StringIO
 from zExceptions import Forbidden
 from zExceptions import NotFound
+from zope.event import notify
 from zope.interface import implementer
 from zope.site.hooks import getSite
 import os.path
@@ -160,7 +163,12 @@ def writeFile(self, path, data):
         container = self.context.unrestrictedTraverse(basepath)
         if filename in container:
             container._delOb(filename)
+            event = PloneResourceModifiedEvent
+        else:
+            event = PloneResourceCreatedEvent
         container._setOb(filename, f)
+        obj = container._getOb(filename)
+        notify(event(obj))
 
     def importZip(self, f):
         if not isinstance(f, zipfile.ZipFile):
diff --git a/plone/resource/events.py b/plone/resource/events.py
new file mode 100644
index 0000000..d475052
--- /dev/null
+++ b/plone/resource/events.py
@@ -0,0 +1,14 @@
+from plone.resource.interfaces import IPloneResourceCreatedEvent
+from plone.resource.interfaces import IPloneResourceModifiedEvent
+from zope.component.interfaces import ObjectEvent
+from zope.interface import implementer
+
+
+@implementer(IPloneResourceCreatedEvent)
+class PloneResourceCreatedEvent(ObjectEvent):
+    """A resource has been created"""
+
+
+@implementer(IPloneResourceModifiedEvent)
+class PloneResourceModifiedEvent(ObjectEvent):
+    """A resource has been modified"""
diff --git a/plone/resource/interfaces.py b/plone/resource/interfaces.py
index 0b4404d..22778a9 100644
--- a/plone/resource/interfaces.py
+++ b/plone/resource/interfaces.py
@@ -1,6 +1,8 @@
 # -*- coding: utf-8 -*-
 from zope.interface import Attribute
 from zope.interface import Interface
+from zope.lifecycleevent.interfaces import IObjectCreatedEvent
+from zope.lifecycleevent.interfaces import IObjectModifiedEvent
 from zope.publisher.interfaces import IPublishTraverse
 
 
@@ -94,5 +96,14 @@ def rename(oldName, newName):
         """Rename a child file or folder
         """
 
+
 class IUniqueResourceRequest(Interface):
     """Marker interface for requests to ++unique++<id>"""
+
+
+class IPloneResourceCreatedEvent(IObjectCreatedEvent):
+    """An resource has been created."""
+
+
+class IPloneResourceModifiedEvent(IObjectModifiedEvent):
+    """An resource has been created."""
diff --git a/plone/resource/tests/test_directory.py b/plone/resource/tests/test_directory.py
index b62ce9a..3b25687 100644
--- a/plone/resource/tests/test_directory.py
+++ b/plone/resource/tests/test_directory.py
@@ -2,8 +2,13 @@
 import os.path
 import unittest2 as unittest
 from Acquisition import aq_base
+from plone.resource.events import PloneResourceCreatedEvent
+from plone.resource.events import PloneResourceModifiedEvent
+from plone.resource.interfaces import IPloneResourceCreatedEvent
+from plone.resource.interfaces import IPloneResourceModifiedEvent
 from Products.BTreeFolder2.BTreeFolder2 import BTreeFolder2
-
+from zope.component import adapter
+from zope.component import provideHandler
 
 class TestPersistentResourceDirectory(unittest.TestCase):
 
@@ -189,6 +194,34 @@ def test_setitem_directory(self):
 
         self.assertEqual(dir['demo']['foo']['d2'].__name__, 'd2')
 
+    def test_events(self):
+        events = []
+
+        @adapter(IPloneResourceCreatedEvent)
+        def _handleFileCreated(event):
+            events.append(event)
+        provideHandler(_handleFileCreated)
+
+        @adapter(IPloneResourceModifiedEvent)
+        def _handleFileModified(event):
+            events.append(event)
+        provideHandler(_handleFileModified)
+
+        dir = self._makeOne()
+        dir.writeFile('test', 'my test')
+        dir.writeFile('test', 'my test is modified')
+        self.assertTrue(isinstance(events[0], PloneResourceCreatedEvent))
+        self.assertEqual(
+            str(events[0].object), 
+            'my test'
+        )
+        self.assertTrue(isinstance(events[1], PloneResourceModifiedEvent))
+        self.assertEqual(
+            str(events[1].object), 
+            'my test is modified'
+        )
+
+
 class TestFilesystemResourceDirectory(unittest.TestCase):
 
     def _makeOne(self):


