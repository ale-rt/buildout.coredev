Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2017-12-13T10:30:57-05:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/50f8a31000ba8f52692b0c239ed241f768370112

Avoid triggering user login migration

Files changed:
M CHANGES.rst
M plone/app/upgrade/v50/betas.py
M plone/app/upgrade/v50/configure.zcml

diff --git a/CHANGES.rst b/CHANGES.rst
index 3c47c194..272b3448 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -18,6 +18,10 @@ Bug fixes:
   Fixes https://github.com/plone/Products.CMFPlone/issues/2238
   [pbauer]
 
+- Avoid triggering an unnecessary migration of user logins
+  when the use_email_as_login setting is migrated to portal_registry.
+  [davisagli]
+
 
 2.0.9 (2017-11-26)
 ------------------
diff --git a/plone/app/upgrade/v50/betas.py b/plone/app/upgrade/v50/betas.py
index 2ece1ce8..ce1af4d8 100644
--- a/plone/app/upgrade/v50/betas.py
+++ b/plone/app/upgrade/v50/betas.py
@@ -167,8 +167,18 @@ def _get_enable_self_reg():
     settings.enable_user_folders = pmembership.getMemberareaCreationFlag()
     settings.allow_anon_views_about = site_properties.getProperty(
         'allowAnonymousViewAbout', False)
+
+    # suppress migrating login names while setting use_email_as_login to existing value
+    from Products.CMFPlone.controlpanel import events
+    migrate_to_email_login = events.migrate_to_email_login
+    migrate_from_email_login = events.migrate_from_email_login
+    events.migrate_to_email_login = lambda x: None
+    events.migrate_to_email_login = lambda x: None
     settings.use_email_as_login = site_properties.getProperty(
         'use_email_as_login', False)
+    events.migrate_to_email_login = migrate_to_email_login
+    events.migrate_from_email_login = migrate_from_email_login
+
     settings.use_uuid_as_userid = site_properties.getProperty(
         'use_uuid_as_userid', False)
 
diff --git a/plone/app/upgrade/v50/configure.zcml b/plone/app/upgrade/v50/configure.zcml
index a6ddf604..5e19c679 100644
--- a/plone/app/upgrade/v50/configure.zcml
+++ b/plone/app/upgrade/v50/configure.zcml
@@ -158,7 +158,7 @@
            />
 
        <gs:upgradeStep
-           title="Run to50beta4 upgrade profile"
+           title="Upgrade plone.app.querystring"
            description=""
            handler=".betas.upgrade_querystring"
            />


Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2017-12-13T16:12:00-05:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/ef22eb12418b3edd8a336d3fc41501b06f47cb84

Merge remote-tracking branch 'origin/master' into davisagli-suppress-login-migration

Files changed:
M CHANGES.rst
M plone/app/upgrade/v50/alphas.py
M plone/app/upgrade/v50/final.py
M plone/app/upgrade/v51/betas.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 272b3448..a33d2ca0 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -1,7 +1,7 @@
 Changelog
 =========
 
-2.0.10 (unreleased)
+2.0.11 (unreleased)
 -------------------
 
 Breaking changes:
@@ -14,6 +14,19 @@ New features:
 
 Bug fixes:
 
+- Log progress and ignore bad catalog entries while updating catalog metadata.
+  [davisagli]
+
+- Disable CSRF protection when replacing keyring.
+  This fixes running specific upgrade steps via the portal_setup UI.
+  [davisagli]
+
+
+2.0.10 (2017-12-13)
+-------------------
+
+Bug fixes:
+
 - Unregister import_steps that were moved to post_handlers.
   Fixes https://github.com/plone/Products.CMFPlone/issues/2238
   [pbauer]
diff --git a/plone/app/upgrade/v50/alphas.py b/plone/app/upgrade/v50/alphas.py
index 8f594cba..87c9a20b 100644
--- a/plone/app/upgrade/v50/alphas.py
+++ b/plone/app/upgrade/v50/alphas.py
@@ -18,10 +18,13 @@
 from plone.keyring.interfaces import IKeyManager
 from plone.keyring.keymanager import KeyManager
 from plone.keyring.keyring import Keyring
+from plone.protect.interfaces import IDisableCSRFProtection
 from plone.registry.interfaces import IRegistry
 from zope.component import getSiteManager
 from zope.component import getUtility
 from zope.component.hooks import getSite
+from zope.globalrequest import getRequest
+from zope.interface import alsoProvides
 from zope.schema.interfaces import ConstraintNotSatisfied
 
 try:
@@ -206,6 +209,13 @@ def upgrade_keyring(context):
         obj = KeyManager()
         sm.registerUtility(aq_base(obj), IKeyManager, '')
 
+    # disable CSRF protection which will fail due to
+    # using different secrets than when the authenticator
+    # was generated
+    request = getRequest()
+    if request is not None:
+        alsoProvides(request, IDisableCSRFProtection)
+
 
 def to50alhpa3(context):
     """5.0alpha2 - > 5.0alpha3"""
diff --git a/plone/app/upgrade/v50/final.py b/plone/app/upgrade/v50/final.py
index 7785528e..ab980353 100644
--- a/plone/app/upgrade/v50/final.py
+++ b/plone/app/upgrade/v50/final.py
@@ -4,6 +4,8 @@
 from plone.registry.interfaces import IRegistry
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.utils import safe_unicode
+from Products.ZCatalog.ProgressHandler import ZLogHandler
+from zExceptions import NotFound
 from zope.component import getUtility
 from zope.component.hooks import getSite
 
@@ -68,9 +70,17 @@ def refresh_getIcon_catalog_metadata(context):
 
         cnt = 0
         # search whole catalog
-        for brain in zcatalog.unrestrictedSearchResults():
+        results = zcatalog.unrestrictedSearchResults()
+        num_objects = len(results)
+        pghandler = ZLogHandler(1000)
+        pghandler.init('Updating getIcon metadata', num_objects)
+        for brain in results:
+            pghandler.report(cnt)
             # First get the new value
-            obj = brain._unrestrictedGetObject()
+            try:
+                obj = brain._unrestrictedGetObject()
+            except (AttributeError, KeyError, TypeError, NotFound):
+                continue
             new_value = bool(getattr(aq_base(obj), 'image', False))
 
             # We can now update the record with the new getIcon value
@@ -80,6 +90,7 @@ def refresh_getIcon_catalog_metadata(context):
 
             cnt += 1  # we are curious
         # done
+        pghandler.finish()
         logger.info('Reindexed `getIcon` for %s items' % str(cnt))
 
     refresh_getIcon_catalog_metadata(context)
diff --git a/plone/app/upgrade/v51/betas.py b/plone/app/upgrade/v51/betas.py
index 57eca92c..b0d45ffb 100644
--- a/plone/app/upgrade/v51/betas.py
+++ b/plone/app/upgrade/v51/betas.py
@@ -5,6 +5,8 @@
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.interfaces import IFilterSchema
 from Products.CMFPlone.interfaces import ISearchSchema
+from Products.ZCatalog.ProgressHandler import ZLogHandler
+from zExceptions import NotFound
 from zope.component import getUtility
 import logging
 
@@ -152,8 +154,16 @@ def reindex_mime_type(context):
               'Products.ATContentTypes.interfaces.file.IFileContent',
               'Products.ATContentTypes.interfaces.image.IImageContent']
     cnt = 0
-    for brain in zcatalog.unrestrictedSearchResults(object_provides=ifaces):
-        obj = brain._unrestrictedGetObject()
+    results = zcatalog.unrestrictedSearchResults(object_provides=ifaces)
+    num_objects = len(results)
+    pghandler = ZLogHandler(1000)
+    pghandler.init('Updating mime_type metadata', num_objects)
+    for brain in results:
+        pghandler.report(cnt)
+        try:
+            obj = brain._unrestrictedGetObject()
+        except (AttributeError, KeyError, TypeError, NotFound):
+            continue
         if not obj:
             continue
         # First get the new value:
@@ -169,6 +179,7 @@ def reindex_mime_type(context):
         record[metadata_index] = new_value
         catalog.data[brain.getRID()] = tuple(record)
         cnt += 1
+    pghandler.finish()
     logger.info('Reindexed `mime_type` for %s items' % str(cnt))
 
 
diff --git a/setup.py b/setup.py
index 66b7475e..95b35014 100644
--- a/setup.py
+++ b/setup.py
@@ -1,6 +1,6 @@
 from setuptools import setup, find_packages
 
-version = '2.0.10.dev0'
+version = '2.0.11.dev0'
 
 setup(
     name='plone.app.upgrade',


Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2017-12-13T16:12:24-05:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/dd679e6db7802fe52b386ed729c45ece5132c2d3

Fix changelog

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index a33d2ca0..6c6decea 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -21,6 +21,10 @@ Bug fixes:
   This fixes running specific upgrade steps via the portal_setup UI.
   [davisagli]
 
+- Avoid triggering an unnecessary migration of user logins
+  when the use_email_as_login setting is migrated to portal_registry.
+  [davisagli]
+
 
 2.0.10 (2017-12-13)
 -------------------
@@ -31,10 +35,6 @@ Bug fixes:
   Fixes https://github.com/plone/Products.CMFPlone/issues/2238
   [pbauer]
 
-- Avoid triggering an unnecessary migration of user logins
-  when the use_email_as_login setting is migrated to portal_registry.
-  [davisagli]
-
 
 2.0.9 (2017-11-26)
 ------------------


Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2017-12-14T17:22:11-05:00
Author: David Glick (davisagli) <david.glick@plone.org>
Commit: https://github.com/plone/plone.app.upgrade/commit/446cfcc02fd347bdc4a9ca76d5defdd4b7132a4e

Merge pull request #145 from plone/davisagli-suppress-login-migration

Avoid triggering user login migration

Files changed:
M CHANGES.rst
M plone/app/upgrade/v50/betas.py
M plone/app/upgrade/v50/configure.zcml

diff --git a/CHANGES.rst b/CHANGES.rst
index b386dfea..6c6decea 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -21,6 +21,10 @@ Bug fixes:
   This fixes running specific upgrade steps via the portal_setup UI.
   [davisagli]
 
+- Avoid triggering an unnecessary migration of user logins
+  when the use_email_as_login setting is migrated to portal_registry.
+  [davisagli]
+
 
 2.0.10 (2017-12-13)
 -------------------
diff --git a/plone/app/upgrade/v50/betas.py b/plone/app/upgrade/v50/betas.py
index 2ece1ce8..ce1af4d8 100644
--- a/plone/app/upgrade/v50/betas.py
+++ b/plone/app/upgrade/v50/betas.py
@@ -167,8 +167,18 @@ def _get_enable_self_reg():
     settings.enable_user_folders = pmembership.getMemberareaCreationFlag()
     settings.allow_anon_views_about = site_properties.getProperty(
         'allowAnonymousViewAbout', False)
+
+    # suppress migrating login names while setting use_email_as_login to existing value
+    from Products.CMFPlone.controlpanel import events
+    migrate_to_email_login = events.migrate_to_email_login
+    migrate_from_email_login = events.migrate_from_email_login
+    events.migrate_to_email_login = lambda x: None
+    events.migrate_to_email_login = lambda x: None
     settings.use_email_as_login = site_properties.getProperty(
         'use_email_as_login', False)
+    events.migrate_to_email_login = migrate_to_email_login
+    events.migrate_from_email_login = migrate_from_email_login
+
     settings.use_uuid_as_userid = site_properties.getProperty(
         'use_uuid_as_userid', False)
 
diff --git a/plone/app/upgrade/v50/configure.zcml b/plone/app/upgrade/v50/configure.zcml
index a6ddf604..5e19c679 100644
--- a/plone/app/upgrade/v50/configure.zcml
+++ b/plone/app/upgrade/v50/configure.zcml
@@ -158,7 +158,7 @@
            />
 
        <gs:upgradeStep
-           title="Run to50beta4 upgrade profile"
+           title="Upgrade plone.app.querystring"
            description=""
            handler=".betas.upgrade_querystring"
            />


