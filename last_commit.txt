Repository: plone.app.users


Branch: refs/heads/master
Date: 2016-07-05T23:13:53+02:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.app.users/commit/574c886d0e13f911140845a13e9d98c5ed5e581b

Use zope.interface decorator

This not only makes code more pleasent to read,
but also makes the code python 3 compatible
(while maintaining python 2 compatibility).

Files changed:
M CHANGES.rst
M plone/app/users/browser/account.py
M plone/app/users/browser/schemaeditor.py
M plone/app/users/field_extender.py
M plone/app/users/schema.py
M plone/app/users/vocabularies.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 7d9fe20..37a3b8c 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 2.3.6 (2016-05-12)
diff --git a/plone/app/users/browser/account.py b/plone/app/users/browser/account.py
index bd8027a..d782ed6 100644
--- a/plone/app/users/browser/account.py
+++ b/plone/app/users/browser/account.py
@@ -23,7 +23,7 @@
 from zope.component import getMultiAdapter
 from zope.component import getUtility
 from zope.event import notify
-from zope.interface import implements
+from zope.interface import implementer
 
 
 MESSAGE_EMAIL_CANNOT_CHANGE = \
@@ -127,10 +127,9 @@ def set_portrait(self, value):
     portrait = property(get_portrait, set_portrait)
 
 
+@implementer(IAccountPanelForm)
 class AccountPanelForm(AutoExtensibleForm, form.Form):
     """A simple form to be used as a basis for account panel screens."""
-
-    implements(IAccountPanelForm)
     schema = IAccountPanelForm
     template = ViewPageTemplateFile('account-panel.pt')
     enableCSRFProtection = True
diff --git a/plone/app/users/browser/schemaeditor.py b/plone/app/users/browser/schemaeditor.py
index 249726a..2445ae5 100644
--- a/plone/app/users/browser/schemaeditor.py
+++ b/plone/app/users/browser/schemaeditor.py
@@ -5,7 +5,7 @@
 from zope.component import getGlobalSiteManager
 from zope.component.hooks import getSite
 from zope.annotation.interfaces import IAnnotations
-from zope.interface import Interface, implements
+from zope.interface import Interface, implementer
 
 from Products.CMFPlone import PloneMessageFactory as _
 from Products.CMFPlone.interfaces import IPloneSiteRoot
@@ -92,8 +92,8 @@ class SchemaListingPage(FormWrapper):
     index = ViewPageTemplateFile('schema_layout.pt')
 
 
+@implementer(IMemberSchemaContext)
 class MemberSchemaContext(SchemaContext):
-    implements(IMemberSchemaContext)
 
     label = _(u"Edit Member Form Fields")
 
@@ -181,10 +181,10 @@ def get_ttw_edited_schema():
     return ''
 
 
+@implementer(IFieldMetadataHandler)
 class UsersMetadataSchemaExporter(object):
     """Support the security: namespace in model definitions.
     """
-    implements(IFieldMetadataHandler)
     namespace = ns = USERS_NAMESPACE
     prefix = USERS_PREFIX
     if_attrs = (
diff --git a/plone/app/users/field_extender.py b/plone/app/users/field_extender.py
index 9895a9b..690a423 100644
--- a/plone/app/users/field_extender.py
+++ b/plone/app/users/field_extender.py
@@ -1,4 +1,4 @@
-from zope.interface import Interface, implements
+from zope.interface import Interface, implementer
 from zope import schema
 
 from zope.component import adapts
@@ -57,8 +57,8 @@ def _set_forms(self, value):
     forms = property(_get_forms, _set_forms)
 
 
+@implementer(IFieldMetadataHandler)
 class UserFormSelectionMetadata(object):
-    implements(IFieldMetadataHandler)
 
     namespace = USERS_NAMESPACE
     prefix = USERS_PREFIX
diff --git a/plone/app/users/schema.py b/plone/app/users/schema.py
index ed80d92..cfb4329 100644
--- a/plone/app/users/schema.py
+++ b/plone/app/users/schema.py
@@ -5,7 +5,7 @@
 from Products.CMFPlone import PloneMessageFactory as _
 from zope import schema
 from zope.component import getUtility
-from zope.interface import Interface, implements, implementer
+from zope.interface import Interface, implementer, implementer
 from ZTUtils import make_query
 from plone.formwidget.namedfile.widget import NamedImageWidget
 from plone.namedfile.interfaces import INamedImageField
@@ -47,8 +47,8 @@ class ProtectedEmail(Email):
     pass
 
 
+@implementer(IFieldFactory)
 class NotEditableFieldFactory(FieldFactory):
-    implements(IFieldFactory)
 
     title = _(u'(protected)')
 
diff --git a/plone/app/users/vocabularies.py b/plone/app/users/vocabularies.py
index 9942c1b..023a2d7 100644
--- a/plone/app/users/vocabularies.py
+++ b/plone/app/users/vocabularies.py
@@ -4,7 +4,7 @@
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.utils import normalizeString
 from Products.CMFPlone.utils import safe_unicode
-from zope.interface import implements
+from zope.interface import implementer
 from zope.schema import getFieldNames
 from zope.schema.interfaces import IVocabularyFactory
 from zope.schema.vocabulary import SimpleVocabulary
@@ -19,6 +19,7 @@
 JOIN_CONST = ['username', 'password', 'email', 'mail_me']
 
 
+@implementer(IVocabularyFactory)
 class UserRegistrationFieldsVocabulary(object):
     """Returns list of fields available for registration form.
 
@@ -45,7 +46,6 @@ class UserRegistrationFieldsVocabulary(object):
       ('email', 'email', 'email')
 
     """
-    implements(IVocabularyFactory)
 
     def __call__(self, context):
         # default list of Registration Form fields
@@ -62,6 +62,7 @@ def __call__(self, context):
 UserRegistrationFieldsVocabularyFactory = UserRegistrationFieldsVocabulary()
 
 
+@implementer(IVocabularyFactory)
 class GroupIdVocabulary(object):
     """
     Return vocab of groups to add new user to.
@@ -92,7 +93,6 @@ class GroupIdVocabulary(object):
       [u'Group Title (fancygroup)', u'Reviewers', u'Site Administrators']
 
     """
-    implements(IVocabularyFactory)
 
     def __call__(self, context):
         site = getSite()


Repository: plone.app.users


Branch: refs/heads/master
Date: 2016-07-10T08:52:20+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.users/commit/a12553ed1ee779fe51fc9129348e3f5ca68cee96

Merge pull request #59 from plone/gforcada-use-zope-decorators

Use zope.interface decorator

Files changed:
M CHANGES.rst
M plone/app/users/browser/account.py
M plone/app/users/browser/schemaeditor.py
M plone/app/users/field_extender.py
M plone/app/users/schema.py
M plone/app/users/vocabularies.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 7d9fe20..37a3b8c 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 2.3.6 (2016-05-12)
diff --git a/plone/app/users/browser/account.py b/plone/app/users/browser/account.py
index bd8027a..d782ed6 100644
--- a/plone/app/users/browser/account.py
+++ b/plone/app/users/browser/account.py
@@ -23,7 +23,7 @@
 from zope.component import getMultiAdapter
 from zope.component import getUtility
 from zope.event import notify
-from zope.interface import implements
+from zope.interface import implementer
 
 
 MESSAGE_EMAIL_CANNOT_CHANGE = \
@@ -127,10 +127,9 @@ def set_portrait(self, value):
     portrait = property(get_portrait, set_portrait)
 
 
+@implementer(IAccountPanelForm)
 class AccountPanelForm(AutoExtensibleForm, form.Form):
     """A simple form to be used as a basis for account panel screens."""
-
-    implements(IAccountPanelForm)
     schema = IAccountPanelForm
     template = ViewPageTemplateFile('account-panel.pt')
     enableCSRFProtection = True
diff --git a/plone/app/users/browser/schemaeditor.py b/plone/app/users/browser/schemaeditor.py
index 249726a..2445ae5 100644
--- a/plone/app/users/browser/schemaeditor.py
+++ b/plone/app/users/browser/schemaeditor.py
@@ -5,7 +5,7 @@
 from zope.component import getGlobalSiteManager
 from zope.component.hooks import getSite
 from zope.annotation.interfaces import IAnnotations
-from zope.interface import Interface, implements
+from zope.interface import Interface, implementer
 
 from Products.CMFPlone import PloneMessageFactory as _
 from Products.CMFPlone.interfaces import IPloneSiteRoot
@@ -92,8 +92,8 @@ class SchemaListingPage(FormWrapper):
     index = ViewPageTemplateFile('schema_layout.pt')
 
 
+@implementer(IMemberSchemaContext)
 class MemberSchemaContext(SchemaContext):
-    implements(IMemberSchemaContext)
 
     label = _(u"Edit Member Form Fields")
 
@@ -181,10 +181,10 @@ def get_ttw_edited_schema():
     return ''
 
 
+@implementer(IFieldMetadataHandler)
 class UsersMetadataSchemaExporter(object):
     """Support the security: namespace in model definitions.
     """
-    implements(IFieldMetadataHandler)
     namespace = ns = USERS_NAMESPACE
     prefix = USERS_PREFIX
     if_attrs = (
diff --git a/plone/app/users/field_extender.py b/plone/app/users/field_extender.py
index 9895a9b..690a423 100644
--- a/plone/app/users/field_extender.py
+++ b/plone/app/users/field_extender.py
@@ -1,4 +1,4 @@
-from zope.interface import Interface, implements
+from zope.interface import Interface, implementer
 from zope import schema
 
 from zope.component import adapts
@@ -57,8 +57,8 @@ def _set_forms(self, value):
     forms = property(_get_forms, _set_forms)
 
 
+@implementer(IFieldMetadataHandler)
 class UserFormSelectionMetadata(object):
-    implements(IFieldMetadataHandler)
 
     namespace = USERS_NAMESPACE
     prefix = USERS_PREFIX
diff --git a/plone/app/users/schema.py b/plone/app/users/schema.py
index ed80d92..cfb4329 100644
--- a/plone/app/users/schema.py
+++ b/plone/app/users/schema.py
@@ -5,7 +5,7 @@
 from Products.CMFPlone import PloneMessageFactory as _
 from zope import schema
 from zope.component import getUtility
-from zope.interface import Interface, implements, implementer
+from zope.interface import Interface, implementer, implementer
 from ZTUtils import make_query
 from plone.formwidget.namedfile.widget import NamedImageWidget
 from plone.namedfile.interfaces import INamedImageField
@@ -47,8 +47,8 @@ class ProtectedEmail(Email):
     pass
 
 
+@implementer(IFieldFactory)
 class NotEditableFieldFactory(FieldFactory):
-    implements(IFieldFactory)
 
     title = _(u'(protected)')
 
diff --git a/plone/app/users/vocabularies.py b/plone/app/users/vocabularies.py
index 9942c1b..023a2d7 100644
--- a/plone/app/users/vocabularies.py
+++ b/plone/app/users/vocabularies.py
@@ -4,7 +4,7 @@
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.utils import normalizeString
 from Products.CMFPlone.utils import safe_unicode
-from zope.interface import implements
+from zope.interface import implementer
 from zope.schema import getFieldNames
 from zope.schema.interfaces import IVocabularyFactory
 from zope.schema.vocabulary import SimpleVocabulary
@@ -19,6 +19,7 @@
 JOIN_CONST = ['username', 'password', 'email', 'mail_me']
 
 
+@implementer(IVocabularyFactory)
 class UserRegistrationFieldsVocabulary(object):
     """Returns list of fields available for registration form.
 
@@ -45,7 +46,6 @@ class UserRegistrationFieldsVocabulary(object):
       ('email', 'email', 'email')
 
     """
-    implements(IVocabularyFactory)
 
     def __call__(self, context):
         # default list of Registration Form fields
@@ -62,6 +62,7 @@ def __call__(self, context):
 UserRegistrationFieldsVocabularyFactory = UserRegistrationFieldsVocabulary()
 
 
+@implementer(IVocabularyFactory)
 class GroupIdVocabulary(object):
     """
     Return vocab of groups to add new user to.
@@ -92,7 +93,6 @@ class GroupIdVocabulary(object):
       [u'Group Title (fancygroup)', u'Reviewers', u'Site Administrators']
 
     """
-    implements(IVocabularyFactory)
 
     def __call__(self, context):
         site = getSite()


