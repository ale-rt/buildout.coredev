Repository: plone.uuid


Branch: refs/heads/master
Date: 2016-02-11T22:11:48+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.uuid/commit/8bab967936cf2e95b0cecf1be25aab5052c6efba

autopep8safe

Files changed:
M plone/uuid/__init__.py
M plone/uuid/interfaces.py
M setup.py

diff --git a/plone/uuid/__init__.py b/plone/uuid/__init__.py
index 63d2c57..b191f1b 100644
--- a/plone/uuid/__init__.py
+++ b/plone/uuid/__init__.py
@@ -1,2 +1 @@
-  # -*- extra stuff goes here -*-
-
+# -*- extra stuff goes here -*-
diff --git a/plone/uuid/interfaces.py b/plone/uuid/interfaces.py
index 5e9c725..66d29bb 100644
--- a/plone/uuid/interfaces.py
+++ b/plone/uuid/interfaces.py
@@ -2,6 +2,7 @@
 
 ATTRIBUTE_NAME = '_plone.uuid'
 
+
 class IUUIDGenerator(Interface):
     """Utility for generating UUIDs
     """
@@ -10,11 +11,13 @@ def __call__():
         """Generate a new UUID.
         """
 
+
 class IUUIDAware(Interface):
     """Marker interface for objects that have UUIDs. These should be
     adaptable to IUUID.
     """
 
+
 class IAttributeUUID(IUUIDAware):
     """Marker interface for objects that have UUIDs stored in a simple
     attribute.
@@ -23,6 +26,7 @@ class IAttributeUUID(IUUIDAware):
     objects are created (IObjectCreatedEvent).
     """
 
+
 class IUUID(Interface):
     """Abstract representation of a UUID.
 
@@ -30,6 +34,7 @@ class IUUID(Interface):
     fail if the object does not have a UUID (yet).
     """
 
+
 class IMutableUUID(Interface):
     """Adapt an object to this interface to manage the UUID of an object
 
diff --git a/setup.py b/setup.py
index b16ab1f..5e09cd3 100644
--- a/setup.py
+++ b/setup.py
@@ -5,7 +5,7 @@
 long_description = (
     open('README.rst').read() + '\n' +
     open('CHANGES.rst').read() + '\n'
-    )
+)
 
 setup(
     name='plone.uuid',
@@ -41,4 +41,4 @@
     ],
     entry_points="""
     """,
-    )
+)


