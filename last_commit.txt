Repository: plone.app.theming


Branch: refs/heads/master
Date: 2017-03-02T13:21:57+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.theming/commit/005503c4a849eb9eb7d255e541b64da730f3ee28

reduce log level of ThemingPolicy cache to debug

Files changed:
M CHANGES.rst
M src/plone/app/theming/policy.py

diff --git a/CHANGES.rst b/CHANGES.rst
index d5df04e..277efc8 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Reduce log level of ThemingPolicy cache to 'debug'.
+  [jensens]
 
 
 1.3.5 (2017-02-12)
diff --git a/src/plone/app/theming/policy.py b/src/plone/app/theming/policy.py
index 4744779..6984c1a 100644
--- a/src/plone/app/theming/policy.py
+++ b/src/plone/app/theming/policy.py
@@ -14,7 +14,7 @@
 from plone.app.theming.interfaces import IThemeSettings
 from plone.app.theming import utils
 
-log = getLogger(__name__)
+logger = getLogger(__name__)
 _local_cache = threading.local()
 
 
@@ -107,8 +107,10 @@ def getCache(self, theme=None):
         key = self.getCacheKey(theme)
         cache = caches.get(key)
         if cache is None:
-            log.info("initializing local cache on thread %s for %s",
-                     threading.current_thread().ident, key)
+            logger.debug(
+                'initializing local cache on thread %s for %s',
+                threading.current_thread().ident, key
+            )
             cache = caches[key] = ThemeCache()
         return cache
 
@@ -122,15 +124,17 @@ def getCacheStorage(self):
         if not hasattr(_local_cache, 'themedata'):
             self._reset_local_cache()
         if self._get_shared_invalidation() > _local_cache.themedata['mtime']:
-            log.info("shared invalidation requires local cache reset on %s",
-                     threading.current_thread().ident)
+            logger.debug(
+                'shared invalidation requires local cache reset on %s',
+                threading.current_thread().ident
+            )
             self._reset_local_cache()
         return _local_cache.themedata
 
     def invalidateCache(self):
         """When our settings are changed, invalidate the cache on all zeo clients
         """
-        log.info("invalidating cache across all threads and processes")
+        logger.info('invalidating cache across all threads and processes')
         self._reset_local_cache()
         self._set_shared_invalidation()
 
@@ -140,8 +144,10 @@ def _reset_local_cache(self):
         Removes actual theme data, leaving only mtime
         """
         _local_cache.themedata = {'mtime': time.time()}
-        log.info("local cache invalidated on thread %s",
-                 threading.current_thread().ident)
+        logger.debug(
+            'local cache invalidated on thread %s',
+            threading.current_thread().ident
+        )
 
     def _set_shared_invalidation(self):
         """Signal to other threads and processes they should invalidate their
@@ -149,7 +155,7 @@ def _set_shared_invalidation(self):
         registry = queryUtility(IRegistry)
         setattr(registry, '_theme_cache_mtime', time.time())
         registry._p_changed = True
-        log.info("shared cache invalidation marker updated")
+        logger.debug('shared cache invalidation marker updated')
 
     def _get_shared_invalidation(self):
         registry = queryUtility(IRegistry)


Repository: plone.app.theming


Branch: refs/heads/master
Date: 2017-03-02T13:30:28+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.theming/commit/9ef4630ce055d9d0ceafe88a2696bbe627aa0618

isort

Files changed:
M setup.py
M src/plone/app/theming/browser/controlpanel.py
M src/plone/app/theming/browser/help.py
M src/plone/app/theming/browser/mapper.py
M src/plone/app/theming/browser/themefile.py
M src/plone/app/theming/interfaces.py
M src/plone/app/theming/plugins/hooks.py
M src/plone/app/theming/policy.py
M src/plone/app/theming/testing.py
M src/plone/app/theming/tests/test_controlpanel.py
M src/plone/app/theming/tests/test_exportimport.py
M src/plone/app/theming/tests/test_policy.py
M src/plone/app/theming/tests/test_utils.py
M src/plone/app/theming/traversal.py
M src/plone/app/theming/upgrade.py
M src/plone/app/theming/utils.py
M src/plone/app/theming/zmi.py

diff --git a/setup.py b/setup.py
index ef73fed..a76583d 100644
--- a/setup.py
+++ b/setup.py
@@ -1,8 +1,10 @@
 # -*- coding: utf-8 -*-
 from setuptools import find_packages
 from setuptools import setup
+
 import os
 
+
 version = '1.3.6.dev0'
 
 longdescription = open("README.rst").read()
diff --git a/src/plone/app/theming/browser/controlpanel.py b/src/plone/app/theming/browser/controlpanel.py
index b7c809d..e5d5488 100644
--- a/src/plone/app/theming/browser/controlpanel.py
+++ b/src/plone/app/theming/browser/controlpanel.py
@@ -1,35 +1,37 @@
 # -*- coding: utf-8 -*-
 from AccessControl import Unauthorized
-from Products.CMFCore.utils import getToolByName
-from Products.Five.browser.decode import processInputs
-from Products.statusmessages.interfaces import IStatusMessage
-from Products.CMFPlone.interfaces import ILinkSchema
+from plone.app.theming.interfaces import _
 from plone.app.theming.interfaces import DEFAULT_THEME_FILENAME
 from plone.app.theming.interfaces import IThemeSettings
 from plone.app.theming.interfaces import RULE_FILENAME
 from plone.app.theming.interfaces import TEMPLATE_THEME
 from plone.app.theming.interfaces import THEME_RESOURCE_NAME
-from plone.app.theming.interfaces import _
-from plone.app.theming.plugins.utils import getPluginSettings
 from plone.app.theming.plugins.utils import getPlugins
-from plone.app.theming.utils import theming_policy
+from plone.app.theming.plugins.utils import getPluginSettings
 from plone.app.theming.utils import applyTheme
 from plone.app.theming.utils import createThemeFromTemplate
 from plone.app.theming.utils import extractThemeInfo
 from plone.app.theming.utils import getAvailableThemes
 from plone.app.theming.utils import getOrCreatePersistentResourceDirectory
 from plone.app.theming.utils import getZODBThemes
+from plone.app.theming.utils import theming_policy
 from plone.memoize.instance import memoize
 from plone.registry.interfaces import IRegistry
 from plone.resource.utils import queryResourceDirectory
+from Products.CMFCore.utils import getToolByName
+from Products.CMFPlone.interfaces import ILinkSchema
+from Products.Five.browser.decode import processInputs
+from Products.statusmessages.interfaces import IStatusMessage
 from zope.component import getMultiAdapter
 from zope.component import getUtility
 from zope.component.hooks import getSite
 from zope.publisher.browser import BrowserView
 from zope.schema.interfaces import IVocabularyFactory
+
 import logging
 import zipfile
 
+
 logger = logging.getLogger('plone.app.theming')
 
 
diff --git a/src/plone/app/theming/browser/help.py b/src/plone/app/theming/browser/help.py
index a7d327a..713557a 100644
--- a/src/plone/app/theming/browser/help.py
+++ b/src/plone/app/theming/browser/help.py
@@ -1,5 +1,6 @@
 # -*- coding: utf-8 -*-
 from zope.publisher.browser import BrowserView
+
 import docutils.core
 import pkg_resources
 
diff --git a/src/plone/app/theming/browser/mapper.py b/src/plone/app/theming/browser/mapper.py
index 03d3ffd..f0fd3bb 100644
--- a/src/plone/app/theming/browser/mapper.py
+++ b/src/plone/app/theming/browser/mapper.py
@@ -1,11 +1,5 @@
 # -*- coding: utf-8 -*-
 from AccessControl import Unauthorized
-from Products.CMFCore.utils import _getAuthenticatedUser
-from Products.CMFCore.utils import getToolByName
-from Products.CMFPlone.resources import add_bundle_on_request
-from Products.Five.browser.decode import processInputs
-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-from Products.statusmessages.interfaces import IStatusMessage
 from diazo.utils import quote_param
 from plone.app.theming.interfaces import RULE_FILENAME
 from plone.app.theming.interfaces import THEME_EXTENSIONS
@@ -20,12 +14,19 @@
 from plone.registry.interfaces import IRegistry
 from plone.resource.interfaces import IWritableResourceDirectory
 from plone.subrequest import subrequest
+from Products.CMFCore.utils import _getAuthenticatedUser
+from Products.CMFCore.utils import getToolByName
+from Products.CMFPlone.resources import add_bundle_on_request
+from Products.Five.browser.decode import processInputs
+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
+from Products.statusmessages.interfaces import IStatusMessage
 from repoze.xmliter.utils import getHTMLSerializer
 from zExceptions import NotFound
 from zope.component import getMultiAdapter
 from zope.component import getUtility
 from zope.component.hooks import getSite
 from zope.publisher.browser import BrowserView
+
 import lxml.etree
 import lxml.html
 import lxml.html.builder
diff --git a/src/plone/app/theming/browser/themefile.py b/src/plone/app/theming/browser/themefile.py
index 82af425..5ef3d5d 100644
--- a/src/plone/app/theming/browser/themefile.py
+++ b/src/plone/app/theming/browser/themefile.py
@@ -1,8 +1,10 @@
 # -*- coding: utf-8 -*-
-from Products.Five.browser import BrowserView
 from plone.resource.directory import PersistentResourceDirectory
+from Products.Five.browser import BrowserView
+
 import json
 
+
 class FileUploadView(BrowserView):
     """
     Handle file uploads
diff --git a/src/plone/app/theming/interfaces.py b/src/plone/app/theming/interfaces.py
index ae8e1ec..20642ee 100644
--- a/src/plone/app/theming/interfaces.py
+++ b/src/plone/app/theming/interfaces.py
@@ -5,6 +5,7 @@
 from zope.interface import Attribute
 from zope.interface import Interface
 
+
 _ = MessageFactory(u"plone")
 
 THEME_RESOURCE_NAME = 'theme'
diff --git a/src/plone/app/theming/plugins/hooks.py b/src/plone/app/theming/plugins/hooks.py
index 93b0c6b..2744e43 100644
--- a/src/plone/app/theming/plugins/hooks.py
+++ b/src/plone/app/theming/plugins/hooks.py
@@ -1,7 +1,7 @@
 # -*- coding: utf-8 -*-
 from plone.app.theming.interfaces import THEME_RESOURCE_NAME
-from plone.app.theming.plugins.utils import getPluginSettings
 from plone.app.theming.plugins.utils import getPlugins
+from plone.app.theming.plugins.utils import getPluginSettings
 from plone.app.theming.utils import theming_policy
 from plone.resource.utils import iterDirectoriesOfType
 from plone.resource.utils import queryResourceDirectory
diff --git a/src/plone/app/theming/policy.py b/src/plone/app/theming/policy.py
index 6984c1a..d9db052 100644
--- a/src/plone/app/theming/policy.py
+++ b/src/plone/app/theming/policy.py
@@ -1,18 +1,18 @@
 # -*- coding: utf-8 -*-
 from App.config import getConfiguration
 from logging import getLogger
-import threading
-import time
-
+from plone.app.theming import utils
+from plone.app.theming.interfaces import IThemeSettings
+from plone.app.theming.interfaces import IThemingPolicy
 from plone.registry.interfaces import IRegistry
 from zope.component import queryUtility
 from zope.component.hooks import getSite
 from zope.interface import implementer
 from zope.publisher.interfaces import IRequest
 
-from plone.app.theming.interfaces import IThemingPolicy
-from plone.app.theming.interfaces import IThemeSettings
-from plone.app.theming import utils
+import threading
+import time
+
 
 logger = getLogger(__name__)
 _local_cache = threading.local()
diff --git a/src/plone/app/theming/testing.py b/src/plone/app/theming/testing.py
index 07767f0..6892326 100644
--- a/src/plone/app/theming/testing.py
+++ b/src/plone/app/theming/testing.py
@@ -1,7 +1,7 @@
 # -*- coding: utf-8 -*-
 from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FIXTURE
-from plone.app.testing import PloneSandboxLayer
 from plone.app.testing import applyProfile
+from plone.app.testing import PloneSandboxLayer
 from plone.app.testing.layers import FunctionalTesting
 from plone.app.testing.layers import IntegrationTesting
 from zope.configuration import xmlconfig
diff --git a/src/plone/app/theming/tests/test_controlpanel.py b/src/plone/app/theming/tests/test_controlpanel.py
index 29d9800..edf73ee 100644
--- a/src/plone/app/theming/tests/test_controlpanel.py
+++ b/src/plone/app/theming/tests/test_controlpanel.py
@@ -1,10 +1,11 @@
 # -*- coding: utf-8 -*-
+from plone.app.testing import setRoles
 from plone.app.testing import TEST_USER_ID
 from plone.app.testing import TEST_USER_NAME
 from plone.app.testing import TEST_USER_PASSWORD
-from plone.app.testing import setRoles
 from plone.app.theming.testing import THEMING_FUNCTIONAL_TESTING
 from plone.testing.z2 import Browser
+
 import unittest2 as unittest
 
 
diff --git a/src/plone/app/theming/tests/test_exportimport.py b/src/plone/app/theming/tests/test_exportimport.py
index 11e03dd..45aa5ff 100644
--- a/src/plone/app/theming/tests/test_exportimport.py
+++ b/src/plone/app/theming/tests/test_exportimport.py
@@ -1,5 +1,6 @@
 # -*- coding: utf-8 -*-
 from plone.app.theming.testing import THEMING_INTEGRATION_TESTING
+
 import unittest2 as unittest
 
 
diff --git a/src/plone/app/theming/tests/test_policy.py b/src/plone/app/theming/tests/test_policy.py
index c23f926..43eeaa6 100644
--- a/src/plone/app/theming/tests/test_policy.py
+++ b/src/plone/app/theming/tests/test_policy.py
@@ -1,14 +1,13 @@
 # -*- coding: utf-8 -*-
-import time
-import threading
-import transaction
-import unittest2 as unittest
-
+from plone.app.theming.testing import THEMING_FUNCTIONAL_TESTING
+from plone.app.theming.utils import theming_policy
 from plone.registry.interfaces import IRegistry
 from zope.component import queryUtility
 
-from plone.app.theming.testing import THEMING_FUNCTIONAL_TESTING
-from plone.app.theming.utils import theming_policy
+import threading
+import time
+import transaction
+import unittest2 as unittest
 
 
 class TestFunctional(unittest.TestCase):
diff --git a/src/plone/app/theming/tests/test_utils.py b/src/plone/app/theming/tests/test_utils.py
index 00c41cf..3ed839a 100644
--- a/src/plone/app/theming/tests/test_utils.py
+++ b/src/plone/app/theming/tests/test_utils.py
@@ -1,5 +1,6 @@
 # -*- coding: utf-8 -*-
 from plone.app.theming.testing import THEMING_INTEGRATION_TESTING
+
 import unittest2 as unittest
 
 
diff --git a/src/plone/app/theming/traversal.py b/src/plone/app/theming/traversal.py
index 4e1329d..ef625be 100644
--- a/src/plone/app/theming/traversal.py
+++ b/src/plone/app/theming/traversal.py
@@ -4,6 +4,7 @@
 from plone.resource.traversal import ResourceTraverser
 from plone.resource.utils import queryResourceDirectory
 from zExceptions import NotFound
+
 import urllib
 
 
diff --git a/src/plone/app/theming/upgrade.py b/src/plone/app/theming/upgrade.py
index 0d96248..8bbed90 100644
--- a/src/plone/app/theming/upgrade.py
+++ b/src/plone/app/theming/upgrade.py
@@ -1,6 +1,7 @@
 # -*- coding: utf-8 -*-
 from Products.CMFCore.utils import getToolByName
 
+
 PROFILE_ID = "profile-plone.app.theming:default"
 
 
diff --git a/src/plone/app/theming/utils.py b/src/plone/app/theming/utils.py
index 8bfb0a8..c367fe1 100644
--- a/src/plone/app/theming/utils.py
+++ b/src/plone/app/theming/utils.py
@@ -1,40 +1,42 @@
 # -*- coding: utf-8 -*-
 from ConfigParser import SafeConfigParser
-from Products.CMFCore.interfaces import IContentish
-from Products.CMFCore.interfaces import ISiteRoot
-from Products.CMFPlone.utils import safe_unicode
-from Products.PageTemplates.Expressions import getEngine
-from StringIO import StringIO
 from diazo.compiler import compile_theme
 from diazo.compiler import quote_param
 from lxml import etree
-from plone.app.theming.interfaces import IThemingPolicy
 from plone.app.theming.interfaces import INoRequest
+from plone.app.theming.interfaces import IThemingPolicy
 from plone.app.theming.interfaces import MANIFEST_FORMAT
 from plone.app.theming.interfaces import RULE_FILENAME
 from plone.app.theming.interfaces import THEME_RESOURCE_NAME
-from plone.app.theming.plugins.utils import getPluginSettings
 from plone.app.theming.plugins.utils import getPlugins
+from plone.app.theming.plugins.utils import getPluginSettings
 from plone.app.theming.theme import Theme
 from plone.i18n.normalizer.interfaces import IURLNormalizer
 from plone.resource.interfaces import IResourceDirectory
-from plone.resource.manifest import MANIFEST_FILENAME
 from plone.resource.manifest import extractManifestFromZipFile
+from plone.resource.manifest import getAllResources
 from plone.resource.manifest import getManifest
 from plone.resource.manifest import getZODBResources
-from plone.resource.manifest import getAllResources
+from plone.resource.manifest import MANIFEST_FILENAME
 from plone.resource.utils import cloneResourceDirectory
 from plone.resource.utils import iterDirectoriesOfType
 from plone.resource.utils import queryResourceDirectory
 from plone.subrequest import subrequest
+from Products.CMFCore.interfaces import IContentish
+from Products.CMFCore.interfaces import ISiteRoot
+from Products.CMFPlone.utils import safe_unicode
+from Products.PageTemplates.Expressions import getEngine
+from StringIO import StringIO
 from urlparse import urlsplit
 from zope.component import getUtility
 from zope.component import queryMultiAdapter
 from zope.globalrequest import getRequest
 from zope.interface import implementer
+
 import logging
 import pkg_resources
 
+
 LOGGER = logging.getLogger('plone.app.theming')
 
 
diff --git a/src/plone/app/theming/zmi.py b/src/plone/app/theming/zmi.py
index cea4c6a..afcb834 100644
--- a/src/plone/app/theming/zmi.py
+++ b/src/plone/app/theming/zmi.py
@@ -1,8 +1,10 @@
 # -*- coding: utf-8 -*-
 from App.special_dtml import DTMLFile
 from zope.globalrequest import getRequest
+
 import logging
 
+
 LOGGER = logging.getLogger('plone.app.theming')
 
 


Repository: plone.app.theming


Branch: refs/heads/master
Date: 2017-03-02T13:30:28+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.theming/commit/3a80ef8f49328fd3cb6041920184e72633cff9bc

cleanup namespace __init__.py

Files changed:
M src/plone/__init__.py
M src/plone/app/__init__.py

diff --git a/src/plone/__init__.py b/src/plone/__init__.py
index f48ad10..a8cfe76 100644
--- a/src/plone/__init__.py
+++ b/src/plone/__init__.py
@@ -1,6 +1,3 @@
-# See http://peak.telecommunity.com/DevCenter/setuptools#namespace-packages
-try:
-    __import__('pkg_resources').declare_namespace(__name__)
-except ImportError:
-    from pkgutil import extend_path
-    __path__ = extend_path(__path__, __name__)
+# -*- coding: utf-8 -*-
+__import__('pkg_resources').declare_namespace(__name__)
+
diff --git a/src/plone/app/__init__.py b/src/plone/app/__init__.py
index f48ad10..a8cfe76 100644
--- a/src/plone/app/__init__.py
+++ b/src/plone/app/__init__.py
@@ -1,6 +1,3 @@
-# See http://peak.telecommunity.com/DevCenter/setuptools#namespace-packages
-try:
-    __import__('pkg_resources').declare_namespace(__name__)
-except ImportError:
-    from pkgutil import extend_path
-    __path__ = extend_path(__path__, __name__)
+# -*- coding: utf-8 -*-
+__import__('pkg_resources').declare_namespace(__name__)
+


Repository: plone.app.theming


Branch: refs/heads/master
Date: 2017-03-02T14:46:06+01:00
Author: agitator (agitator) <hpeter@agitator.com>
Commit: https://github.com/plone/plone.app.theming/commit/e2ad2a3203518affeab584c718e20109bfba180a

Merge pull request #123 from plone/reduce-log-level

Reduce log level

Files changed:
M CHANGES.rst
M setup.py
M src/plone/__init__.py
M src/plone/app/__init__.py
M src/plone/app/theming/browser/controlpanel.py
M src/plone/app/theming/browser/help.py
M src/plone/app/theming/browser/mapper.py
M src/plone/app/theming/browser/themefile.py
M src/plone/app/theming/interfaces.py
M src/plone/app/theming/plugins/hooks.py
M src/plone/app/theming/policy.py
M src/plone/app/theming/testing.py
M src/plone/app/theming/tests/test_controlpanel.py
M src/plone/app/theming/tests/test_exportimport.py
M src/plone/app/theming/tests/test_policy.py
M src/plone/app/theming/tests/test_utils.py
M src/plone/app/theming/traversal.py
M src/plone/app/theming/upgrade.py
M src/plone/app/theming/utils.py
M src/plone/app/theming/zmi.py

diff --git a/CHANGES.rst b/CHANGES.rst
index d5df04e..277efc8 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Reduce log level of ThemingPolicy cache to 'debug'.
+  [jensens]
 
 
 1.3.5 (2017-02-12)
diff --git a/setup.py b/setup.py
index ef73fed..a76583d 100644
--- a/setup.py
+++ b/setup.py
@@ -1,8 +1,10 @@
 # -*- coding: utf-8 -*-
 from setuptools import find_packages
 from setuptools import setup
+
 import os
 
+
 version = '1.3.6.dev0'
 
 longdescription = open("README.rst").read()
diff --git a/src/plone/__init__.py b/src/plone/__init__.py
index f48ad10..a8cfe76 100644
--- a/src/plone/__init__.py
+++ b/src/plone/__init__.py
@@ -1,6 +1,3 @@
-# See http://peak.telecommunity.com/DevCenter/setuptools#namespace-packages
-try:
-    __import__('pkg_resources').declare_namespace(__name__)
-except ImportError:
-    from pkgutil import extend_path
-    __path__ = extend_path(__path__, __name__)
+# -*- coding: utf-8 -*-
+__import__('pkg_resources').declare_namespace(__name__)
+
diff --git a/src/plone/app/__init__.py b/src/plone/app/__init__.py
index f48ad10..a8cfe76 100644
--- a/src/plone/app/__init__.py
+++ b/src/plone/app/__init__.py
@@ -1,6 +1,3 @@
-# See http://peak.telecommunity.com/DevCenter/setuptools#namespace-packages
-try:
-    __import__('pkg_resources').declare_namespace(__name__)
-except ImportError:
-    from pkgutil import extend_path
-    __path__ = extend_path(__path__, __name__)
+# -*- coding: utf-8 -*-
+__import__('pkg_resources').declare_namespace(__name__)
+
diff --git a/src/plone/app/theming/browser/controlpanel.py b/src/plone/app/theming/browser/controlpanel.py
index b7c809d..e5d5488 100644
--- a/src/plone/app/theming/browser/controlpanel.py
+++ b/src/plone/app/theming/browser/controlpanel.py
@@ -1,35 +1,37 @@
 # -*- coding: utf-8 -*-
 from AccessControl import Unauthorized
-from Products.CMFCore.utils import getToolByName
-from Products.Five.browser.decode import processInputs
-from Products.statusmessages.interfaces import IStatusMessage
-from Products.CMFPlone.interfaces import ILinkSchema
+from plone.app.theming.interfaces import _
 from plone.app.theming.interfaces import DEFAULT_THEME_FILENAME
 from plone.app.theming.interfaces import IThemeSettings
 from plone.app.theming.interfaces import RULE_FILENAME
 from plone.app.theming.interfaces import TEMPLATE_THEME
 from plone.app.theming.interfaces import THEME_RESOURCE_NAME
-from plone.app.theming.interfaces import _
-from plone.app.theming.plugins.utils import getPluginSettings
 from plone.app.theming.plugins.utils import getPlugins
-from plone.app.theming.utils import theming_policy
+from plone.app.theming.plugins.utils import getPluginSettings
 from plone.app.theming.utils import applyTheme
 from plone.app.theming.utils import createThemeFromTemplate
 from plone.app.theming.utils import extractThemeInfo
 from plone.app.theming.utils import getAvailableThemes
 from plone.app.theming.utils import getOrCreatePersistentResourceDirectory
 from plone.app.theming.utils import getZODBThemes
+from plone.app.theming.utils import theming_policy
 from plone.memoize.instance import memoize
 from plone.registry.interfaces import IRegistry
 from plone.resource.utils import queryResourceDirectory
+from Products.CMFCore.utils import getToolByName
+from Products.CMFPlone.interfaces import ILinkSchema
+from Products.Five.browser.decode import processInputs
+from Products.statusmessages.interfaces import IStatusMessage
 from zope.component import getMultiAdapter
 from zope.component import getUtility
 from zope.component.hooks import getSite
 from zope.publisher.browser import BrowserView
 from zope.schema.interfaces import IVocabularyFactory
+
 import logging
 import zipfile
 
+
 logger = logging.getLogger('plone.app.theming')
 
 
diff --git a/src/plone/app/theming/browser/help.py b/src/plone/app/theming/browser/help.py
index a7d327a..713557a 100644
--- a/src/plone/app/theming/browser/help.py
+++ b/src/plone/app/theming/browser/help.py
@@ -1,5 +1,6 @@
 # -*- coding: utf-8 -*-
 from zope.publisher.browser import BrowserView
+
 import docutils.core
 import pkg_resources
 
diff --git a/src/plone/app/theming/browser/mapper.py b/src/plone/app/theming/browser/mapper.py
index 03d3ffd..f0fd3bb 100644
--- a/src/plone/app/theming/browser/mapper.py
+++ b/src/plone/app/theming/browser/mapper.py
@@ -1,11 +1,5 @@
 # -*- coding: utf-8 -*-
 from AccessControl import Unauthorized
-from Products.CMFCore.utils import _getAuthenticatedUser
-from Products.CMFCore.utils import getToolByName
-from Products.CMFPlone.resources import add_bundle_on_request
-from Products.Five.browser.decode import processInputs
-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-from Products.statusmessages.interfaces import IStatusMessage
 from diazo.utils import quote_param
 from plone.app.theming.interfaces import RULE_FILENAME
 from plone.app.theming.interfaces import THEME_EXTENSIONS
@@ -20,12 +14,19 @@
 from plone.registry.interfaces import IRegistry
 from plone.resource.interfaces import IWritableResourceDirectory
 from plone.subrequest import subrequest
+from Products.CMFCore.utils import _getAuthenticatedUser
+from Products.CMFCore.utils import getToolByName
+from Products.CMFPlone.resources import add_bundle_on_request
+from Products.Five.browser.decode import processInputs
+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
+from Products.statusmessages.interfaces import IStatusMessage
 from repoze.xmliter.utils import getHTMLSerializer
 from zExceptions import NotFound
 from zope.component import getMultiAdapter
 from zope.component import getUtility
 from zope.component.hooks import getSite
 from zope.publisher.browser import BrowserView
+
 import lxml.etree
 import lxml.html
 import lxml.html.builder
diff --git a/src/plone/app/theming/browser/themefile.py b/src/plone/app/theming/browser/themefile.py
index 82af425..5ef3d5d 100644
--- a/src/plone/app/theming/browser/themefile.py
+++ b/src/plone/app/theming/browser/themefile.py
@@ -1,8 +1,10 @@
 # -*- coding: utf-8 -*-
-from Products.Five.browser import BrowserView
 from plone.resource.directory import PersistentResourceDirectory
+from Products.Five.browser import BrowserView
+
 import json
 
+
 class FileUploadView(BrowserView):
     """
     Handle file uploads
diff --git a/src/plone/app/theming/interfaces.py b/src/plone/app/theming/interfaces.py
index ae8e1ec..20642ee 100644
--- a/src/plone/app/theming/interfaces.py
+++ b/src/plone/app/theming/interfaces.py
@@ -5,6 +5,7 @@
 from zope.interface import Attribute
 from zope.interface import Interface
 
+
 _ = MessageFactory(u"plone")
 
 THEME_RESOURCE_NAME = 'theme'
diff --git a/src/plone/app/theming/plugins/hooks.py b/src/plone/app/theming/plugins/hooks.py
index 93b0c6b..2744e43 100644
--- a/src/plone/app/theming/plugins/hooks.py
+++ b/src/plone/app/theming/plugins/hooks.py
@@ -1,7 +1,7 @@
 # -*- coding: utf-8 -*-
 from plone.app.theming.interfaces import THEME_RESOURCE_NAME
-from plone.app.theming.plugins.utils import getPluginSettings
 from plone.app.theming.plugins.utils import getPlugins
+from plone.app.theming.plugins.utils import getPluginSettings
 from plone.app.theming.utils import theming_policy
 from plone.resource.utils import iterDirectoriesOfType
 from plone.resource.utils import queryResourceDirectory
diff --git a/src/plone/app/theming/policy.py b/src/plone/app/theming/policy.py
index 4744779..d9db052 100644
--- a/src/plone/app/theming/policy.py
+++ b/src/plone/app/theming/policy.py
@@ -1,20 +1,20 @@
 # -*- coding: utf-8 -*-
 from App.config import getConfiguration
 from logging import getLogger
-import threading
-import time
-
+from plone.app.theming import utils
+from plone.app.theming.interfaces import IThemeSettings
+from plone.app.theming.interfaces import IThemingPolicy
 from plone.registry.interfaces import IRegistry
 from zope.component import queryUtility
 from zope.component.hooks import getSite
 from zope.interface import implementer
 from zope.publisher.interfaces import IRequest
 
-from plone.app.theming.interfaces import IThemingPolicy
-from plone.app.theming.interfaces import IThemeSettings
-from plone.app.theming import utils
+import threading
+import time
+
 
-log = getLogger(__name__)
+logger = getLogger(__name__)
 _local_cache = threading.local()
 
 
@@ -107,8 +107,10 @@ def getCache(self, theme=None):
         key = self.getCacheKey(theme)
         cache = caches.get(key)
         if cache is None:
-            log.info("initializing local cache on thread %s for %s",
-                     threading.current_thread().ident, key)
+            logger.debug(
+                'initializing local cache on thread %s for %s',
+                threading.current_thread().ident, key
+            )
             cache = caches[key] = ThemeCache()
         return cache
 
@@ -122,15 +124,17 @@ def getCacheStorage(self):
         if not hasattr(_local_cache, 'themedata'):
             self._reset_local_cache()
         if self._get_shared_invalidation() > _local_cache.themedata['mtime']:
-            log.info("shared invalidation requires local cache reset on %s",
-                     threading.current_thread().ident)
+            logger.debug(
+                'shared invalidation requires local cache reset on %s',
+                threading.current_thread().ident
+            )
             self._reset_local_cache()
         return _local_cache.themedata
 
     def invalidateCache(self):
         """When our settings are changed, invalidate the cache on all zeo clients
         """
-        log.info("invalidating cache across all threads and processes")
+        logger.info('invalidating cache across all threads and processes')
         self._reset_local_cache()
         self._set_shared_invalidation()
 
@@ -140,8 +144,10 @@ def _reset_local_cache(self):
         Removes actual theme data, leaving only mtime
         """
         _local_cache.themedata = {'mtime': time.time()}
-        log.info("local cache invalidated on thread %s",
-                 threading.current_thread().ident)
+        logger.debug(
+            'local cache invalidated on thread %s',
+            threading.current_thread().ident
+        )
 
     def _set_shared_invalidation(self):
         """Signal to other threads and processes they should invalidate their
@@ -149,7 +155,7 @@ def _set_shared_invalidation(self):
         registry = queryUtility(IRegistry)
         setattr(registry, '_theme_cache_mtime', time.time())
         registry._p_changed = True
-        log.info("shared cache invalidation marker updated")
+        logger.debug('shared cache invalidation marker updated')
 
     def _get_shared_invalidation(self):
         registry = queryUtility(IRegistry)
diff --git a/src/plone/app/theming/testing.py b/src/plone/app/theming/testing.py
index 07767f0..6892326 100644
--- a/src/plone/app/theming/testing.py
+++ b/src/plone/app/theming/testing.py
@@ -1,7 +1,7 @@
 # -*- coding: utf-8 -*-
 from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FIXTURE
-from plone.app.testing import PloneSandboxLayer
 from plone.app.testing import applyProfile
+from plone.app.testing import PloneSandboxLayer
 from plone.app.testing.layers import FunctionalTesting
 from plone.app.testing.layers import IntegrationTesting
 from zope.configuration import xmlconfig
diff --git a/src/plone/app/theming/tests/test_controlpanel.py b/src/plone/app/theming/tests/test_controlpanel.py
index 29d9800..edf73ee 100644
--- a/src/plone/app/theming/tests/test_controlpanel.py
+++ b/src/plone/app/theming/tests/test_controlpanel.py
@@ -1,10 +1,11 @@
 # -*- coding: utf-8 -*-
+from plone.app.testing import setRoles
 from plone.app.testing import TEST_USER_ID
 from plone.app.testing import TEST_USER_NAME
 from plone.app.testing import TEST_USER_PASSWORD
-from plone.app.testing import setRoles
 from plone.app.theming.testing import THEMING_FUNCTIONAL_TESTING
 from plone.testing.z2 import Browser
+
 import unittest2 as unittest
 
 
diff --git a/src/plone/app/theming/tests/test_exportimport.py b/src/plone/app/theming/tests/test_exportimport.py
index 11e03dd..45aa5ff 100644
--- a/src/plone/app/theming/tests/test_exportimport.py
+++ b/src/plone/app/theming/tests/test_exportimport.py
@@ -1,5 +1,6 @@
 # -*- coding: utf-8 -*-
 from plone.app.theming.testing import THEMING_INTEGRATION_TESTING
+
 import unittest2 as unittest
 
 
diff --git a/src/plone/app/theming/tests/test_policy.py b/src/plone/app/theming/tests/test_policy.py
index c23f926..43eeaa6 100644
--- a/src/plone/app/theming/tests/test_policy.py
+++ b/src/plone/app/theming/tests/test_policy.py
@@ -1,14 +1,13 @@
 # -*- coding: utf-8 -*-
-import time
-import threading
-import transaction
-import unittest2 as unittest
-
+from plone.app.theming.testing import THEMING_FUNCTIONAL_TESTING
+from plone.app.theming.utils import theming_policy
 from plone.registry.interfaces import IRegistry
 from zope.component import queryUtility
 
-from plone.app.theming.testing import THEMING_FUNCTIONAL_TESTING
-from plone.app.theming.utils import theming_policy
+import threading
+import time
+import transaction
+import unittest2 as unittest
 
 
 class TestFunctional(unittest.TestCase):
diff --git a/src/plone/app/theming/tests/test_utils.py b/src/plone/app/theming/tests/test_utils.py
index 00c41cf..3ed839a 100644
--- a/src/plone/app/theming/tests/test_utils.py
+++ b/src/plone/app/theming/tests/test_utils.py
@@ -1,5 +1,6 @@
 # -*- coding: utf-8 -*-
 from plone.app.theming.testing import THEMING_INTEGRATION_TESTING
+
 import unittest2 as unittest
 
 
diff --git a/src/plone/app/theming/traversal.py b/src/plone/app/theming/traversal.py
index 4e1329d..ef625be 100644
--- a/src/plone/app/theming/traversal.py
+++ b/src/plone/app/theming/traversal.py
@@ -4,6 +4,7 @@
 from plone.resource.traversal import ResourceTraverser
 from plone.resource.utils import queryResourceDirectory
 from zExceptions import NotFound
+
 import urllib
 
 
diff --git a/src/plone/app/theming/upgrade.py b/src/plone/app/theming/upgrade.py
index 0d96248..8bbed90 100644
--- a/src/plone/app/theming/upgrade.py
+++ b/src/plone/app/theming/upgrade.py
@@ -1,6 +1,7 @@
 # -*- coding: utf-8 -*-
 from Products.CMFCore.utils import getToolByName
 
+
 PROFILE_ID = "profile-plone.app.theming:default"
 
 
diff --git a/src/plone/app/theming/utils.py b/src/plone/app/theming/utils.py
index 8bfb0a8..c367fe1 100644
--- a/src/plone/app/theming/utils.py
+++ b/src/plone/app/theming/utils.py
@@ -1,40 +1,42 @@
 # -*- coding: utf-8 -*-
 from ConfigParser import SafeConfigParser
-from Products.CMFCore.interfaces import IContentish
-from Products.CMFCore.interfaces import ISiteRoot
-from Products.CMFPlone.utils import safe_unicode
-from Products.PageTemplates.Expressions import getEngine
-from StringIO import StringIO
 from diazo.compiler import compile_theme
 from diazo.compiler import quote_param
 from lxml import etree
-from plone.app.theming.interfaces import IThemingPolicy
 from plone.app.theming.interfaces import INoRequest
+from plone.app.theming.interfaces import IThemingPolicy
 from plone.app.theming.interfaces import MANIFEST_FORMAT
 from plone.app.theming.interfaces import RULE_FILENAME
 from plone.app.theming.interfaces import THEME_RESOURCE_NAME
-from plone.app.theming.plugins.utils import getPluginSettings
 from plone.app.theming.plugins.utils import getPlugins
+from plone.app.theming.plugins.utils import getPluginSettings
 from plone.app.theming.theme import Theme
 from plone.i18n.normalizer.interfaces import IURLNormalizer
 from plone.resource.interfaces import IResourceDirectory
-from plone.resource.manifest import MANIFEST_FILENAME
 from plone.resource.manifest import extractManifestFromZipFile
+from plone.resource.manifest import getAllResources
 from plone.resource.manifest import getManifest
 from plone.resource.manifest import getZODBResources
-from plone.resource.manifest import getAllResources
+from plone.resource.manifest import MANIFEST_FILENAME
 from plone.resource.utils import cloneResourceDirectory
 from plone.resource.utils import iterDirectoriesOfType
 from plone.resource.utils import queryResourceDirectory
 from plone.subrequest import subrequest
+from Products.CMFCore.interfaces import IContentish
+from Products.CMFCore.interfaces import ISiteRoot
+from Products.CMFPlone.utils import safe_unicode
+from Products.PageTemplates.Expressions import getEngine
+from StringIO import StringIO
 from urlparse import urlsplit
 from zope.component import getUtility
 from zope.component import queryMultiAdapter
 from zope.globalrequest import getRequest
 from zope.interface import implementer
+
 import logging
 import pkg_resources
 
+
 LOGGER = logging.getLogger('plone.app.theming')
 
 
diff --git a/src/plone/app/theming/zmi.py b/src/plone/app/theming/zmi.py
index cea4c6a..afcb834 100644
--- a/src/plone/app/theming/zmi.py
+++ b/src/plone/app/theming/zmi.py
@@ -1,8 +1,10 @@
 # -*- coding: utf-8 -*-
 from App.special_dtml import DTMLFile
 from zope.globalrequest import getRequest
+
 import logging
 
+
 LOGGER = logging.getLogger('plone.app.theming')
 
 


