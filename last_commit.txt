Repository: plone.api


Branch: refs/heads/master
Date: 2016-11-05T23:30:34+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.api/commit/48ffe768387a4c4cd21deb95d1bc6c1fdcc47052

Typos

Files changed:
M src/plone/api/tests/test_content.py

diff --git a/src/plone/api/tests/test_content.py b/src/plone/api/tests/test_content.py
index 2ae3c6d..d6b3ac1 100644
--- a/src/plone/api/tests/test_content.py
+++ b/src/plone/api/tests/test_content.py
@@ -91,14 +91,14 @@ def test_create_constraints(self):
         with self.assertRaises(MissingParameterError):
             api.content.create()
 
-        # Check the contraints for the type container
+        # Check the constraints for the type container
         with self.assertRaises(MissingParameterError):
             api.content.create(
                 type='Document',
                 id='test-doc',
             )
 
-        # Check the contraints for the type parameter
+        # Check the constraints for the type parameter
         container = mock.Mock()
         with self.assertRaises(MissingParameterError):
             api.content.create(
@@ -106,13 +106,13 @@ def test_create_constraints(self):
                 id='test-doc',
             )
 
-        # Check the contraints for id and title parameters
+        # Check the constraints for id and title parameters
         with self.assertRaises(MissingParameterError):
             api.content.create(
                 container=container, type='Document'
             )
 
-        # Check the contraints for allowed types in the container
+        # Check the constraints for allowed types in the container
         container = self.events
         with self.assertRaises(InvalidParameterError):
             api.content.create(
@@ -121,7 +121,7 @@ def test_create_constraints(self):
                 id='test-foo',
             )
 
-        # Check the contraints for allowed types in the container if
+        # Check the constraints for allowed types in the container if
         # the container is the portal
         container = self.portal
         with self.assertRaises(InvalidParameterError) as cm:
@@ -138,7 +138,7 @@ def test_create_constraints(self):
             cm.exception.message
         )
 
-        # Check the contraints for allowed types in the container
+        # Check the constraints for allowed types in the container
         # Create a folder
         folder = api.content.create(
             container=container, type='Folder', id='test-folder')


