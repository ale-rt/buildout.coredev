Repository: plone.formwidget.contenttree


Branch: refs/heads/master
Date: 2016-05-02T09:37:34+02:00
Author: Elio Schmutz (elioschmutz) <e.schmutz@4teamwork.ch>
Commit: https://github.com/plone/plone.formwidget.contenttree/commit/5aed0ae8e28655578e4c8283c3a40549b99cea24

Slice search results in `PathSource` object to limit the search results correctly.

http://docs.plone.org/develop/plone/searching_and_indexing/query.html#sorting-and-limiting-the-number-of-results

Files changed:
M CHANGES.rst
M plone/formwidget/contenttree/source.py

diff --git a/CHANGES.rst b/CHANGES.rst
index f97f352..588e199 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,8 +10,9 @@ New:
 
 Fixes:
 
-- *add item here*
-
+- Slice search results in `PathSource` object to limit the search results correctly.
+  http://docs.plone.org/develop/plone/searching_and_indexing/query.html#sorting-and-limiting-the-number-of-results
+  [elioschmutz]
 
 1.0.13 (2016-02-09)
 -------------------
@@ -26,7 +27,7 @@ New:
 -------------------
 
 - Remove unnecessary test setup.
-  [timo] 
+  [timo]
 
 - Fix HTML entities in browse button title
   [gaudenz]
diff --git a/plone/formwidget/contenttree/source.py b/plone/formwidget/contenttree/source.py
index 6ae80b0..8c5e998 100644
--- a/plone/formwidget/contenttree/source.py
+++ b/plone/formwidget/contenttree/source.py
@@ -66,7 +66,7 @@ class PathSource(object):
 
     def __init__(self, context, selectable_filter, navigation_tree_query=None, default=None, defaultFactory=None):
         self.context = context
-        
+
         nav_root = getNavigationRootObject(context, None)
         query_builder = getMultiAdapter((nav_root, self),
                                         INavigationQueryBuilder)
@@ -153,12 +153,10 @@ def search(self, query, limit=20):
             catalog_query['sort_limit'] = limit
 
         try:
-            results = (self.getTermByBrain(brain, real_value=False)
-                       for brain in self.catalog(**catalog_query))
+            for brain in self.catalog(**catalog_query)[:limit]:
+                yield self.getTermByBrain(brain, real_value=False)
         except ParseError:
-            return []
-
-        return results
+            pass
 
     def isBrainSelectable(self, brain):
         if brain is None:


Repository: plone.formwidget.contenttree


Branch: refs/heads/master
Date: 2016-05-12T09:24:24+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.formwidget.contenttree/commit/65ad175810abf5ef41683fdf022569c19586696f

Merge pull request #25 from plone/es-slice-search-results

Slice search results in `PathSource` object to limit the search results correctly.

Files changed:
M CHANGES.rst
M plone/formwidget/contenttree/source.py

diff --git a/CHANGES.rst b/CHANGES.rst
index f97f352..588e199 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,8 +10,9 @@ New:
 
 Fixes:
 
-- *add item here*
-
+- Slice search results in `PathSource` object to limit the search results correctly.
+  http://docs.plone.org/develop/plone/searching_and_indexing/query.html#sorting-and-limiting-the-number-of-results
+  [elioschmutz]
 
 1.0.13 (2016-02-09)
 -------------------
@@ -26,7 +27,7 @@ New:
 -------------------
 
 - Remove unnecessary test setup.
-  [timo] 
+  [timo]
 
 - Fix HTML entities in browse button title
   [gaudenz]
diff --git a/plone/formwidget/contenttree/source.py b/plone/formwidget/contenttree/source.py
index 6ae80b0..8c5e998 100644
--- a/plone/formwidget/contenttree/source.py
+++ b/plone/formwidget/contenttree/source.py
@@ -66,7 +66,7 @@ class PathSource(object):
 
     def __init__(self, context, selectable_filter, navigation_tree_query=None, default=None, defaultFactory=None):
         self.context = context
-        
+
         nav_root = getNavigationRootObject(context, None)
         query_builder = getMultiAdapter((nav_root, self),
                                         INavigationQueryBuilder)
@@ -153,12 +153,10 @@ def search(self, query, limit=20):
             catalog_query['sort_limit'] = limit
 
         try:
-            results = (self.getTermByBrain(brain, real_value=False)
-                       for brain in self.catalog(**catalog_query))
+            for brain in self.catalog(**catalog_query)[:limit]:
+                yield self.getTermByBrain(brain, real_value=False)
         except ParseError:
-            return []
-
-        return results
+            pass
 
     def isBrainSelectable(self, brain):
         if brain is None:


