Repository: plone.app.discussion


Branch: refs/heads/2.2.x
Date: 2016-09-19T17:14:26+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.discussion/commit/781d67a52007df4e2687a5388ecceb8aa5587dda

Apply security hotfix 20160830 for redirects.

Files changed:
M CHANGES.rst
M plone/app/discussion/browser/moderation.py
M plone/app/discussion/tests/test_moderation_view.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 669a7f2..abe4ec9 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,7 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Apply security hotfix 20160830 for redirects.  [maurits]
 
 
 2.2.18 (2016-06-06)
diff --git a/plone/app/discussion/browser/moderation.py b/plone/app/discussion/browser/moderation.py
index da710b1..d234ff5 100644
--- a/plone/app/discussion/browser/moderation.py
+++ b/plone/app/discussion/browser/moderation.py
@@ -101,7 +101,9 @@ def __call__(self):
             type="info")
         came_from = self.context.REQUEST.HTTP_REFERER
         # if the referrer already has a came_from in it, don't redirect back
-        if len(came_from) == 0 or 'came_from=' in came_from:
+        if (len(came_from) == 0 or 'came_from=' in came_from or
+                not getToolByName(
+                content_object, 'portal_url').isURLInPortal(came_from)):
             came_from = content_object.absolute_url()
         return self.context.REQUEST.RESPONSE.redirect(came_from)
 
@@ -140,7 +142,9 @@ def __call__(self):
             type="info")
         came_from = self.context.REQUEST.HTTP_REFERER
         # if the referrer already has a came_from in it, don't redirect back
-        if len(came_from) == 0 or 'came_from=' in came_from:
+        if (len(came_from) == 0 or 'came_from=' in came_from or
+                not getToolByName(
+                content_object, 'portal_url').isURLInPortal(came_from)):
             came_from = content_object.absolute_url()
         return self.context.REQUEST.RESPONSE.redirect(came_from)
 
diff --git a/plone/app/discussion/tests/test_moderation_view.py b/plone/app/discussion/tests/test_moderation_view.py
index ac0a7bd..7ac4087 100644
--- a/plone/app/discussion/tests/test_moderation_view.py
+++ b/plone/app/discussion/tests/test_moderation_view.py
@@ -1,20 +1,20 @@
 # -*- coding: utf-8 -*-
-import unittest
-
 from DateTime import DateTime
-
-from zope.component import createObject
-
-from Products.CMFCore.utils import getToolByName
-
-from plone.app.testing import TEST_USER_ID, setRoles
-
-from plone.app.discussion.testing import\
-    PLONE_APP_DISCUSSION_INTEGRATION_TESTING
-
-from plone.app.discussion.browser.moderation import View
 from plone.app.discussion.browser.moderation import BulkActionsView
+from plone.app.discussion.browser.moderation import DeleteComment
+from plone.app.discussion.browser.moderation import PublishComment
+from plone.app.discussion.browser.moderation import View
 from plone.app.discussion.interfaces import IConversation
+from plone.app.discussion.interfaces import IDiscussionSettings
+from plone.app.discussion.testing import PLONE_APP_DISCUSSION_INTEGRATION_TESTING  # noqa
+from plone.app.testing import setRoles
+from plone.app.testing import TEST_USER_ID
+from plone.registry.interfaces import IRegistry
+from Products.CMFCore.utils import getToolByName
+from zope.component import createObject
+from zope.component import queryUtility
+
+import unittest
 
 
 class ModerationViewTest(unittest.TestCase):
@@ -190,5 +190,50 @@ def test_delete(self):
         self.assertEqual(comment, self.comment2)
 
 
+class RedirectionTest(unittest.TestCase):
+
+    layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING
+
+    def setUp(self):
+        # Update settings.
+        self.portal = self.layer['portal']
+        self.request = self.layer['request']
+        setRoles(self.portal, TEST_USER_ID, ['Manager'])
+        # applyProfile(self.portal, 'plone.app.discussion:default')
+        registry = queryUtility(IRegistry)
+        settings = registry.forInterface(IDiscussionSettings)
+        settings.globally_enabled = True
+        self.portal.portal_workflow.setChainForPortalTypes(
+            ('Discussion Item',),
+            ('comment_review_workflow',))
+        # Create page plus comment.
+        self.portal.invokeFactory(
+            id='page',
+            title='Page 1',
+            type_name='Document'
+        )
+        self.page = self.portal.page
+        self.conversation = IConversation(self.page)
+        comment = createObject('plone.Comment')
+        comment.text = 'Comment text'
+        self.comment_id = self.conversation.addComment(comment)
+        self.comment = list(self.conversation.getComments())[0]
+
+    def test_regression(self):
+        page_url = self.page.absolute_url()
+        self.request['HTTP_REFERER'] = page_url
+        for Klass in (DeleteComment, PublishComment):
+            view = Klass(self.comment, self.request)
+            view.__parent__ = self.comment
+            self.assertEqual(page_url, view())
+
+    def test_valid_next_url(self):
+        self.request['HTTP_REFERER'] = 'http://attacker.com'
+        for Klass in (DeleteComment, PublishComment):
+            view = Klass(self.comment, self.request)
+            view.__parent__ = self.comment
+            self.assertNotEqual('http://attacker.com', view())
+
+
 def test_suite():
     return unittest.defaultTestLoader.loadTestsFromName(__name__)


Repository: plone.app.discussion


Branch: refs/heads/2.2.x
Date: 2016-09-20T10:51:57+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/b5bb31b5c91ecbae5ea4eeef563f9dcc5d974948

Merge pull request #113 from plone/apply-hotfix-20160830-22

Apply security hotfix 20160830 for redirects. [2.2]

Files changed:
M CHANGES.rst
M plone/app/discussion/browser/moderation.py
M plone/app/discussion/tests/test_moderation_view.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 669a7f2..abe4ec9 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,7 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Apply security hotfix 20160830 for redirects.  [maurits]
 
 
 2.2.18 (2016-06-06)
diff --git a/plone/app/discussion/browser/moderation.py b/plone/app/discussion/browser/moderation.py
index da710b1..d234ff5 100644
--- a/plone/app/discussion/browser/moderation.py
+++ b/plone/app/discussion/browser/moderation.py
@@ -101,7 +101,9 @@ def __call__(self):
             type="info")
         came_from = self.context.REQUEST.HTTP_REFERER
         # if the referrer already has a came_from in it, don't redirect back
-        if len(came_from) == 0 or 'came_from=' in came_from:
+        if (len(came_from) == 0 or 'came_from=' in came_from or
+                not getToolByName(
+                content_object, 'portal_url').isURLInPortal(came_from)):
             came_from = content_object.absolute_url()
         return self.context.REQUEST.RESPONSE.redirect(came_from)
 
@@ -140,7 +142,9 @@ def __call__(self):
             type="info")
         came_from = self.context.REQUEST.HTTP_REFERER
         # if the referrer already has a came_from in it, don't redirect back
-        if len(came_from) == 0 or 'came_from=' in came_from:
+        if (len(came_from) == 0 or 'came_from=' in came_from or
+                not getToolByName(
+                content_object, 'portal_url').isURLInPortal(came_from)):
             came_from = content_object.absolute_url()
         return self.context.REQUEST.RESPONSE.redirect(came_from)
 
diff --git a/plone/app/discussion/tests/test_moderation_view.py b/plone/app/discussion/tests/test_moderation_view.py
index ac0a7bd..7ac4087 100644
--- a/plone/app/discussion/tests/test_moderation_view.py
+++ b/plone/app/discussion/tests/test_moderation_view.py
@@ -1,20 +1,20 @@
 # -*- coding: utf-8 -*-
-import unittest
-
 from DateTime import DateTime
-
-from zope.component import createObject
-
-from Products.CMFCore.utils import getToolByName
-
-from plone.app.testing import TEST_USER_ID, setRoles
-
-from plone.app.discussion.testing import\
-    PLONE_APP_DISCUSSION_INTEGRATION_TESTING
-
-from plone.app.discussion.browser.moderation import View
 from plone.app.discussion.browser.moderation import BulkActionsView
+from plone.app.discussion.browser.moderation import DeleteComment
+from plone.app.discussion.browser.moderation import PublishComment
+from plone.app.discussion.browser.moderation import View
 from plone.app.discussion.interfaces import IConversation
+from plone.app.discussion.interfaces import IDiscussionSettings
+from plone.app.discussion.testing import PLONE_APP_DISCUSSION_INTEGRATION_TESTING  # noqa
+from plone.app.testing import setRoles
+from plone.app.testing import TEST_USER_ID
+from plone.registry.interfaces import IRegistry
+from Products.CMFCore.utils import getToolByName
+from zope.component import createObject
+from zope.component import queryUtility
+
+import unittest
 
 
 class ModerationViewTest(unittest.TestCase):
@@ -190,5 +190,50 @@ def test_delete(self):
         self.assertEqual(comment, self.comment2)
 
 
+class RedirectionTest(unittest.TestCase):
+
+    layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING
+
+    def setUp(self):
+        # Update settings.
+        self.portal = self.layer['portal']
+        self.request = self.layer['request']
+        setRoles(self.portal, TEST_USER_ID, ['Manager'])
+        # applyProfile(self.portal, 'plone.app.discussion:default')
+        registry = queryUtility(IRegistry)
+        settings = registry.forInterface(IDiscussionSettings)
+        settings.globally_enabled = True
+        self.portal.portal_workflow.setChainForPortalTypes(
+            ('Discussion Item',),
+            ('comment_review_workflow',))
+        # Create page plus comment.
+        self.portal.invokeFactory(
+            id='page',
+            title='Page 1',
+            type_name='Document'
+        )
+        self.page = self.portal.page
+        self.conversation = IConversation(self.page)
+        comment = createObject('plone.Comment')
+        comment.text = 'Comment text'
+        self.comment_id = self.conversation.addComment(comment)
+        self.comment = list(self.conversation.getComments())[0]
+
+    def test_regression(self):
+        page_url = self.page.absolute_url()
+        self.request['HTTP_REFERER'] = page_url
+        for Klass in (DeleteComment, PublishComment):
+            view = Klass(self.comment, self.request)
+            view.__parent__ = self.comment
+            self.assertEqual(page_url, view())
+
+    def test_valid_next_url(self):
+        self.request['HTTP_REFERER'] = 'http://attacker.com'
+        for Klass in (DeleteComment, PublishComment):
+            view = Klass(self.comment, self.request)
+            view.__parent__ = self.comment
+            self.assertNotEqual('http://attacker.com', view())
+
+
 def test_suite():
     return unittest.defaultTestLoader.loadTestsFromName(__name__)


