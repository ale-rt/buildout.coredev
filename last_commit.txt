Repository: plone.formwidget.contenttree


Branch: refs/heads/master
Date: 2016-07-05T23:15:59+02:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.formwidget.contenttree/commit/67c51fad9bb5172a573b913895fd8dd10640a9ca

Use zope.interface decorator

This not only makes code more pleasent to read,
but also makes the code python 3 compatible
(while maintaining python 2 compatibility).

Files changed:
M CHANGES.rst
M plone/formwidget/contenttree/demo.py
M plone/formwidget/contenttree/navtree.py
M plone/formwidget/contenttree/source.py
M plone/formwidget/contenttree/widget.py

diff --git a/CHANGES.rst b/CHANGES.rst
index f6e90b2..12de39c 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 1.0.14 (2016-05-15)
diff --git a/plone/formwidget/contenttree/demo.py b/plone/formwidget/contenttree/demo.py
index 57b8a81..efe1b19 100644
--- a/plone/formwidget/contenttree/demo.py
+++ b/plone/formwidget/contenttree/demo.py
@@ -1,5 +1,5 @@
 from zope.component import adapts
-from zope.interface import Interface, implements
+from zope.interface import Interface, implementer
 from zope import schema
 
 from plone.z3cform import layout
@@ -25,8 +25,8 @@ class ITestForm(Interface):
             source=PathSourceBinder(portal_type='Document')))
 
 
+@implementer(ITestForm)
 class TestAdapter(object):
-    implements(ITestForm)
     adapts(Interface)
 
     def __init__(self, context):
diff --git a/plone/formwidget/contenttree/navtree.py b/plone/formwidget/contenttree/navtree.py
index ba8e2fb..5cd9d4f 100644
--- a/plone/formwidget/contenttree/navtree.py
+++ b/plone/formwidget/contenttree/navtree.py
@@ -1,4 +1,4 @@
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 from zope.component import adapts
 
 from Products.CMFCore.utils import getToolByName
@@ -20,10 +20,10 @@
 from plone.formwidget.contenttree.interfaces import IContentTreeWidget
 
 
+@implementer(INavigationQueryBuilder)
 class QueryBuilder(object):
     """Build a navtree query for a content source
     """
-    implements(INavigationQueryBuilder)
     adapts(Interface, IContentSource)
 
     def __init__(self, context, source):
@@ -66,10 +66,10 @@ def __call__(self):
         return query
 
 
+@implementer(INavtreeStrategy)
 class NavtreeStrategy(SitemapNavtreeStrategy):
     """The navtree strategy used for the content tree widget
     """
-    implements(INavtreeStrategy)
     adapts(Interface, IContentTreeWidget)
 
     def __init__(self, context, widget):
diff --git a/plone/formwidget/contenttree/source.py b/plone/formwidget/contenttree/source.py
index 8c5e998..8d6a408 100644
--- a/plone/formwidget/contenttree/source.py
+++ b/plone/formwidget/contenttree/source.py
@@ -1,7 +1,7 @@
 import logging
 
 import Missing
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import getMultiAdapter
 
 from zope.schema.interfaces import IContextSourceBinder
@@ -23,6 +23,7 @@
 logger = logging.getLogger(__name__)
 
 
+@implementer(IContentFilter)
 class CustomFilter(object):
     """A filter that can be used to test simple values in brain metadata and
     indexes.
@@ -31,7 +32,6 @@ class CustomFilter(object):
 
     - Will probably only work on FieldIndex, KeywordIndex and PathIndex indexes
     """
-    implements(IContentFilter)
 
     def __init__(self, **kw):
         self.criteria = {}
@@ -61,8 +61,8 @@ def __call__(self, brain, index_data):
         return True
 
 
+@implementer(IContentSource)
 class PathSource(object):
-    implements(IContentSource)
 
     def __init__(self, context, selectable_filter, navigation_tree_query=None, default=None, defaultFactory=None):
         self.context = context
@@ -253,8 +253,8 @@ def getTermByBrain(self, brain, real_value=True):
                           brain.id)
 
 
+@implementer(IContextSourceBinder)
 class PathSourceBinder(object):
-    implements(IContextSourceBinder)
 
     path_source = PathSource
 
diff --git a/plone/formwidget/contenttree/widget.py b/plone/formwidget/contenttree/widget.py
index 06e9d20..33911b4 100644
--- a/plone/formwidget/contenttree/widget.py
+++ b/plone/formwidget/contenttree/widget.py
@@ -5,7 +5,7 @@
 from Acquisition.interfaces import IAcquirer
 
 from zope.browserpage.viewpagetemplatefile import ViewPageTemplateFile
-from zope.interface import implementsOnly
+from zope.interface import implementer_only
 from zope.interface import implementer
 from zope.component import getMultiAdapter
 from zope.pagetemplate.interfaces import IPageTemplate
@@ -158,8 +158,8 @@ def __call__(self):
 """
 
 
+@implementer_only(IContentTreeWidget)
 class ContentTreeBase(Explicit):
-    implementsOnly(IContentTreeWidget)
 
     # XXX: Due to the way the rendering of the QuerySourceRadioWidget works,
     # if we call this 'template' or use a <z3c:widgetTemplate /> directive,


Repository: plone.formwidget.contenttree


Branch: refs/heads/master
Date: 2016-07-07T00:57:10+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.formwidget.contenttree/commit/bd8bb07fd425b0958089fb592800a9ffc105e319

Merge pull request #26 from plone/gforcada-use-zope-decorators

Use zope.interface decorator

Files changed:
M CHANGES.rst
M plone/formwidget/contenttree/demo.py
M plone/formwidget/contenttree/navtree.py
M plone/formwidget/contenttree/source.py
M plone/formwidget/contenttree/widget.py

diff --git a/CHANGES.rst b/CHANGES.rst
index f6e90b2..12de39c 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 1.0.14 (2016-05-15)
diff --git a/plone/formwidget/contenttree/demo.py b/plone/formwidget/contenttree/demo.py
index 57b8a81..efe1b19 100644
--- a/plone/formwidget/contenttree/demo.py
+++ b/plone/formwidget/contenttree/demo.py
@@ -1,5 +1,5 @@
 from zope.component import adapts
-from zope.interface import Interface, implements
+from zope.interface import Interface, implementer
 from zope import schema
 
 from plone.z3cform import layout
@@ -25,8 +25,8 @@ class ITestForm(Interface):
             source=PathSourceBinder(portal_type='Document')))
 
 
+@implementer(ITestForm)
 class TestAdapter(object):
-    implements(ITestForm)
     adapts(Interface)
 
     def __init__(self, context):
diff --git a/plone/formwidget/contenttree/navtree.py b/plone/formwidget/contenttree/navtree.py
index ba8e2fb..5cd9d4f 100644
--- a/plone/formwidget/contenttree/navtree.py
+++ b/plone/formwidget/contenttree/navtree.py
@@ -1,4 +1,4 @@
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 from zope.component import adapts
 
 from Products.CMFCore.utils import getToolByName
@@ -20,10 +20,10 @@
 from plone.formwidget.contenttree.interfaces import IContentTreeWidget
 
 
+@implementer(INavigationQueryBuilder)
 class QueryBuilder(object):
     """Build a navtree query for a content source
     """
-    implements(INavigationQueryBuilder)
     adapts(Interface, IContentSource)
 
     def __init__(self, context, source):
@@ -66,10 +66,10 @@ def __call__(self):
         return query
 
 
+@implementer(INavtreeStrategy)
 class NavtreeStrategy(SitemapNavtreeStrategy):
     """The navtree strategy used for the content tree widget
     """
-    implements(INavtreeStrategy)
     adapts(Interface, IContentTreeWidget)
 
     def __init__(self, context, widget):
diff --git a/plone/formwidget/contenttree/source.py b/plone/formwidget/contenttree/source.py
index 8c5e998..8d6a408 100644
--- a/plone/formwidget/contenttree/source.py
+++ b/plone/formwidget/contenttree/source.py
@@ -1,7 +1,7 @@
 import logging
 
 import Missing
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import getMultiAdapter
 
 from zope.schema.interfaces import IContextSourceBinder
@@ -23,6 +23,7 @@
 logger = logging.getLogger(__name__)
 
 
+@implementer(IContentFilter)
 class CustomFilter(object):
     """A filter that can be used to test simple values in brain metadata and
     indexes.
@@ -31,7 +32,6 @@ class CustomFilter(object):
 
     - Will probably only work on FieldIndex, KeywordIndex and PathIndex indexes
     """
-    implements(IContentFilter)
 
     def __init__(self, **kw):
         self.criteria = {}
@@ -61,8 +61,8 @@ def __call__(self, brain, index_data):
         return True
 
 
+@implementer(IContentSource)
 class PathSource(object):
-    implements(IContentSource)
 
     def __init__(self, context, selectable_filter, navigation_tree_query=None, default=None, defaultFactory=None):
         self.context = context
@@ -253,8 +253,8 @@ def getTermByBrain(self, brain, real_value=True):
                           brain.id)
 
 
+@implementer(IContextSourceBinder)
 class PathSourceBinder(object):
-    implements(IContextSourceBinder)
 
     path_source = PathSource
 
diff --git a/plone/formwidget/contenttree/widget.py b/plone/formwidget/contenttree/widget.py
index 06e9d20..33911b4 100644
--- a/plone/formwidget/contenttree/widget.py
+++ b/plone/formwidget/contenttree/widget.py
@@ -5,7 +5,7 @@
 from Acquisition.interfaces import IAcquirer
 
 from zope.browserpage.viewpagetemplatefile import ViewPageTemplateFile
-from zope.interface import implementsOnly
+from zope.interface import implementer_only
 from zope.interface import implementer
 from zope.component import getMultiAdapter
 from zope.pagetemplate.interfaces import IPageTemplate
@@ -158,8 +158,8 @@ def __call__(self):
 """
 
 
+@implementer_only(IContentTreeWidget)
 class ContentTreeBase(Explicit):
-    implementsOnly(IContentTreeWidget)
 
     # XXX: Due to the way the rendering of the QuerySourceRadioWidget works,
     # if we call this 'template' or use a <z3c:widgetTemplate /> directive,


