Repository: plone.folder


Branch: refs/heads/master
Date: 2016-03-07T00:34:22+01:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.folder/commit/ea46d1f775f75f75dd7409c9942ceabe9d6c77ee

Not needed

Files changed:
M src/plone/folder/tests/__init__.py

diff --git a/src/plone/folder/tests/__init__.py b/src/plone/folder/tests/__init__.py
index 40a96af..e69de29 100644
--- a/src/plone/folder/tests/__init__.py
+++ b/src/plone/folder/tests/__init__.py
@@ -1 +0,0 @@
-# -*- coding: utf-8 -*-


Repository: plone.folder


Branch: refs/heads/master
Date: 2016-03-07T00:34:22+01:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.folder/commit/6f51ca1fa240e02112e676c7f2e30061baaeac15

No need to load tests manually

Test autodiscovery is working perfectly.

Files changed:
M src/plone/folder/tests/test_dict_interface.py
M src/plone/folder/tests/test_integration.py
M src/plone/folder/tests/test_ordering_adapters.py
M src/plone/folder/tests/test_ordersupport.py
M src/plone/folder/tests/test_partialordering.py
M src/plone/folder/tests/test_unorderedordering.py
M src/plone/folder/tests/test_webdav.py

diff --git a/src/plone/folder/tests/test_dict_interface.py b/src/plone/folder/tests/test_dict_interface.py
index b487ab8..fdc013b 100644
--- a/src/plone/folder/tests/test_dict_interface.py
+++ b/src/plone/folder/tests/test_dict_interface.py
@@ -85,7 +85,3 @@ def testObjectIdsWithSpec(self):
         folder.moveObjectsDown(['o2'])
         self.assertEquals(['o3', 'o1'], folder.objectIds(spec='mt1'))
         self.assertEquals(['o4', 'o2'], folder.objectIds(spec='mt2'))
-
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/folder/tests/test_integration.py b/src/plone/folder/tests/test_integration.py
index af2a5af..9571599 100644
--- a/src/plone/folder/tests/test_integration.py
+++ b/src/plone/folder/tests/test_integration.py
@@ -30,8 +30,3 @@ def testExportDoesntIncludeParent(self):
         self.app._p_jar.exportFile(foo.bar._p_oid, exp)
         self.failUnless('bar' in exp.getvalue())
         self.failIf('foo' in exp.getvalue())
-
-
-def test_suite():
-    from unittest import defaultTestLoader
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/folder/tests/test_ordering_adapters.py b/src/plone/folder/tests/test_ordering_adapters.py
index d421598..001ad63 100644
--- a/src/plone/folder/tests/test_ordering_adapters.py
+++ b/src/plone/folder/tests/test_ordering_adapters.py
@@ -37,7 +37,3 @@ def testSetOrdering(self):
     def testSetUnknownOrdering(self):
         folder = OrderedBTreeFolderBase()
         self.assertRaises(ComponentLookupError, folder.setOrdering, 'foo')
-
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/folder/tests/test_ordersupport.py b/src/plone/folder/tests/test_ordersupport.py
index 9a57daf..3e70078 100644
--- a/src/plone/folder/tests/test_ordersupport.py
+++ b/src/plone/folder/tests/test_ordersupport.py
@@ -326,7 +326,3 @@ def testIgnoreNonObjects(self):
         self.assertEqual(self.folder.getObjectPosition('bar'), 0)
         self.assertEqual(self.folder.getObjectPosition('foo'), 1)
         self.assertEqual(self.folder.getObjectPosition('baz'), 2)
-
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/folder/tests/test_partialordering.py b/src/plone/folder/tests/test_partialordering.py
index 7e334bf..b9ec633 100644
--- a/src/plone/folder/tests/test_partialordering.py
+++ b/src/plone/folder/tests/test_partialordering.py
@@ -251,7 +251,3 @@ def testOrderObjectsByMethodChangesOrderInfo(self):
         # Reverse the current ordering.
         foo.orderObjects(reverse=True)
         self.assertEqual(foo.objectIds(), ['bar1', 'bar2', 'bar3'])
-
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/folder/tests/test_unorderedordering.py b/src/plone/folder/tests/test_unorderedordering.py
index 555ea71..74edf8d 100644
--- a/src/plone/folder/tests/test_unorderedordering.py
+++ b/src/plone/folder/tests/test_unorderedordering.py
@@ -51,7 +51,3 @@ def testNotifyRemoved(self):
     def testGetObjectPosition(self):
         container = self.create()
         self.assertEqual(container.getObjectPosition('o2'), None)
-
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/folder/tests/test_webdav.py b/src/plone/folder/tests/test_webdav.py
index c3135fc..930a33a 100644
--- a/src/plone/folder/tests/test_webdav.py
+++ b/src/plone/folder/tests/test_webdav.py
@@ -48,7 +48,3 @@ def test_getitem_dav_request(self):
 
         self.assertEquals(folder['foo'], foo)
         self.failUnless(isinstance(folder['bar'], NullResource))
-
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)


Repository: plone.folder


Branch: refs/heads/master
Date: 2016-03-07T00:34:22+01:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.folder/commit/2099ae65694f01004b6687951e94df8281b9ace6

Create standard layers

Use best practices (copied from bobtemplates.plone) to create testing layers.

Put them on testing.py instead of tests/layer.py.

Files changed:
A src/plone/folder/testing.py
D src/plone/folder/tests/layer.py

diff --git a/src/plone/folder/testing.py b/src/plone/folder/testing.py
new file mode 100644
index 0000000..b14476f
--- /dev/null
+++ b/src/plone/folder/testing.py
@@ -0,0 +1,28 @@
+# -*- coding: utf-8 -*-
+from plone.app.testing import FunctionalTesting
+from plone.app.testing import IntegrationTesting
+from plone.app.testing import PLONE_FIXTURE
+from plone.app.testing import PloneSandboxLayer
+
+import plone.folder
+
+
+class PloneFolderLayer(PloneSandboxLayer):
+
+    defaultBases = (PLONE_FIXTURE,)
+
+    def setUpZope(self, app, configurationContext):
+        self.loadZCML(package=plone.folder)
+
+
+PLONEFOLDER_FIXTURE = PloneFolderLayer()
+
+PLONEFOLDER_INTEGRATION_TESTING = IntegrationTesting(
+    bases=(PLONEFOLDER_FIXTURE,),
+    name='PloneFolderLayer:IntegrationTesting'
+)
+
+PLONEFOLDER_FUNCTIONAL_TESTING = FunctionalTesting(
+    bases=(PLONEFOLDER_FIXTURE,),
+    name='PloneFolderLayer:FunctionalTesting'
+)
diff --git a/src/plone/folder/tests/layer.py b/src/plone/folder/tests/layer.py
deleted file mode 100644
index 564d348..0000000
--- a/src/plone/folder/tests/layer.py
+++ /dev/null
@@ -1,20 +0,0 @@
-from Products.Five import fiveconfigure
-from Products.Five.zcml import load_config
-
-
-class PloneFolderLayer(object):
-
-    @classmethod
-    def setUp(cls):
-        # load zcml & install the package
-        fiveconfigure.debug_mode = True
-        from zope import component, annotation
-        load_config('meta.zcml', component)
-        load_config('configure.zcml', annotation)
-        from plone import folder
-        load_config('configure.zcml', folder)
-        fiveconfigure.debug_mode = False
-
-    @classmethod
-    def tearDown(cls):
-        pass


Repository: plone.folder


Branch: refs/heads/master
Date: 2016-03-07T00:34:22+01:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.folder/commit/c6c43c1be1fcaf533fe02b0672ae897bdc35e56a

Update tests to use the new layers

Files changed:
M src/plone/folder/tests/test_dict_interface.py
M src/plone/folder/tests/test_integration.py
M src/plone/folder/tests/test_ordering_adapters.py
M src/plone/folder/tests/test_ordersupport.py
M src/plone/folder/tests/test_partialordering.py
M src/plone/folder/tests/test_unorderedordering.py
M src/plone/folder/tests/test_webdav.py

diff --git a/src/plone/folder/tests/test_dict_interface.py b/src/plone/folder/tests/test_dict_interface.py
index fdc013b..0bd1aaa 100644
--- a/src/plone/folder/tests/test_dict_interface.py
+++ b/src/plone/folder/tests/test_dict_interface.py
@@ -1,16 +1,16 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_base
 from plone.folder.ordered import OrderedBTreeFolderBase
-from plone.folder.tests.layer import PloneFolderLayer
+from plone.folder.testing import PLONEFOLDER_INTEGRATION_TESTING
 from plone.folder.tests.utils import DummyObject
-from unittest import defaultTestLoader
-from unittest import TestCase
 
+import unittest
 
-class DictInterfaceTests(TestCase):
+
+class DictInterfaceTests(unittest.TestCase):
     """ tests for dict style interface """
 
-    layer = PloneFolderLayer
+    layer = PLONEFOLDER_INTEGRATION_TESTING
 
     def test_getitem(self):
         folder = OrderedBTreeFolderBase("f1")
@@ -64,10 +64,10 @@ def test_to_verify_ticket_9120(self):
         self.assertEquals([key in folder for key in folder], [True, True])
 
 
-class RelatedToDictInterfaceTests(TestCase):
+class RelatedToDictInterfaceTests(unittest.TestCase):
     """ various tests which are related to the dict-like interface """
 
-    layer = PloneFolderLayer
+    layer = PLONEFOLDER_INTEGRATION_TESTING
 
     def create(self):
         folder = OrderedBTreeFolderBase("f1")
diff --git a/src/plone/folder/tests/test_integration.py b/src/plone/folder/tests/test_integration.py
index 9571599..d6bb697 100644
--- a/src/plone/folder/tests/test_integration.py
+++ b/src/plone/folder/tests/test_integration.py
@@ -2,12 +2,13 @@
 from Acquisition import Implicit
 from plone.folder.interfaces import IOrderable
 from plone.folder.ordered import OrderedBTreeFolderBase
-from plone.folder.tests.layer import PloneFolderLayer
+from plone.folder.testing import PLONEFOLDER_FUNCTIONAL_TESTING
 from StringIO import StringIO
-from Testing.ZopeTestCase import ZopeTestCase
 from transaction import savepoint
 from zope.interface import implements
 
+import unittest
+
 
 class DummyFolder(OrderedBTreeFolderBase, Implicit):
     """ we need to mix in acquisition """
@@ -16,11 +17,12 @@ class DummyFolder(OrderedBTreeFolderBase, Implicit):
     meta_type = 'DummyFolder'
 
 
-class IntegrationTests(ZopeTestCase):
+class IntegrationTests(unittest.TestCase):
 
-    layer = PloneFolderLayer
+    layer = PLONEFOLDER_FUNCTIONAL_TESTING
 
     def testExportDoesntIncludeParent(self):
+        self.app = self.layer['app']
         self.app._setOb('foo', DummyFolder('foo'))
         foo = self.app.foo
         foo['bar'] = DummyFolder('bar')
diff --git a/src/plone/folder/tests/test_ordering_adapters.py b/src/plone/folder/tests/test_ordering_adapters.py
index 001ad63..6a34225 100644
--- a/src/plone/folder/tests/test_ordering_adapters.py
+++ b/src/plone/folder/tests/test_ordering_adapters.py
@@ -1,17 +1,17 @@
 # -*- coding: utf-8 -*-
 from plone.folder.default import DefaultOrdering
 from plone.folder.ordered import OrderedBTreeFolderBase
-from plone.folder.tests.layer import PloneFolderLayer
+from plone.folder.testing import PLONEFOLDER_INTEGRATION_TESTING
 from plone.folder.unordered import UnorderedOrdering
-from unittest import defaultTestLoader
-from unittest import TestCase
 from zope.component import ComponentLookupError
 
+import unittest
 
-class OrderingAdapterTests(TestCase):
+
+class OrderingAdapterTests(unittest.TestCase):
     """ tests regarding available ordering adapters """
 
-    layer = PloneFolderLayer
+    layer = PLONEFOLDER_INTEGRATION_TESTING
 
     def testDefaultAdapter(self):
         folder = OrderedBTreeFolderBase()
diff --git a/src/plone/folder/tests/test_ordersupport.py b/src/plone/folder/tests/test_ordersupport.py
index 3e70078..7d0c0af 100644
--- a/src/plone/folder/tests/test_ordersupport.py
+++ b/src/plone/folder/tests/test_ordersupport.py
@@ -1,16 +1,16 @@
 # -*- coding: utf-8 -*-
 from plone.folder.interfaces import IOrdering
 from plone.folder.ordered import OrderedBTreeFolderBase
-from plone.folder.tests.layer import PloneFolderLayer
+from plone.folder.testing import PLONEFOLDER_INTEGRATION_TESTING
 from plone.folder.tests.utils import DummyObject
-from unittest import defaultTestLoader
-from unittest import TestCase
 
+import unittest
 
-class OFSOrderSupportTests(TestCase):
+
+class OFSOrderSupportTests(unittest.TestCase):
     """ tests borrowed from OFS.tests.testOrderSupport """
 
-    layer = PloneFolderLayer
+    layer = PLONEFOLDER_INTEGRATION_TESTING
 
     def create(self):
         folder = OrderedBTreeFolderBase('f1')
@@ -181,10 +181,10 @@ def test_moveObjectToPosition(self):
             )
 
 
-class PloneOrderSupportTests(TestCase):
+class PloneOrderSupportTests(unittest.TestCase):
     """ tests borrowed from Products.CMFPlone.tests.testOrderSupport """
 
-    layer = PloneFolderLayer
+    layer = PLONEFOLDER_INTEGRATION_TESTING
 
     def setUp(self):
         self.folder = OrderedBTreeFolderBase("f1")
diff --git a/src/plone/folder/tests/test_partialordering.py b/src/plone/folder/tests/test_partialordering.py
index b9ec633..4e54d85 100644
--- a/src/plone/folder/tests/test_partialordering.py
+++ b/src/plone/folder/tests/test_partialordering.py
@@ -1,19 +1,20 @@
-from unittest import TestCase, defaultTestLoader
 from transaction import savepoint
 from Acquisition import Implicit
-from Testing.ZopeTestCase import ZopeTestCase
 from zope.interface import implements
 from plone.folder.interfaces import IOrderable
 from plone.folder.ordered import OrderedBTreeFolderBase
 from plone.folder.partial import PartialOrdering
 from plone.folder.tests.utils import Orderable, Chaoticle
-from plone.folder.tests.layer import PloneFolderLayer
+from plone.folder.testing import PLONEFOLDER_INTEGRATION_TESTING
+from plone.folder.testing import PLONEFOLDER_FUNCTIONAL_TESTING
 
+import unittest
 
-class PartialOrderingTests(TestCase):
+
+class PartialOrderingTests(unittest.TestCase):
     """ tests regarding order-support for only items marked orderable """
 
-    layer = PloneFolderLayer
+    layer = PLONEFOLDER_INTEGRATION_TESTING
 
     def create(self):
         container = OrderedBTreeFolderBase()
@@ -199,11 +200,12 @@ def dummy_method(self):
         return self.id
 
 
-class PartialOrderingIntegrationTests(ZopeTestCase):
+class PartialOrderingIntegrationTests(unittest.TestCase):
 
-    layer = PloneFolderLayer
+    layer = PLONEFOLDER_FUNCTIONAL_TESTING
 
-    def afterSetUp(self):
+    def setUp(self):
+        self.app = self.layer['app']
         context = self.app
         context._setOb('foo', DummyFolder('foo'))   # not pythonic in 2.10 :(
         context.foo['bar1'] = DummyFolder('bar1')
diff --git a/src/plone/folder/tests/test_unorderedordering.py b/src/plone/folder/tests/test_unorderedordering.py
index 74edf8d..d2eab55 100644
--- a/src/plone/folder/tests/test_unorderedordering.py
+++ b/src/plone/folder/tests/test_unorderedordering.py
@@ -1,14 +1,15 @@
-from unittest import TestCase, defaultTestLoader
 from plone.folder.ordered import OrderedBTreeFolderBase
 from plone.folder.unordered import UnorderedOrdering
 from plone.folder.tests.utils import DummyObject
-from plone.folder.tests.layer import PloneFolderLayer
+from plone.folder.testing import PLONEFOLDER_INTEGRATION_TESTING
 
+import unittest
 
-class UnorderedOrderingTests(TestCase):
+
+class UnorderedOrderingTests(unittest.TestCase):
     """ tests regarding order-support for folders with unordered ordering """
 
-    layer = PloneFolderLayer
+    layer = PLONEFOLDER_INTEGRATION_TESTING
 
     def create(self):
         container = OrderedBTreeFolderBase()
diff --git a/src/plone/folder/tests/test_webdav.py b/src/plone/folder/tests/test_webdav.py
index 930a33a..e93e1c0 100644
--- a/src/plone/folder/tests/test_webdav.py
+++ b/src/plone/folder/tests/test_webdav.py
@@ -1,23 +1,23 @@
 # -*- coding: utf-8 -*-
 from Acquisition import Explicit
 from plone.folder.ordered import CMFOrderedBTreeFolderBase
-from plone.folder.tests.layer import PloneFolderLayer
+from plone.folder.testing import PLONEFOLDER_INTEGRATION_TESTING
 from plone.folder.tests.utils import DummyObject
-from unittest import defaultTestLoader
-from unittest import TestCase
 from webdav.NullResource import NullResource
 from zope.publisher.browser import TestRequest
 
+import unittest
+
 
 class TestRequestContainer(Explicit):
 
     REQUEST = TestRequest()
 
 
-class WebDAVTests(TestCase):
+class WebDAVTests(unittest.TestCase):
     """ tests regarding support for WebDAV NullResources """
 
-    layer = PloneFolderLayer
+    layer = PLONEFOLDER_INTEGRATION_TESTING
 
     def test_getitem_not_dav_request(self):
         root = TestRequestContainer()


Repository: plone.folder


Branch: refs/heads/master
Date: 2016-03-07T11:24:45+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.forcada@freitag.de>
Commit: https://github.com/plone/plone.folder/commit/663f0d43248cf6c190ddb28da2eeb100bad66864

Update CHANGES.rst

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 7874339..ae17e33 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -11,7 +11,9 @@ New:
 
 Fixes:
 
-- *add item here*
+- Update testing layers to use best practices and remove ZopeTestCase dependency,
+  which should fix its test isolation problems.
+  [gforcada]
 
 
 1.0.7 (2015-07-29)


Repository: plone.folder


Branch: refs/heads/master
Date: 2016-03-07T15:50:21+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.folder/commit/a0435c8636f7726c6ae150a2a8969047625aba43

Merge pull request #3 from plone/gforcada-revamp-testing

Update tests

Files changed:
A src/plone/folder/testing.py
M CHANGES.rst
M src/plone/folder/tests/__init__.py
M src/plone/folder/tests/test_dict_interface.py
M src/plone/folder/tests/test_integration.py
M src/plone/folder/tests/test_ordering_adapters.py
M src/plone/folder/tests/test_ordersupport.py
M src/plone/folder/tests/test_partialordering.py
M src/plone/folder/tests/test_unorderedordering.py
M src/plone/folder/tests/test_webdav.py
D src/plone/folder/tests/layer.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 7874339..ae17e33 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -11,7 +11,9 @@ New:
 
 Fixes:
 
-- *add item here*
+- Update testing layers to use best practices and remove ZopeTestCase dependency,
+  which should fix its test isolation problems.
+  [gforcada]
 
 
 1.0.7 (2015-07-29)
diff --git a/src/plone/folder/testing.py b/src/plone/folder/testing.py
new file mode 100644
index 0000000..b14476f
--- /dev/null
+++ b/src/plone/folder/testing.py
@@ -0,0 +1,28 @@
+# -*- coding: utf-8 -*-
+from plone.app.testing import FunctionalTesting
+from plone.app.testing import IntegrationTesting
+from plone.app.testing import PLONE_FIXTURE
+from plone.app.testing import PloneSandboxLayer
+
+import plone.folder
+
+
+class PloneFolderLayer(PloneSandboxLayer):
+
+    defaultBases = (PLONE_FIXTURE,)
+
+    def setUpZope(self, app, configurationContext):
+        self.loadZCML(package=plone.folder)
+
+
+PLONEFOLDER_FIXTURE = PloneFolderLayer()
+
+PLONEFOLDER_INTEGRATION_TESTING = IntegrationTesting(
+    bases=(PLONEFOLDER_FIXTURE,),
+    name='PloneFolderLayer:IntegrationTesting'
+)
+
+PLONEFOLDER_FUNCTIONAL_TESTING = FunctionalTesting(
+    bases=(PLONEFOLDER_FIXTURE,),
+    name='PloneFolderLayer:FunctionalTesting'
+)
diff --git a/src/plone/folder/tests/__init__.py b/src/plone/folder/tests/__init__.py
index 40a96af..e69de29 100644
--- a/src/plone/folder/tests/__init__.py
+++ b/src/plone/folder/tests/__init__.py
@@ -1 +0,0 @@
-# -*- coding: utf-8 -*-
diff --git a/src/plone/folder/tests/layer.py b/src/plone/folder/tests/layer.py
deleted file mode 100644
index 564d348..0000000
--- a/src/plone/folder/tests/layer.py
+++ /dev/null
@@ -1,20 +0,0 @@
-from Products.Five import fiveconfigure
-from Products.Five.zcml import load_config
-
-
-class PloneFolderLayer(object):
-
-    @classmethod
-    def setUp(cls):
-        # load zcml & install the package
-        fiveconfigure.debug_mode = True
-        from zope import component, annotation
-        load_config('meta.zcml', component)
-        load_config('configure.zcml', annotation)
-        from plone import folder
-        load_config('configure.zcml', folder)
-        fiveconfigure.debug_mode = False
-
-    @classmethod
-    def tearDown(cls):
-        pass
diff --git a/src/plone/folder/tests/test_dict_interface.py b/src/plone/folder/tests/test_dict_interface.py
index b487ab8..0bd1aaa 100644
--- a/src/plone/folder/tests/test_dict_interface.py
+++ b/src/plone/folder/tests/test_dict_interface.py
@@ -1,16 +1,16 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_base
 from plone.folder.ordered import OrderedBTreeFolderBase
-from plone.folder.tests.layer import PloneFolderLayer
+from plone.folder.testing import PLONEFOLDER_INTEGRATION_TESTING
 from plone.folder.tests.utils import DummyObject
-from unittest import defaultTestLoader
-from unittest import TestCase
 
+import unittest
 
-class DictInterfaceTests(TestCase):
+
+class DictInterfaceTests(unittest.TestCase):
     """ tests for dict style interface """
 
-    layer = PloneFolderLayer
+    layer = PLONEFOLDER_INTEGRATION_TESTING
 
     def test_getitem(self):
         folder = OrderedBTreeFolderBase("f1")
@@ -64,10 +64,10 @@ def test_to_verify_ticket_9120(self):
         self.assertEquals([key in folder for key in folder], [True, True])
 
 
-class RelatedToDictInterfaceTests(TestCase):
+class RelatedToDictInterfaceTests(unittest.TestCase):
     """ various tests which are related to the dict-like interface """
 
-    layer = PloneFolderLayer
+    layer = PLONEFOLDER_INTEGRATION_TESTING
 
     def create(self):
         folder = OrderedBTreeFolderBase("f1")
@@ -85,7 +85,3 @@ def testObjectIdsWithSpec(self):
         folder.moveObjectsDown(['o2'])
         self.assertEquals(['o3', 'o1'], folder.objectIds(spec='mt1'))
         self.assertEquals(['o4', 'o2'], folder.objectIds(spec='mt2'))
-
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/folder/tests/test_integration.py b/src/plone/folder/tests/test_integration.py
index af2a5af..d6bb697 100644
--- a/src/plone/folder/tests/test_integration.py
+++ b/src/plone/folder/tests/test_integration.py
@@ -2,12 +2,13 @@
 from Acquisition import Implicit
 from plone.folder.interfaces import IOrderable
 from plone.folder.ordered import OrderedBTreeFolderBase
-from plone.folder.tests.layer import PloneFolderLayer
+from plone.folder.testing import PLONEFOLDER_FUNCTIONAL_TESTING
 from StringIO import StringIO
-from Testing.ZopeTestCase import ZopeTestCase
 from transaction import savepoint
 from zope.interface import implements
 
+import unittest
+
 
 class DummyFolder(OrderedBTreeFolderBase, Implicit):
     """ we need to mix in acquisition """
@@ -16,11 +17,12 @@ class DummyFolder(OrderedBTreeFolderBase, Implicit):
     meta_type = 'DummyFolder'
 
 
-class IntegrationTests(ZopeTestCase):
+class IntegrationTests(unittest.TestCase):
 
-    layer = PloneFolderLayer
+    layer = PLONEFOLDER_FUNCTIONAL_TESTING
 
     def testExportDoesntIncludeParent(self):
+        self.app = self.layer['app']
         self.app._setOb('foo', DummyFolder('foo'))
         foo = self.app.foo
         foo['bar'] = DummyFolder('bar')
@@ -30,8 +32,3 @@ def testExportDoesntIncludeParent(self):
         self.app._p_jar.exportFile(foo.bar._p_oid, exp)
         self.failUnless('bar' in exp.getvalue())
         self.failIf('foo' in exp.getvalue())
-
-
-def test_suite():
-    from unittest import defaultTestLoader
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/folder/tests/test_ordering_adapters.py b/src/plone/folder/tests/test_ordering_adapters.py
index d421598..6a34225 100644
--- a/src/plone/folder/tests/test_ordering_adapters.py
+++ b/src/plone/folder/tests/test_ordering_adapters.py
@@ -1,17 +1,17 @@
 # -*- coding: utf-8 -*-
 from plone.folder.default import DefaultOrdering
 from plone.folder.ordered import OrderedBTreeFolderBase
-from plone.folder.tests.layer import PloneFolderLayer
+from plone.folder.testing import PLONEFOLDER_INTEGRATION_TESTING
 from plone.folder.unordered import UnorderedOrdering
-from unittest import defaultTestLoader
-from unittest import TestCase
 from zope.component import ComponentLookupError
 
+import unittest
 
-class OrderingAdapterTests(TestCase):
+
+class OrderingAdapterTests(unittest.TestCase):
     """ tests regarding available ordering adapters """
 
-    layer = PloneFolderLayer
+    layer = PLONEFOLDER_INTEGRATION_TESTING
 
     def testDefaultAdapter(self):
         folder = OrderedBTreeFolderBase()
@@ -37,7 +37,3 @@ def testSetOrdering(self):
     def testSetUnknownOrdering(self):
         folder = OrderedBTreeFolderBase()
         self.assertRaises(ComponentLookupError, folder.setOrdering, 'foo')
-
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/folder/tests/test_ordersupport.py b/src/plone/folder/tests/test_ordersupport.py
index 9a57daf..7d0c0af 100644
--- a/src/plone/folder/tests/test_ordersupport.py
+++ b/src/plone/folder/tests/test_ordersupport.py
@@ -1,16 +1,16 @@
 # -*- coding: utf-8 -*-
 from plone.folder.interfaces import IOrdering
 from plone.folder.ordered import OrderedBTreeFolderBase
-from plone.folder.tests.layer import PloneFolderLayer
+from plone.folder.testing import PLONEFOLDER_INTEGRATION_TESTING
 from plone.folder.tests.utils import DummyObject
-from unittest import defaultTestLoader
-from unittest import TestCase
 
+import unittest
 
-class OFSOrderSupportTests(TestCase):
+
+class OFSOrderSupportTests(unittest.TestCase):
     """ tests borrowed from OFS.tests.testOrderSupport """
 
-    layer = PloneFolderLayer
+    layer = PLONEFOLDER_INTEGRATION_TESTING
 
     def create(self):
         folder = OrderedBTreeFolderBase('f1')
@@ -181,10 +181,10 @@ def test_moveObjectToPosition(self):
             )
 
 
-class PloneOrderSupportTests(TestCase):
+class PloneOrderSupportTests(unittest.TestCase):
     """ tests borrowed from Products.CMFPlone.tests.testOrderSupport """
 
-    layer = PloneFolderLayer
+    layer = PLONEFOLDER_INTEGRATION_TESTING
 
     def setUp(self):
         self.folder = OrderedBTreeFolderBase("f1")
@@ -326,7 +326,3 @@ def testIgnoreNonObjects(self):
         self.assertEqual(self.folder.getObjectPosition('bar'), 0)
         self.assertEqual(self.folder.getObjectPosition('foo'), 1)
         self.assertEqual(self.folder.getObjectPosition('baz'), 2)
-
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/folder/tests/test_partialordering.py b/src/plone/folder/tests/test_partialordering.py
index 7e334bf..4e54d85 100644
--- a/src/plone/folder/tests/test_partialordering.py
+++ b/src/plone/folder/tests/test_partialordering.py
@@ -1,19 +1,20 @@
-from unittest import TestCase, defaultTestLoader
 from transaction import savepoint
 from Acquisition import Implicit
-from Testing.ZopeTestCase import ZopeTestCase
 from zope.interface import implements
 from plone.folder.interfaces import IOrderable
 from plone.folder.ordered import OrderedBTreeFolderBase
 from plone.folder.partial import PartialOrdering
 from plone.folder.tests.utils import Orderable, Chaoticle
-from plone.folder.tests.layer import PloneFolderLayer
+from plone.folder.testing import PLONEFOLDER_INTEGRATION_TESTING
+from plone.folder.testing import PLONEFOLDER_FUNCTIONAL_TESTING
 
+import unittest
 
-class PartialOrderingTests(TestCase):
+
+class PartialOrderingTests(unittest.TestCase):
     """ tests regarding order-support for only items marked orderable """
 
-    layer = PloneFolderLayer
+    layer = PLONEFOLDER_INTEGRATION_TESTING
 
     def create(self):
         container = OrderedBTreeFolderBase()
@@ -199,11 +200,12 @@ def dummy_method(self):
         return self.id
 
 
-class PartialOrderingIntegrationTests(ZopeTestCase):
+class PartialOrderingIntegrationTests(unittest.TestCase):
 
-    layer = PloneFolderLayer
+    layer = PLONEFOLDER_FUNCTIONAL_TESTING
 
-    def afterSetUp(self):
+    def setUp(self):
+        self.app = self.layer['app']
         context = self.app
         context._setOb('foo', DummyFolder('foo'))   # not pythonic in 2.10 :(
         context.foo['bar1'] = DummyFolder('bar1')
@@ -251,7 +253,3 @@ def testOrderObjectsByMethodChangesOrderInfo(self):
         # Reverse the current ordering.
         foo.orderObjects(reverse=True)
         self.assertEqual(foo.objectIds(), ['bar1', 'bar2', 'bar3'])
-
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/folder/tests/test_unorderedordering.py b/src/plone/folder/tests/test_unorderedordering.py
index 555ea71..d2eab55 100644
--- a/src/plone/folder/tests/test_unorderedordering.py
+++ b/src/plone/folder/tests/test_unorderedordering.py
@@ -1,14 +1,15 @@
-from unittest import TestCase, defaultTestLoader
 from plone.folder.ordered import OrderedBTreeFolderBase
 from plone.folder.unordered import UnorderedOrdering
 from plone.folder.tests.utils import DummyObject
-from plone.folder.tests.layer import PloneFolderLayer
+from plone.folder.testing import PLONEFOLDER_INTEGRATION_TESTING
 
+import unittest
 
-class UnorderedOrderingTests(TestCase):
+
+class UnorderedOrderingTests(unittest.TestCase):
     """ tests regarding order-support for folders with unordered ordering """
 
-    layer = PloneFolderLayer
+    layer = PLONEFOLDER_INTEGRATION_TESTING
 
     def create(self):
         container = OrderedBTreeFolderBase()
@@ -51,7 +52,3 @@ def testNotifyRemoved(self):
     def testGetObjectPosition(self):
         container = self.create()
         self.assertEqual(container.getObjectPosition('o2'), None)
-
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)
diff --git a/src/plone/folder/tests/test_webdav.py b/src/plone/folder/tests/test_webdav.py
index c3135fc..e93e1c0 100644
--- a/src/plone/folder/tests/test_webdav.py
+++ b/src/plone/folder/tests/test_webdav.py
@@ -1,23 +1,23 @@
 # -*- coding: utf-8 -*-
 from Acquisition import Explicit
 from plone.folder.ordered import CMFOrderedBTreeFolderBase
-from plone.folder.tests.layer import PloneFolderLayer
+from plone.folder.testing import PLONEFOLDER_INTEGRATION_TESTING
 from plone.folder.tests.utils import DummyObject
-from unittest import defaultTestLoader
-from unittest import TestCase
 from webdav.NullResource import NullResource
 from zope.publisher.browser import TestRequest
 
+import unittest
+
 
 class TestRequestContainer(Explicit):
 
     REQUEST = TestRequest()
 
 
-class WebDAVTests(TestCase):
+class WebDAVTests(unittest.TestCase):
     """ tests regarding support for WebDAV NullResources """
 
-    layer = PloneFolderLayer
+    layer = PLONEFOLDER_INTEGRATION_TESTING
 
     def test_getitem_not_dav_request(self):
         root = TestRequestContainer()
@@ -48,7 +48,3 @@ def test_getitem_dav_request(self):
 
         self.assertEquals(folder['foo'], foo)
         self.failUnless(isinstance(folder['bar'], NullResource))
-
-
-def test_suite():
-    return defaultTestLoader.loadTestsFromName(__name__)


