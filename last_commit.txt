Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2015-11-05T00:04:55+01:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/Products.CMFEditions/commit/1731ce72785305337ee0008ac365abce7503ab4e

Merge remote-tracking branch 'remotes/origin/master'

Files changed:
A .gitattributes
M CHANGES.rst
M Products/CMFEditions/KeepLastNVersionsTool.py
M Products/CMFEditions/ZVCStorageTool.py
M Products/CMFEditions/browser/diff.pt
M Products/CMFEditions/configure.zcml
M Products/CMFEditions/exportimport/repository.py
M Products/CMFEditions/permissions.zcml
M Products/CMFEditions/profiles.zcml
M Products/CMFEditions/tests/test_ZVCStorageTool.py
M setup.py

diff --git a/.gitattributes b/.gitattributes
new file mode 100644
index 0000000..6f9ff67
--- /dev/null
+++ b/.gitattributes
@@ -0,0 +1 @@
+CHANGES.rst merge=union
diff --git a/CHANGES.rst b/CHANGES.rst
index d21aa28..4ce2b09 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -1,10 +1,40 @@
 Changelog
 =========
 
-2.2.14 (unreleased)
+2.2.17 (unreleased)
 -------------------
 
-- Nothing changed yet.
+New:
+
+- *add item here*
+
+Fixes:
+
+- make storage statistics test more robust - see https://github.com/plone/Products.CMFEditions/issues/31
+  [tschorr]
+
+
+2.2.16 (2015-09-27)
+-------------------
+
+- Input sanitation for retrieveSubstitute()
+  [zupo]
+
+
+2.2.15 (2015-09-15)
+-------------------
+
+- use unrestricted search for storage statistics
+  [tschorr]
+
+
+2.2.14 (2015-08-13)
+-------------------
+
+- Do not call ndiff unless there is no html_diff.  Removed strange
+  unicode space from template.  Related to
+  https://github.com/plone/Products.CMFPlone/issues/820
+  [maurits]
 
 
 2.2.13 (2015-04-26)
diff --git a/Products/CMFEditions/KeepLastNVersionsTool.py b/Products/CMFEditions/KeepLastNVersionsTool.py
index c586d01..52488cb 100644
--- a/Products/CMFEditions/KeepLastNVersionsTool.py
+++ b/Products/CMFEditions/KeepLastNVersionsTool.py
@@ -96,7 +96,10 @@ def retrieveSubstitute(self, history_id, selector, default=None):
 
         If there isn't a next older one returns the next newer one.
         """
-        selector = int(selector)
+        if selector is None:
+            selector = 0
+        else:
+            selector = int(selector)
         storage = getToolByName(self, 'portal_historiesstorage')
         savedSelector = selector
         while selector:
diff --git a/Products/CMFEditions/ZVCStorageTool.py b/Products/CMFEditions/ZVCStorageTool.py
index 0152c96..1dc96a2 100644
--- a/Products/CMFEditions/ZVCStorageTool.py
+++ b/Products/CMFEditions/ZVCStorageTool.py
@@ -665,7 +665,7 @@ def zmi_getStorageStatistics(self):
             if shadowStorage is not None:
                 size, sizeState = shadowStorage.getSize()
 
-            workingCopy = hidhandler.queryObject(hid)
+            workingCopy = hidhandler.unrestrictedQueryObject(hid)
             if workingCopy is not None:
                 url = workingCopy.absolute_url()
                 path = url[portal_paths_len:]
@@ -673,8 +673,11 @@ def zmi_getStorageStatistics(self):
             else:
                 path = None
                 url = None
-                retrieved = self.retrieve(hid).object.object
-                portal_type = retrieved.getPortalTypeName()
+                object_ = self.retrieve(hid).object
+                if isinstance(object_, Removed):
+                    portal_type = 'Removed'
+                else:
+                    portal_type = object_.object.getPortalTypeName()
             histData = {
                 "history_id": hid,
                 "length": length,
diff --git a/Products/CMFEditions/browser/diff.pt b/Products/CMFEditions/browser/diff.pt
index ee2a930..ef596dd 100644
--- a/Products/CMFEditions/browser/diff.pt
+++ b/Products/CMFEditions/browser/diff.pt
@@ -123,22 +123,29 @@
 
                 <div class="fieldDiff code-diff"
                      style="display: none"
-                     tal:define="has_html_diff diff/html_diff | nothing;
-                                 has_ndiff diff/ndiff |Â nothing">
-                  <pre tal:condition="exists:diff/html_diff"
-                       tal:content="structure python:diff.html_diff(wrapcolumn=80)">
+                     tal:define="exists_html_diff exists:diff/html_diff;
+                                 html_diff python:diff.html_diff(wrapcolumn=80) if exists_html_diff else '';
+                                 has_html_diff python:bool(html_diff)">
+                  <pre tal:condition="has_html_diff"
+                       tal:content="structure html_diff">
                     HTML formatted differences
                   </pre>
 
-                  <pre class="fieldDiff code-diff"
-                       tal:condition="python:not has_html_diff and has_ndiff"
-                       tal:content="diff/ndiff">
-                    ndiff formatted differences
-                  </pre>
-                  <p class="fieldDiff"
-                     tal:condition="python:not has_html_diff and not has_ndiff">
-                    This field has no code difference view.
-                  </p>
+                  <tal:block condition="not:has_html_diff">
+                    <tal:block define="exists_ndiff exists:diff/ndiff;
+                                       ndiff python:diff.ndiff() if exists_ndiff else '';
+                                       has_ndiff python:bool(ndiff)">
+                      <pre class="fieldDiff code-diff"
+                           tal:condition="has_ndiff"
+                           tal:content="ndiff">
+                        ndiff formatted differences
+                      </pre>
+                      <p class="fieldDiff"
+                         tal:condition="not:has_ndiff">
+                        This field has no code difference view.
+                      </p>
+                    </tal:block>
+                  </tal:block>
                 </div>
               </fieldset>
 
diff --git a/Products/CMFEditions/configure.zcml b/Products/CMFEditions/configure.zcml
index 466c1f2..64d4b8c 100644
--- a/Products/CMFEditions/configure.zcml
+++ b/Products/CMFEditions/configure.zcml
@@ -6,7 +6,7 @@
     i18n_domain="cmfeditions">
 
   <include file="permissions.zcml"/>
-  
+
   <cmf:registerDirectory name="skins" directory="skins" recursive="True" />
 
   <include package="Products.CMFUid" />
diff --git a/Products/CMFEditions/exportimport/repository.py b/Products/CMFEditions/exportimport/repository.py
index 5c33cc4..e7da1de 100644
--- a/Products/CMFEditions/exportimport/repository.py
+++ b/Products/CMFEditions/exportimport/repository.py
@@ -10,7 +10,7 @@
 class RepositoryToolXMLAdapter(XMLAdapterBase):
     """Mode in- and exporter for RepositoryTool.
     """
-    
+
     name = 'repositorytool'
 
     def _exportNode(self):
@@ -112,7 +112,7 @@ def _initTypePolicies(self, node):
                         if portal_type in versionable_types:
                             versionable_types.remove(portal_type)
                     tool.setVersionableContentTypes(versionable_types)
-                        
+
 
     def _extractTypePolicies(self):
         node = self._doc.createElement('policymap')
diff --git a/Products/CMFEditions/permissions.zcml b/Products/CMFEditions/permissions.zcml
index 7aa041d..da6e951 100644
--- a/Products/CMFEditions/permissions.zcml
+++ b/Products/CMFEditions/permissions.zcml
@@ -1,8 +1,8 @@
 <configure xmlns="http://namespaces.zope.org/zope">
-  
-  <!-- Make Zope 2 permissions available as Zope 3-style permissions. 
+
+  <!-- Make Zope 2 permissions available as Zope 3-style permissions.
        This file must be kept in sync with `Permissions.py`.
-  -->    
+  -->
   <permission
       id="CMFEditions.AccessPreviousVersions"
       title="CMFEditions: Access previous versions"
@@ -10,27 +10,27 @@
   <permission
       id="CMFEditions.RevertToPreviousVersions"
       title="CMFEditions: Revert to previous versions"
-  /> 
+  />
   <permission
       id="CMFEditions.ApplyVersionControl"
       title="CMFEditions: Apply version control"
-  /> 
+  />
   <permission
       id="CMFEditions.SaveNewVersion"
       title="CMFEditions: Save new version"
-  /> 
+  />
   <permission
       id="CMFEditions.PurgeVersion"
       title="CMFEditions: Purge version"
-  /> 
+  />
   <permission
       id="CMFEditions.CheckoutToLocation"
       title="CMFEditions: Checkout to location"
-  /> 
+  />
   <permission
       id="CMFEditions.ManagVersioningPolicies"
       title="CMFEditions: Manage versioning policies"
-  /> 
+  />
 
-</configure>    
+</configure>
 
diff --git a/Products/CMFEditions/profiles.zcml b/Products/CMFEditions/profiles.zcml
index 9da9812..c775c2d 100644
--- a/Products/CMFEditions/profiles.zcml
+++ b/Products/CMFEditions/profiles.zcml
@@ -20,7 +20,7 @@
            title="Fix portal_historyidhandler"
            import_steps="toolset"
           />
-        
+
     </genericsetup:upgradeSteps>
 
     <genericsetup:upgradeSteps
diff --git a/Products/CMFEditions/tests/test_ZVCStorageTool.py b/Products/CMFEditions/tests/test_ZVCStorageTool.py
old mode 100755
new mode 100644
index e937f52..96bfbac
--- a/Products/CMFEditions/tests/test_ZVCStorageTool.py
+++ b/Products/CMFEditions/tests/test_ZVCStorageTool.py
@@ -23,7 +23,7 @@
 """Test the standard archivist
 
 """
-
+from DateTime.DateTime import DateTime
 from Products.CMFEditions.tests.base import CMFEditionsBaseTestCase
 
 from zope.interface.verify import verifyObject
@@ -43,6 +43,18 @@
 class DummyOM(ObjectManager):
     pass
 
+class CMFDummy(Dummy):
+
+    def __init__(self, id, cmfuid, effective=None, expires=None):
+        super(CMFDummy, self).__init__()
+        self.id = id
+        self.cmf_uid = cmfuid
+        self.effective = effective if effective is not None else self.modification_date
+        self.expires = expires
+
+    def getPortalTypeName(self):
+        return 'Dummy'
+
 class TestZVCStorageTool(CMFEditionsBaseTestCase):
 
     def afterSetUp(self):
@@ -446,6 +458,108 @@ def test14_getHistoryMetadata(self):
         self.assertEqual(history.retrieve(2)['metadata']['sys_metadata']['comment'], "saved v3")
         self.assertEqual(history.retrieve(3)['metadata']['sys_metadata']['comment'], "saved v4")
 
+    def test15_storageStatistics(self):
+        self.maxDiff = None
+        portal_storage = self.portal.portal_historiesstorage
+
+        cmf_uid = 1
+        obj1 = CMFDummy('obj', cmf_uid)
+        obj1.text = 'v1 of text'
+        portal_storage.register(cmf_uid, ObjectData(obj1), metadata=self.buildMetadata('saved v1'))
+
+        obj2 = CMFDummy('obj', cmf_uid)
+        obj2.text = 'v2 of text'
+        portal_storage.save(cmf_uid, ObjectData(obj2), metadata=self.buildMetadata('saved v2'))
+
+        obj3 = CMFDummy('obj', cmf_uid)
+        obj3.text = 'v3 of text'
+        portal_storage.save(cmf_uid, ObjectData(obj3), metadata=self.buildMetadata('saved v3'))
+
+        obj4 = CMFDummy('obj', cmf_uid)
+        obj4.text = 'v4 of text'
+        self.portal._setObject('obj', obj4)
+        self.portal.portal_catalog.indexObject(self.portal.obj)
+        portal_storage.save(cmf_uid, ObjectData(obj4), metadata=self.buildMetadata('saved v4'))
+
+        cmf_uid = 2
+        tomorrow = DateTime() + 1
+        obj5 = CMFDummy('tomorrow', cmf_uid, effective=tomorrow)
+        obj5.allowedRolesAndUsers = ['Anonymous']
+        self.portal._setObject('tomorrow', obj5)
+        self.portal.portal_catalog.indexObject(self.portal.tomorrow)
+        portal_storage.register(cmf_uid, ObjectData(obj5), metadata=self.buildMetadata('effective tomorrow'))
+
+        cmf_uid = 3
+        yesterday = DateTime() - 1
+        obj6 = CMFDummy('yesterday', cmf_uid, expires=yesterday)
+        obj6.allowedRolesAndUsers = ['Anonymous']
+        self.portal._setObject('yesterday', obj6)
+        self.portal.portal_catalog.indexObject(self.portal.yesterday)
+        portal_storage.register(cmf_uid, ObjectData(obj6), metadata=self.buildMetadata('expired yesterday'))
+
+        cmf_uid = 4
+        obj7 = CMFDummy('public', cmf_uid)
+        obj7.text = 'visible for everyone'
+        obj7.allowedRolesAndUsers = ['Anonymous']
+        self.portal._setObject('public', obj7)
+        self.portal.portal_catalog.indexObject(self.portal.public)
+        portal_storage.register(cmf_uid, ObjectData(obj7), metadata=self.buildMetadata('saved public'))
+
+        got = portal_storage.zmi_getStorageStatistics()
+        expected = {'deleted': [],
+                    'summaries': {
+                        'totalHistories': 4,
+                        'deletedVersions': 0,
+                        'existingVersions': 7,
+                        'deletedHistories': 0,
+                        'time': '0.00',
+                        'totalVersions': 7,
+                        'existingAverage': '1.8',
+                        'existingHistories': 4,
+                        'deletedAverage': 'n/a',
+                        'totalAverage': '1.8'},
+                    'existing': [
+                        {
+                            'url': 'http://nohost/plone/obj',
+                            'history_id': 1,
+                            'length': 4,
+                            'path': '/obj',
+                            'sizeState': 'approximate',
+                            'portal_type': 'Dummy',
+                        }, {
+                            'url': 'http://nohost/plone/tomorrow',
+                            'history_id': 2,
+                            'length': 1,
+                            'path': '/tomorrow',
+                            'sizeState': 'approximate',
+                            'portal_type': 'Dummy',
+                        }, {
+                            'url': 'http://nohost/plone/yesterday',
+                            'history_id': 3,
+                            'length': 1,
+                            'path': '/yesterday',
+                            'sizeState': 'approximate',
+                            'portal_type': 'Dummy',
+                        }, {
+                            'url': 'http://nohost/plone/public',
+                            'history_id': 4,
+                            'length': 1,
+                            'path': '/public',
+                            'sizeState': 'approximate',
+                            'portal_type': 'Dummy',
+                        }]}
+        self.assertEqual(expected['deleted'], got['deleted'])
+        self.assertEqual(expected['summaries'], got['summaries'])
+        self.assertEqual(len(expected['existing']), len(got['existing']))
+        for idx in range(len(expected['existing'])):
+            exp = expected['existing'][idx]
+            actual = got['existing'][idx]
+            for key, value in exp.items():
+                self.assertEqual(actual[key], value)
+            # The actual size is not important and we want robust tests,
+            # s. https://github.com/plone/Products.CMFEditions/issues/31
+            self.failUnless(actual['size'] > 0)
+
 
 class TestMemoryStorage(TestZVCStorageTool):
 
@@ -453,3 +567,8 @@ def installStorageTool(self):
         # install the memory storage
         tool = MemoryStorage()
         setattr(self.portal, tool.getId(), tool)
+
+    def test15_storageStatistics(self):
+        """ MemoryStorage does not implement zmi_getStorageStatistics
+        """
+        pass
diff --git a/setup.py b/setup.py
index 233e57d..b33d7c1 100644
--- a/setup.py
+++ b/setup.py
@@ -2,7 +2,7 @@
 
 from setuptools import setup, find_packages
 
-version = '2.2.14.dev0'
+version = '2.2.17.dev0'
 
 setup(name='Products.CMFEditions',
       version=version,


Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2015-11-25T12:21:28+01:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/Products.CMFEditions/commit/5b201dd50c6f1c174779a11d28bde4e96906cfb0

Merge remote-tracking branch 'remotes/origin/master'

Files changed:
A CONTRIBUTING.rst

diff --git a/CONTRIBUTING.rst b/CONTRIBUTING.rst
new file mode 100644
index 0000000..fc637ac
--- /dev/null
+++ b/CONTRIBUTING.rst
@@ -0,0 +1 @@
+Please see http://docs.plone.org/develop/coredev/docs/guidelines.html


Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2015-11-26T14:49:54+01:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/Products.CMFEditions/commit/2071dd0b82ec1ce59a169c5e7572fa5050a39d1a

Merge remote-tracking branch 'remotes/origin/master'

Files changed:
M CHANGES.rst
M Products/CMFEditions/interfaces/IPurgePolicy.py
M Products/CMFEditions/tests/__init__.py
M Products/CMFEditions/tests/images/Image1_v0.gif
M Products/CMFEditions/tests/images/Image1_v1.gif
M Products/CMFEditions/tests/images/Image1_v2.gif
M Products/CMFEditions/tests/images/Image1_v3.gif
M Products/CMFEditions/tests/images/Image2_v0.gif
M Products/CMFEditions/tests/images/Image2_v1.gif
M Products/CMFEditions/tests/images/Image2_v2.gif
M Products/CMFEditions/tests/images/Image2_v3.gif
M Products/CMFEditions/tests/test_ArchivistTool.py
M Products/CMFEditions/tests/test_CopyModifyMergeRepositoryTool.py
M Products/CMFEditions/tests/test_IntegrationTests.py
M Products/CMFEditions/tests/test_KeepLastNVersionsTool.py
M Products/CMFEditions/tests/test_ModifierRegistryTool.py
M doc/presentations/EPC2005_CMFEditions.sxi
M doc/presentations/EPC2006_CMFEditions.sxi
M doc/presentations/PloneConf2005_CMFEditions.sxi
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 4ce2b09..587a201 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -1,7 +1,7 @@
 Changelog
 =========
 
-2.2.17 (unreleased)
+2.2.19 (unreleased)
 -------------------
 
 New:
@@ -10,7 +10,26 @@ New:
 
 Fixes:
 
-- make storage statistics test more robust - see https://github.com/plone/Products.CMFEditions/issues/31
+- *add item here*
+
+
+2.2.18 (2015-11-25)
+-------------------
+
+Fixes:
+
+- Removed executable bit from various files.  And do a quick release,
+  as on a test server the previous release was somehow missing a file.
+  [maurits]
+
+
+2.2.17 (2015-11-25)
+-------------------
+
+Fixes:
+
+- Made storage statistics test more robust.
+  See https://github.com/plone/Products.CMFEditions/issues/31
   [tschorr]
 
 
diff --git a/Products/CMFEditions/interfaces/IPurgePolicy.py b/Products/CMFEditions/interfaces/IPurgePolicy.py
old mode 100755
new mode 100644
diff --git a/Products/CMFEditions/tests/__init__.py b/Products/CMFEditions/tests/__init__.py
old mode 100755
new mode 100644
diff --git a/Products/CMFEditions/tests/images/Image1_v0.gif b/Products/CMFEditions/tests/images/Image1_v0.gif
old mode 100755
new mode 100644
diff --git a/Products/CMFEditions/tests/images/Image1_v1.gif b/Products/CMFEditions/tests/images/Image1_v1.gif
old mode 100755
new mode 100644
diff --git a/Products/CMFEditions/tests/images/Image1_v2.gif b/Products/CMFEditions/tests/images/Image1_v2.gif
old mode 100755
new mode 100644
diff --git a/Products/CMFEditions/tests/images/Image1_v3.gif b/Products/CMFEditions/tests/images/Image1_v3.gif
old mode 100755
new mode 100644
diff --git a/Products/CMFEditions/tests/images/Image2_v0.gif b/Products/CMFEditions/tests/images/Image2_v0.gif
old mode 100755
new mode 100644
diff --git a/Products/CMFEditions/tests/images/Image2_v1.gif b/Products/CMFEditions/tests/images/Image2_v1.gif
old mode 100755
new mode 100644
diff --git a/Products/CMFEditions/tests/images/Image2_v2.gif b/Products/CMFEditions/tests/images/Image2_v2.gif
old mode 100755
new mode 100644
diff --git a/Products/CMFEditions/tests/images/Image2_v3.gif b/Products/CMFEditions/tests/images/Image2_v3.gif
old mode 100755
new mode 100644
diff --git a/Products/CMFEditions/tests/test_ArchivistTool.py b/Products/CMFEditions/tests/test_ArchivistTool.py
old mode 100755
new mode 100644
diff --git a/Products/CMFEditions/tests/test_CopyModifyMergeRepositoryTool.py b/Products/CMFEditions/tests/test_CopyModifyMergeRepositoryTool.py
old mode 100755
new mode 100644
diff --git a/Products/CMFEditions/tests/test_IntegrationTests.py b/Products/CMFEditions/tests/test_IntegrationTests.py
old mode 100755
new mode 100644
diff --git a/Products/CMFEditions/tests/test_KeepLastNVersionsTool.py b/Products/CMFEditions/tests/test_KeepLastNVersionsTool.py
old mode 100755
new mode 100644
diff --git a/Products/CMFEditions/tests/test_ModifierRegistryTool.py b/Products/CMFEditions/tests/test_ModifierRegistryTool.py
old mode 100755
new mode 100644
diff --git a/doc/presentations/EPC2005_CMFEditions.sxi b/doc/presentations/EPC2005_CMFEditions.sxi
old mode 100755
new mode 100644
diff --git a/doc/presentations/EPC2006_CMFEditions.sxi b/doc/presentations/EPC2006_CMFEditions.sxi
old mode 100755
new mode 100644
diff --git a/doc/presentations/PloneConf2005_CMFEditions.sxi b/doc/presentations/PloneConf2005_CMFEditions.sxi
old mode 100755
new mode 100644
diff --git a/setup.py b/setup.py
index b33d7c1..2f52193 100644
--- a/setup.py
+++ b/setup.py
@@ -2,7 +2,7 @@
 
 from setuptools import setup, find_packages
 
-version = '2.2.17.dev0'
+version = '2.2.19.dev0'
 
 setup(name='Products.CMFEditions',
       version=version,


Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2016-01-28T13:21:52+01:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/Products.CMFEditions/commit/995f39c71fba0ee83d10d713fbb38a5088eb1337

Typos

Files changed:
M Products/CMFEditions/tests/test_IntegrationTests.py

diff --git a/Products/CMFEditions/tests/test_IntegrationTests.py b/Products/CMFEditions/tests/test_IntegrationTests.py
index b031852..1ce69c1 100644
--- a/Products/CMFEditions/tests/test_IntegrationTests.py
+++ b/Products/CMFEditions/tests/test_IntegrationTests.py
@@ -492,8 +492,8 @@ def test15_retrieveInsideRefsFolderWithAddedOrDeletedObjects(self):
         doc1 = fol.doc1
         doc2 = fol.doc2
 
-        # just configure the standard folder to treat the childrens as
-        # inside refrences. For this we reconfigure the standard modifiers.
+        # just configure the standard folder to treat the children as
+        # inside references. For this we reconfigure the standard modifiers.
         portal_modifier = self.portal.portal_modifier
         portal_modifier.edit("OMOutsideChildrensModifier", enabled=False,
                              condition="python: False")


