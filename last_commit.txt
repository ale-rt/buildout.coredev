Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2016-06-29T16:51:56+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.robotframework/commit/d513cb779ed4b5071d36345941d1ca94d7448de0

Do not use run_on_failure from Selenium2Library.

This interferes with Wait until keyword succeeds: an initial failure
is seen as total failure instead of checking the retries of this
keyword.

Added `Plone Test Setup` and `Plone Test Teardown` keywords.  In that
last one, in case of a failure do what used to be done by
run_on_failure.  This means a screen shot by default, but you can
override this on the command line with for example
ROBOT_SELENIUM_RUN_ON_FAILURE=Debug, or Nothing to ignore it.

See https://github.com/plone/Products.CMFPlone/pull/1652

Files changed:
M CHANGES.rst
M src/plone/app/robotframework/selenium.robot

diff --git a/CHANGES.rst b/CHANGES.rst
index 056edee..9563427 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,6 +10,16 @@ Breaking changes:
 
 New features:
 
+- Do not use ``run_on_failure`` from ``Selenium2Library``.  This
+  interferes with ``Wait until keyword succeeds``: an initial failure
+  is seen as total failure instead of checking the retries of this
+  keyword.  Added ``Plone Test Setup`` and ``Plone Test Teardown``
+  keywords.  In that last one, in case of a failure do what used to be
+  done by ``run_on_failure``.  This means a screen shot by default,
+  but you can override this on the command line with for example
+  ``ROBOT_SELENIUM_RUN_ON_FAILURE=Debug``, or ``Nothing`` to ignore
+  it.  See https://github.com/plone/Products.CMFPlone/pull/1652  [maurits]
+
 - Add ``Running tests with the Google Chrome browser`` section.
   [thet]
 
diff --git a/src/plone/app/robotframework/selenium.robot b/src/plone/app/robotframework/selenium.robot
index a902601..4fa87c0 100644
--- a/src/plone/app/robotframework/selenium.robot
+++ b/src/plone/app/robotframework/selenium.robot
@@ -1,8 +1,11 @@
 *** Settings ***
 
+# We set run_on_failure to Nothing because anything else interferes with
+# 'Wait until keyword succeeds', interpreting an initial failure as complete failure,
+# instead of waiting for a successful retry.
 Library  Selenium2Library  timeout=${SELENIUM_TIMEOUT}
 ...                        implicit_wait=${SELENIUM_IMPLICIT_WAIT}
-...                        run_on_failure=${SELENIUM_RUN_ON_FAILURE}
+...                        run_on_failure=Nothing
 
 Resource  variables.robot
 Resource  ${CMFPLONE_SELECTORS}
@@ -37,6 +40,15 @@ Wait until location is
     Wait until keyword succeeds  ${TIMEOUT}  ${IMPLICIT_WAIT}
     ...                          Location should be  ${expected_url}
 
+Plone Test Setup
+    Open SauceLabs test browser
+    Refresh JS/CSS resources
+
+Plone Test Teardown
+    Run Keyword If Test Failed  ${SELENIUM_RUN_ON_FAILURE}
+    Report test status
+    Close all browsers
+
 # ----------------------------------------------------------------------------
 # Elements
 # ----------------------------------------------------------------------------


Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2016-06-29T20:55:40+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.robotframework/commit/fdea4a1b81176dfb816d6fa1314451cfd5f20a80

Merge pull request #57 from plone/maurits-no-run-on-failure

Do not use run_on_failure from Selenium2Library.

Files changed:
M CHANGES.rst
M src/plone/app/robotframework/selenium.robot

diff --git a/CHANGES.rst b/CHANGES.rst
index 056edee..9563427 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,6 +10,16 @@ Breaking changes:
 
 New features:
 
+- Do not use ``run_on_failure`` from ``Selenium2Library``.  This
+  interferes with ``Wait until keyword succeeds``: an initial failure
+  is seen as total failure instead of checking the retries of this
+  keyword.  Added ``Plone Test Setup`` and ``Plone Test Teardown``
+  keywords.  In that last one, in case of a failure do what used to be
+  done by ``run_on_failure``.  This means a screen shot by default,
+  but you can override this on the command line with for example
+  ``ROBOT_SELENIUM_RUN_ON_FAILURE=Debug``, or ``Nothing`` to ignore
+  it.  See https://github.com/plone/Products.CMFPlone/pull/1652  [maurits]
+
 - Add ``Running tests with the Google Chrome browser`` section.
   [thet]
 
diff --git a/src/plone/app/robotframework/selenium.robot b/src/plone/app/robotframework/selenium.robot
index a902601..4fa87c0 100644
--- a/src/plone/app/robotframework/selenium.robot
+++ b/src/plone/app/robotframework/selenium.robot
@@ -1,8 +1,11 @@
 *** Settings ***
 
+# We set run_on_failure to Nothing because anything else interferes with
+# 'Wait until keyword succeeds', interpreting an initial failure as complete failure,
+# instead of waiting for a successful retry.
 Library  Selenium2Library  timeout=${SELENIUM_TIMEOUT}
 ...                        implicit_wait=${SELENIUM_IMPLICIT_WAIT}
-...                        run_on_failure=${SELENIUM_RUN_ON_FAILURE}
+...                        run_on_failure=Nothing
 
 Resource  variables.robot
 Resource  ${CMFPLONE_SELECTORS}
@@ -37,6 +40,15 @@ Wait until location is
     Wait until keyword succeeds  ${TIMEOUT}  ${IMPLICIT_WAIT}
     ...                          Location should be  ${expected_url}
 
+Plone Test Setup
+    Open SauceLabs test browser
+    Refresh JS/CSS resources
+
+Plone Test Teardown
+    Run Keyword If Test Failed  ${SELENIUM_RUN_ON_FAILURE}
+    Report test status
+    Close all browsers
+
 # ----------------------------------------------------------------------------
 # Elements
 # ----------------------------------------------------------------------------


