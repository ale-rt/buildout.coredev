Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2016-12-19T17:35:27Z
Author: Daniel Jowett (djowett) <daniel@jowettenterprises.com>
Commit: https://github.com/plone/plone.app.multilingual/commit/16ff77ebc5463444fe5fe703fc52106485d87b19

Add tests for sitemap.xml.gz (expect to fail for now)

See https://github.com/plone/plone.app.layout/issues/91 and https://github.com/plone/plone.app.layout/pull/92
Also see #209

Files changed:
A src/plone/app/multilingual/tests/test_sitemap.py
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index a502afe..294c78f 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,6 +10,9 @@ Breaking changes:
 
 New features:
 
+- Add new tests for sitemap.xml.gz (it is currently not listing any content)
+  [djowett]
+
 - *add item here*
 
 Bug fixes:
diff --git a/src/plone/app/multilingual/tests/test_sitemap.py b/src/plone/app/multilingual/tests/test_sitemap.py
new file mode 100644
index 0000000..2021eaa
--- /dev/null
+++ b/src/plone/app/multilingual/tests/test_sitemap.py
@@ -0,0 +1,73 @@
+# -*- coding: utf-8 -*-
+from StringIO import StringIO
+from Products.CMFCore.utils import getToolByName
+from gzip import GzipFile
+from plone.app.multilingual.testing import PAM_FUNCTIONAL_TESTING
+from plone.dexterity.utils import createContentInContainer
+from zope.component import getMultiAdapter
+
+import unittest
+
+# This class largely inspired by plone/app/layout/sitemap/tests/test_sitemap.py
+class TestSitemap(unittest.TestCase):
+    layer = PAM_FUNCTIONAL_TESTING
+
+    def setUp(self):
+        self.portal = self.layer['portal']
+        self.request = self.layer['request']
+
+        self.sitemap = getMultiAdapter((self.portal, self.portal.REQUEST),
+                                       name='sitemap.xml.gz')
+        self.site_properties = getToolByName(
+            self.portal, 'portal_properties').site_properties
+        self.site_properties.manage_changeProperties(enable_sitemap=True)
+
+        createContentInContainer(
+            self.portal['en']['media'], 'Document', title=u"Test document")
+        # ^ This will be shadowed to all language independent folders
+
+        createContentInContainer(
+            self.portal['ca'], 'Document', title=u"Test document")
+
+        createContentInContainer(
+            self.portal['es'], 'Document', title=u"Test document")
+
+        createContentInContainer(
+            self.portal['en'], 'Document', title=u"Test document")
+
+    def uncompress(self, sitemapdata):
+        sio = StringIO(sitemapdata)
+        unziped = GzipFile(fileobj=sio)
+        xml = unziped.read()
+        unziped.close()
+        return xml
+
+    def test_portalroot_sitemap(self):
+        '''
+        Requests for the sitemap on portalroot return all languages
+        '''
+
+        xml = self.uncompress(self.sitemap())
+        self.assertTrue('<loc>http://nohost/plone/ca/test-document</loc>' in xml)
+        self.assertTrue('<loc>http://nohost/plone/en/test-document</loc>' in xml)
+        self.assertTrue('<loc>http://nohost/plone/es/test-document</loc>' in xml)
+
+        self.assertTrue('<loc>http://nohost/plone/ca/media/test-document</loc>' in xml)
+        self.assertTrue('<loc>http://nohost/plone/en/media/test-document</loc>' in xml)
+        self.assertTrue('<loc>http://nohost/plone/es/media/test-document</loc>' in xml)
+
+
+    def test_navroot_sitemap(self):
+        '''
+        Sitemap generated from a LanguageRootFolder (an INavigationRoot)
+        '''
+        sitemap = getMultiAdapter((self.portal.es, self.portal.REQUEST),
+                                       name='sitemap.xml.gz')
+        xml = self.uncompress(sitemap())
+        self.assertFalse('<loc>http://nohost/plone/ca/test-document</loc>' in xml)
+        self.assertFalse('<loc>http://nohost/plone/en/test-document</loc>' in xml)
+        self.assertTrue('<loc>http://nohost/plone/es/test-document</loc>' in xml)
+
+        self.assertFalse('<loc>http://nohost/plone/ca/media/test-document</loc>' in xml)
+        self.assertFalse('<loc>http://nohost/plone/en/media/test-document</loc>' in xml)
+        self.assertTrue('<loc>http://nohost/plone/es/media/test-document</loc>' in xml)


Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2016-12-19T17:42:35Z
Author: Daniel Jowett (djowett) <daniel@jowettenterprises.com>
Commit: https://github.com/plone/plone.app.multilingual/commit/71eb2fa2c21c02ca894247fba4c6e9f371b637b2

Use assertIn/assertNotIn  - easier to read (requires Python 2.7)

Files changed:
M src/plone/app/multilingual/tests/test_sitemap.py

diff --git a/src/plone/app/multilingual/tests/test_sitemap.py b/src/plone/app/multilingual/tests/test_sitemap.py
index 2021eaa..c82b683 100644
--- a/src/plone/app/multilingual/tests/test_sitemap.py
+++ b/src/plone/app/multilingual/tests/test_sitemap.py
@@ -48,13 +48,13 @@ def test_portalroot_sitemap(self):
         '''
 
         xml = self.uncompress(self.sitemap())
-        self.assertTrue('<loc>http://nohost/plone/ca/test-document</loc>' in xml)
-        self.assertTrue('<loc>http://nohost/plone/en/test-document</loc>' in xml)
-        self.assertTrue('<loc>http://nohost/plone/es/test-document</loc>' in xml)
+        self.assertIn('<loc>http://nohost/plone/ca/test-document</loc>', xml)
+        self.assertIn('<loc>http://nohost/plone/en/test-document</loc>', xml)
+        self.assertIn('<loc>http://nohost/plone/es/test-document</loc>', xml)
 
-        self.assertTrue('<loc>http://nohost/plone/ca/media/test-document</loc>' in xml)
-        self.assertTrue('<loc>http://nohost/plone/en/media/test-document</loc>' in xml)
-        self.assertTrue('<loc>http://nohost/plone/es/media/test-document</loc>' in xml)
+        self.assertIn('<loc>http://nohost/plone/ca/media/test-document</loc>', xml)
+        self.assertIn('<loc>http://nohost/plone/en/media/test-document</loc>', xml)
+        self.assertIn('<loc>http://nohost/plone/es/media/test-document</loc>', xml)
 
 
     def test_navroot_sitemap(self):
@@ -64,10 +64,10 @@ def test_navroot_sitemap(self):
         sitemap = getMultiAdapter((self.portal.es, self.portal.REQUEST),
                                        name='sitemap.xml.gz')
         xml = self.uncompress(sitemap())
-        self.assertFalse('<loc>http://nohost/plone/ca/test-document</loc>' in xml)
-        self.assertFalse('<loc>http://nohost/plone/en/test-document</loc>' in xml)
-        self.assertTrue('<loc>http://nohost/plone/es/test-document</loc>' in xml)
+        self.assertNotIn('<loc>http://nohost/plone/ca/test-document</loc>', xml)
+        self.assertNotIn('<loc>http://nohost/plone/en/test-document</loc>', xml)
+        self.assertIn('<loc>http://nohost/plone/es/test-document</loc>', xml)
 
-        self.assertFalse('<loc>http://nohost/plone/ca/media/test-document</loc>' in xml)
-        self.assertFalse('<loc>http://nohost/plone/en/media/test-document</loc>' in xml)
-        self.assertTrue('<loc>http://nohost/plone/es/media/test-document</loc>' in xml)
+        self.assertNotIn('<loc>http://nohost/plone/ca/media/test-document</loc>', xml)
+        self.assertNotIn('<loc>http://nohost/plone/en/media/test-document</loc>', xml)
+        self.assertIn('<loc>http://nohost/plone/es/media/test-document</loc>', xml)


Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2016-12-21T17:50:02Z
Author: Daniel Jowett (djowett) <daniel@jowettenterprises.com>
Commit: https://github.com/plone/plone.app.multilingual/commit/7d157d2022f142834a988816b2477ea07555ebf1

Fix tests to use registry rather than portal_properties; unpin plone.app.multilingual so we are testing this source rather than a packaged egg

Files changed:
M src/plone/app/multilingual/tests/test_sitemap.py
M test-plone-5.x.cfg

diff --git a/src/plone/app/multilingual/tests/test_sitemap.py b/src/plone/app/multilingual/tests/test_sitemap.py
index c82b683..b23f390 100644
--- a/src/plone/app/multilingual/tests/test_sitemap.py
+++ b/src/plone/app/multilingual/tests/test_sitemap.py
@@ -1,10 +1,14 @@
 # -*- coding: utf-8 -*-
 from StringIO import StringIO
-from Products.CMFCore.utils import getToolByName
 from gzip import GzipFile
+from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled
 from plone.app.multilingual.testing import PAM_FUNCTIONAL_TESTING
 from plone.dexterity.utils import createContentInContainer
+from plone.registry.interfaces import IRegistry
+from Products.CMFPlone.interfaces import ISiteSchema
 from zope.component import getMultiAdapter
+from zope.component import getUtility
+from zope.interface import alsoProvides
 
 import unittest
 
@@ -15,12 +19,14 @@ class TestSitemap(unittest.TestCase):
     def setUp(self):
         self.portal = self.layer['portal']
         self.request = self.layer['request']
+        alsoProvides(self.layer['request'], IPloneAppMultilingualInstalled)
+
+        registry = getUtility(IRegistry)
+        self.site_settings = registry.forInterface(ISiteSchema, prefix="plone")
+        self.site_settings.enable_sitemap = True
 
         self.sitemap = getMultiAdapter((self.portal, self.portal.REQUEST),
                                        name='sitemap.xml.gz')
-        self.site_properties = getToolByName(
-            self.portal, 'portal_properties').site_properties
-        self.site_properties.manage_changeProperties(enable_sitemap=True)
 
         createContentInContainer(
             self.portal['en']['media'], 'Document', title=u"Test document")
diff --git a/test-plone-5.x.cfg b/test-plone-5.x.cfg
index bb159fb..b9f2b4b 100644
--- a/test-plone-5.x.cfg
+++ b/test-plone-5.x.cfg
@@ -109,6 +109,8 @@ deprecated-aliases = True
 setuptools = >=7.0
 zc.buildout = >=2.2.5
 
+# Unpin this product so we are testing development code
+plone.app.multilingual =
 
 [sources]
 archetypes.multilingual =  git git://github.com/plone/archetypes.multilingual.git pushurl=git@github.com:plone/archetypes.multilingual.git


Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2016-12-30T14:29:51Z
Author: Daniel Jowett (djowett) <daniel@jowettenterprises.com>
Commit: https://github.com/plone/plone.app.multilingual/commit/58c7556bd2b54a9612193af7c4e9a26d1a184bb7

We shouldn't allow *everything* to fail in Travis!

Files changed:
M .travis.yml

diff --git a/.travis.yml b/.travis.yml
index a2d5a1f..747b1c4 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -18,10 +18,6 @@ env:
   - ARTIFACTS_CACHE_CONTROL=public
   - ARTIFACTS_PERMISSIONS=public-read
   - secure: "cTwAxlU9LxjLxQ8Gl4yUGKFmvsZmsAQlsRQQ3jwalnYT3ZHFlt3wxEe4u09Foj0ZTst9HWjfVc22sIHX9xiI96cS770uEjPY0Xc5jYidBGHG3FIcYpEAOcWbyF0tAfiQKTuxfR6lGIDcWzjF4Aj8dOAQ4tGBN0eg1OPUEQ9lzmY="
-matrix:
-  allow_failures:
-  - python: 2.7
-    env: PLONE_VERSION=5.0
 install:
 - sed -ie "s#test-plone-5.0.x.cfg#test-plone-$PLONE_VERSION.x.cfg#" buildout.cfg
 - python bootstrap.py --setuptools-version=8.3 --version=2.3.1


Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2016-12-30T14:29:51Z
Author: Daniel Jowett (djowett) <daniel@jowettenterprises.com>
Commit: https://github.com/plone/plone.app.multilingual/commit/389aebc2800df64648cd37545cc271e799a2f839

Update failing test - Catalan translations not currently available

Files changed:
M src/plone/app/multilingual/tests/robot/test_translate_content.robot

diff --git a/src/plone/app/multilingual/tests/robot/test_translate_content.robot b/src/plone/app/multilingual/tests/robot/test_translate_content.robot
index 87d283e..adc0eb8 100644
--- a/src/plone/app/multilingual/tests/robot/test_translate_content.robot
+++ b/src/plone/app/multilingual/tests/robot/test_translate_content.robot
@@ -56,8 +56,11 @@ I translate the document into Catalan
   Go to  ${PLONE_URL}/en/an-english-document/@@create_translation?language=ca
   Input Text  form.widgets.IDublinCore.title  A Catalan Document
   Click Link  Dates  # workaround for of TinyMCE editor field problem
-  Click Button  Guardar
-  Wait until page contains  Element creat
+  Click button  css=#form-buttons-save
+  
+  # Wait until page contains  Element creat
+  # (Catalan translations not currently available)
+
   Wait until page contains  A Catalan Document
 
 I switch to Catalan


Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2016-12-30T20:15:33Z
Author: Daniel Jowett (djowett) <daniel@jowettenterprises.com>
Commit: https://github.com/plone/plone.app.multilingual/commit/62336fc919dbdf3a373576e3ac98775062b7eacd

Require a version of plone.app.layout which contains our sitemap fix

Basically this is:
* 2.6.3+ for Plone 5.1
* 2.5.22+ for Plone 5.0

Files changed:
M setup.py
M test-plone-5.0.x.cfg

diff --git a/setup.py b/setup.py
index 9e10b6e..a10ba0c 100755
--- a/setup.py
+++ b/setup.py
@@ -37,6 +37,8 @@
     install_requires=[
         'Products.CMFPlone>=5.0b1',
         'Products.GenericSetup>=1.8.2',
+        # we want p.a.layout >= 2.5.22 on 2.5.x branch OR >= 2.6.3
+        'plone.app.layout>=2.5.22,!=2.6.0,!=2.6.1,!=2.6.2',
         'plone.app.registry',
         'plone.app.z3cform',
         'plone.behavior',
diff --git a/test-plone-5.0.x.cfg b/test-plone-5.0.x.cfg
index 53a0033..7285aa7 100644
--- a/test-plone-5.0.x.cfg
+++ b/test-plone-5.0.x.cfg
@@ -4,3 +4,7 @@ extends =
     test-plone-5.x.cfg
 
 plone-series = 5.0
+
+[versions]
+# Plone 5.0 needs a plone.app.layout release from the 2.5.x series
+plone.app.layout = 2.5.22


Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2016-12-30T20:16:55Z
Author: Daniel Jowett (djowett) <daniel@jowettenterprises.com>
Commit: https://github.com/plone/plone.app.multilingual/commit/205c0479f810a1061990880b45e70a32103ad38b

Try adding plone 5.1 to Travis tests

Files changed:
A test-plone-5.1.x.cfg
M .travis.yml

diff --git a/.travis.yml b/.travis.yml
index 747b1c4..af89d06 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -11,7 +11,8 @@ cache:
   - eggs
 env:
   matrix:
-  - PLONE_VERSION=5.0
+    - PLONE_VERSION=5.0
+    - PLONE_VERSION=5.1
   global:
   - ARTIFACTS_KEY=AKIAJP4TGKGJABPQ7YVA
   - ARTIFACTS_BUCKET=plone-app-multilingual
diff --git a/test-plone-5.1.x.cfg b/test-plone-5.1.x.cfg
new file mode 100644
index 0000000..0e6e501
--- /dev/null
+++ b/test-plone-5.1.x.cfg
@@ -0,0 +1,10 @@
+[buildout]
+extends =
+    https://raw.github.com/collective/buildout.plonetest/master/test-5.1.x.cfg
+    test-plone-5.x.cfg
+
+plone-series = 5.1
+
+[versions]
+# Plone 5.1 needs a plone.app.layout release from the 2.6.x series
+plone.app.layout = 2.6.3


Repository: plone.app.multilingual


Branch: refs/heads/master
Date: 2017-01-03T17:47:20+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.multilingual/commit/737910b122e7ac638b7b0b8108a29d8695994bef

Merge pull request #255 from plone/master_issue_91-sitemap.xml.gz

Fix sitemap.xml.gz in master (issue #209)

Files changed:
A src/plone/app/multilingual/tests/test_sitemap.py
A test-plone-5.1.x.cfg
M .travis.yml
M CHANGES.rst
M setup.py
M src/plone/app/multilingual/tests/robot/test_translate_content.robot
M test-plone-5.0.x.cfg
M test-plone-5.x.cfg

diff --git a/.travis.yml b/.travis.yml
index a2d5a1f..af89d06 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -11,17 +11,14 @@ cache:
   - eggs
 env:
   matrix:
-  - PLONE_VERSION=5.0
+    - PLONE_VERSION=5.0
+    - PLONE_VERSION=5.1
   global:
   - ARTIFACTS_KEY=AKIAJP4TGKGJABPQ7YVA
   - ARTIFACTS_BUCKET=plone-app-multilingual
   - ARTIFACTS_CACHE_CONTROL=public
   - ARTIFACTS_PERMISSIONS=public-read
   - secure: "cTwAxlU9LxjLxQ8Gl4yUGKFmvsZmsAQlsRQQ3jwalnYT3ZHFlt3wxEe4u09Foj0ZTst9HWjfVc22sIHX9xiI96cS770uEjPY0Xc5jYidBGHG3FIcYpEAOcWbyF0tAfiQKTuxfR6lGIDcWzjF4Aj8dOAQ4tGBN0eg1OPUEQ9lzmY="
-matrix:
-  allow_failures:
-  - python: 2.7
-    env: PLONE_VERSION=5.0
 install:
 - sed -ie "s#test-plone-5.0.x.cfg#test-plone-$PLONE_VERSION.x.cfg#" buildout.cfg
 - python bootstrap.py --setuptools-version=8.3 --version=2.3.1
diff --git a/CHANGES.rst b/CHANGES.rst
index 6345821..7334614 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,6 +10,9 @@ Breaking changes:
 
 New features:
 
+- Add new tests for sitemap.xml.gz (it is currently not listing any content)
+  [djowett]
+
 - *add item here*
 
 Bug fixes:
diff --git a/setup.py b/setup.py
index 05445cc..b86afc3 100755
--- a/setup.py
+++ b/setup.py
@@ -37,6 +37,8 @@
     install_requires=[
         'Products.CMFPlone>=5.0b1',
         'Products.GenericSetup>=1.8.2',
+        # we want p.a.layout >= 2.5.22 on 2.5.x branch OR >= 2.6.3
+        'plone.app.layout>=2.5.22,!=2.6.0,!=2.6.1,!=2.6.2',
         'plone.app.registry',
         'plone.app.z3cform',
         'plone.behavior',
diff --git a/src/plone/app/multilingual/tests/robot/test_translate_content.robot b/src/plone/app/multilingual/tests/robot/test_translate_content.robot
index 87d283e..adc0eb8 100644
--- a/src/plone/app/multilingual/tests/robot/test_translate_content.robot
+++ b/src/plone/app/multilingual/tests/robot/test_translate_content.robot
@@ -56,8 +56,11 @@ I translate the document into Catalan
   Go to  ${PLONE_URL}/en/an-english-document/@@create_translation?language=ca
   Input Text  form.widgets.IDublinCore.title  A Catalan Document
   Click Link  Dates  # workaround for of TinyMCE editor field problem
-  Click Button  Guardar
-  Wait until page contains  Element creat
+  Click button  css=#form-buttons-save
+  
+  # Wait until page contains  Element creat
+  # (Catalan translations not currently available)
+
   Wait until page contains  A Catalan Document
 
 I switch to Catalan
diff --git a/src/plone/app/multilingual/tests/test_sitemap.py b/src/plone/app/multilingual/tests/test_sitemap.py
new file mode 100644
index 0000000..b23f390
--- /dev/null
+++ b/src/plone/app/multilingual/tests/test_sitemap.py
@@ -0,0 +1,79 @@
+# -*- coding: utf-8 -*-
+from StringIO import StringIO
+from gzip import GzipFile
+from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled
+from plone.app.multilingual.testing import PAM_FUNCTIONAL_TESTING
+from plone.dexterity.utils import createContentInContainer
+from plone.registry.interfaces import IRegistry
+from Products.CMFPlone.interfaces import ISiteSchema
+from zope.component import getMultiAdapter
+from zope.component import getUtility
+from zope.interface import alsoProvides
+
+import unittest
+
+# This class largely inspired by plone/app/layout/sitemap/tests/test_sitemap.py
+class TestSitemap(unittest.TestCase):
+    layer = PAM_FUNCTIONAL_TESTING
+
+    def setUp(self):
+        self.portal = self.layer['portal']
+        self.request = self.layer['request']
+        alsoProvides(self.layer['request'], IPloneAppMultilingualInstalled)
+
+        registry = getUtility(IRegistry)
+        self.site_settings = registry.forInterface(ISiteSchema, prefix="plone")
+        self.site_settings.enable_sitemap = True
+
+        self.sitemap = getMultiAdapter((self.portal, self.portal.REQUEST),
+                                       name='sitemap.xml.gz')
+
+        createContentInContainer(
+            self.portal['en']['media'], 'Document', title=u"Test document")
+        # ^ This will be shadowed to all language independent folders
+
+        createContentInContainer(
+            self.portal['ca'], 'Document', title=u"Test document")
+
+        createContentInContainer(
+            self.portal['es'], 'Document', title=u"Test document")
+
+        createContentInContainer(
+            self.portal['en'], 'Document', title=u"Test document")
+
+    def uncompress(self, sitemapdata):
+        sio = StringIO(sitemapdata)
+        unziped = GzipFile(fileobj=sio)
+        xml = unziped.read()
+        unziped.close()
+        return xml
+
+    def test_portalroot_sitemap(self):
+        '''
+        Requests for the sitemap on portalroot return all languages
+        '''
+
+        xml = self.uncompress(self.sitemap())
+        self.assertIn('<loc>http://nohost/plone/ca/test-document</loc>', xml)
+        self.assertIn('<loc>http://nohost/plone/en/test-document</loc>', xml)
+        self.assertIn('<loc>http://nohost/plone/es/test-document</loc>', xml)
+
+        self.assertIn('<loc>http://nohost/plone/ca/media/test-document</loc>', xml)
+        self.assertIn('<loc>http://nohost/plone/en/media/test-document</loc>', xml)
+        self.assertIn('<loc>http://nohost/plone/es/media/test-document</loc>', xml)
+
+
+    def test_navroot_sitemap(self):
+        '''
+        Sitemap generated from a LanguageRootFolder (an INavigationRoot)
+        '''
+        sitemap = getMultiAdapter((self.portal.es, self.portal.REQUEST),
+                                       name='sitemap.xml.gz')
+        xml = self.uncompress(sitemap())
+        self.assertNotIn('<loc>http://nohost/plone/ca/test-document</loc>', xml)
+        self.assertNotIn('<loc>http://nohost/plone/en/test-document</loc>', xml)
+        self.assertIn('<loc>http://nohost/plone/es/test-document</loc>', xml)
+
+        self.assertNotIn('<loc>http://nohost/plone/ca/media/test-document</loc>', xml)
+        self.assertNotIn('<loc>http://nohost/plone/en/media/test-document</loc>', xml)
+        self.assertIn('<loc>http://nohost/plone/es/media/test-document</loc>', xml)
diff --git a/test-plone-5.0.x.cfg b/test-plone-5.0.x.cfg
index 53a0033..7285aa7 100644
--- a/test-plone-5.0.x.cfg
+++ b/test-plone-5.0.x.cfg
@@ -4,3 +4,7 @@ extends =
     test-plone-5.x.cfg
 
 plone-series = 5.0
+
+[versions]
+# Plone 5.0 needs a plone.app.layout release from the 2.5.x series
+plone.app.layout = 2.5.22
diff --git a/test-plone-5.1.x.cfg b/test-plone-5.1.x.cfg
new file mode 100644
index 0000000..0e6e501
--- /dev/null
+++ b/test-plone-5.1.x.cfg
@@ -0,0 +1,10 @@
+[buildout]
+extends =
+    https://raw.github.com/collective/buildout.plonetest/master/test-5.1.x.cfg
+    test-plone-5.x.cfg
+
+plone-series = 5.1
+
+[versions]
+# Plone 5.1 needs a plone.app.layout release from the 2.6.x series
+plone.app.layout = 2.6.3
diff --git a/test-plone-5.x.cfg b/test-plone-5.x.cfg
index bb159fb..b9f2b4b 100644
--- a/test-plone-5.x.cfg
+++ b/test-plone-5.x.cfg
@@ -109,6 +109,8 @@ deprecated-aliases = True
 setuptools = >=7.0
 zc.buildout = >=2.2.5
 
+# Unpin this product so we are testing development code
+plone.app.multilingual =
 
 [sources]
 archetypes.multilingual =  git git://github.com/plone/archetypes.multilingual.git pushurl=git@github.com:plone/archetypes.multilingual.git


