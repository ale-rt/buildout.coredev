Repository: plone.folder


Branch: refs/heads/master
Date: 2016-07-05T23:15:44+02:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.folder/commit/b5c0194089982375083c516514383f4425939927

Use zope.interface decorator

This not only makes code more pleasent to read,
but also makes the code python 3 compatible
(while maintaining python 2 compatibility).

Files changed:
M CHANGES.rst
M src/plone/folder/partial.py
M src/plone/folder/tests/test_integration.py
M src/plone/folder/tests/test_partialordering.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 8056e77..0e746ab 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -15,7 +15,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 1.0.8 (2016-04-26)
diff --git a/src/plone/folder/partial.py b/src/plone/folder/partial.py
index a77b75e..dd606d6 100644
--- a/src/plone/folder/partial.py
+++ b/src/plone/folder/partial.py
@@ -1,5 +1,5 @@
 from Acquisition import aq_base
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import adapts
 from zope.container.contained import notifyContainerModified
 
@@ -10,11 +10,11 @@
 ORDER_ATTR = '_objectordering'
 
 
+@implementer(IExplicitOrdering)
 class PartialOrdering(object):
     """ this implementation uses a list ot store order information on a
         regular attribute of the folderish object;  explicit ordering
         is supported """
-    implements(IExplicitOrdering)
     adapts(IOrderableFolder)
 
     def __init__(self, context):
diff --git a/src/plone/folder/tests/test_integration.py b/src/plone/folder/tests/test_integration.py
index d6bb697..2a15e71 100644
--- a/src/plone/folder/tests/test_integration.py
+++ b/src/plone/folder/tests/test_integration.py
@@ -5,14 +5,14 @@
 from plone.folder.testing import PLONEFOLDER_FUNCTIONAL_TESTING
 from StringIO import StringIO
 from transaction import savepoint
-from zope.interface import implements
+from zope.interface import implementer
 
 import unittest
 
 
+@implementer(IOrderable)
 class DummyFolder(OrderedBTreeFolderBase, Implicit):
     """ we need to mix in acquisition """
-    implements(IOrderable)
 
     meta_type = 'DummyFolder'
 
diff --git a/src/plone/folder/tests/test_partialordering.py b/src/plone/folder/tests/test_partialordering.py
index 4e54d85..e4e26e6 100644
--- a/src/plone/folder/tests/test_partialordering.py
+++ b/src/plone/folder/tests/test_partialordering.py
@@ -1,6 +1,6 @@
 from transaction import savepoint
 from Acquisition import Implicit
-from zope.interface import implements
+from zope.interface import implementer
 from plone.folder.interfaces import IOrderable
 from plone.folder.ordered import OrderedBTreeFolderBase
 from plone.folder.partial import PartialOrdering
@@ -189,9 +189,9 @@ def testGetObjectPosition(self):
         ))
 
 
+@implementer(IOrderable)
 class DummyFolder(OrderedBTreeFolderBase, Implicit):
     """ we need to mix in acquisition """
-    implements(IOrderable)
 
     meta_type = 'DummyFolder'
     _ordering = u'partial'


Repository: plone.folder


Branch: refs/heads/master
Date: 2016-07-07T00:51:47+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.folder/commit/ea3835fb2c7268cf0ffb184545473c88ba8a12f5

Merge pull request #4 from plone/gforcada-use-zope-decorators

Use zope.interface decorator

Files changed:
M CHANGES.rst
M src/plone/folder/partial.py
M src/plone/folder/tests/test_integration.py
M src/plone/folder/tests/test_partialordering.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 8056e77..0e746ab 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -15,7 +15,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 1.0.8 (2016-04-26)
diff --git a/src/plone/folder/partial.py b/src/plone/folder/partial.py
index a77b75e..dd606d6 100644
--- a/src/plone/folder/partial.py
+++ b/src/plone/folder/partial.py
@@ -1,5 +1,5 @@
 from Acquisition import aq_base
-from zope.interface import implements
+from zope.interface import implementer
 from zope.component import adapts
 from zope.container.contained import notifyContainerModified
 
@@ -10,11 +10,11 @@
 ORDER_ATTR = '_objectordering'
 
 
+@implementer(IExplicitOrdering)
 class PartialOrdering(object):
     """ this implementation uses a list ot store order information on a
         regular attribute of the folderish object;  explicit ordering
         is supported """
-    implements(IExplicitOrdering)
     adapts(IOrderableFolder)
 
     def __init__(self, context):
diff --git a/src/plone/folder/tests/test_integration.py b/src/plone/folder/tests/test_integration.py
index d6bb697..2a15e71 100644
--- a/src/plone/folder/tests/test_integration.py
+++ b/src/plone/folder/tests/test_integration.py
@@ -5,14 +5,14 @@
 from plone.folder.testing import PLONEFOLDER_FUNCTIONAL_TESTING
 from StringIO import StringIO
 from transaction import savepoint
-from zope.interface import implements
+from zope.interface import implementer
 
 import unittest
 
 
+@implementer(IOrderable)
 class DummyFolder(OrderedBTreeFolderBase, Implicit):
     """ we need to mix in acquisition """
-    implements(IOrderable)
 
     meta_type = 'DummyFolder'
 
diff --git a/src/plone/folder/tests/test_partialordering.py b/src/plone/folder/tests/test_partialordering.py
index 4e54d85..e4e26e6 100644
--- a/src/plone/folder/tests/test_partialordering.py
+++ b/src/plone/folder/tests/test_partialordering.py
@@ -1,6 +1,6 @@
 from transaction import savepoint
 from Acquisition import Implicit
-from zope.interface import implements
+from zope.interface import implementer
 from plone.folder.interfaces import IOrderable
 from plone.folder.ordered import OrderedBTreeFolderBase
 from plone.folder.partial import PartialOrdering
@@ -189,9 +189,9 @@ def testGetObjectPosition(self):
         ))
 
 
+@implementer(IOrderable)
 class DummyFolder(OrderedBTreeFolderBase, Implicit):
     """ we need to mix in acquisition """
-    implements(IOrderable)
 
     meta_type = 'DummyFolder'
     _ordering = u'partial'


