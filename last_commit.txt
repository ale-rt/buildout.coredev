Repository: Products.ATContentTypes


Branch: refs/heads/2.1.x
Date: 2015-12-13T23:47:12+01:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/Products.ATContentTypes/commit/a98f6dca02f878d967ebb2c0ae158233bb50f615

Revert "Merge branch 'csrffixes' into 2.1.x"

This reverts commit 9732ec48e9151cd649e403980b6dbca027e82c4e, reversing
changes made to 4bf9d174bf2459c7594dc35076ec615edc695d19.

Files changed:
M CHANGES.rst
M Products/ATContentTypes/tests/atctftestcase.py
M Products/ATContentTypes/tests/editing.txt
M Products/ATContentTypes/tests/portaltype_criterion.txt
M Products/ATContentTypes/tests/test_atdocument.py
M Products/ATContentTypes/tests/test_atfolder.py
M Products/ATContentTypes/tests/uploading.txt

diff --git a/CHANGES.rst b/CHANGES.rst
index eafa3d1..df96f8b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,8 +4,7 @@ Changelog
 2.1.18 (unreleased)
 -------------------
 
-- Backport CSRF fixes.
-  [vangheem] [gforcada]
+- Nothing changed yet.
 
 
 2.1.17 (2015-09-28)
diff --git a/Products/ATContentTypes/tests/atctftestcase.py b/Products/ATContentTypes/tests/atctftestcase.py
index 49894c2..7d3861a 100644
--- a/Products/ATContentTypes/tests/atctftestcase.py
+++ b/Products/ATContentTypes/tests/atctftestcase.py
@@ -1,6 +1,3 @@
-from zope.component import getUtility
-from plone.keyring.interfaces import IKeyManager
-
 from Products.ATContentTypes.tests import atcttestcase
 
 from Products.CMFCore.utils import getToolByName
@@ -10,12 +7,6 @@
 
 from Products.ATContentTypes.config import HAS_LINGUA_PLONE
 
-import hmac
-try:
-    from hashlib import sha1 as sha
-except ImportError:
-    import sha
-
 
 class IntegrationTestCase(atcttestcase.ATCTFunctionalSiteTestCase):
 
@@ -42,16 +33,6 @@ def setupTestObject(self):
         self.obj_url = self.obj.absolute_url()
         self.obj_path = '/%s' % self.obj.absolute_url(1)
 
-    def getAuthToken(self, user=default_user):
-        manager = getUtility(IKeyManager)
-        try:
-            ring = manager[u"_forms"]
-        except KeyError:
-            ring = manager[u'_system']
-
-        secret = ring.random()
-        return hmac.new(secret, user, sha).hexdigest()
-
 
 class ATCTIntegrationTestCase(IntegrationTestCase):
     """Integration tests for view and edit templates
@@ -70,11 +51,9 @@ def setupTestObject(self):
 
     def test_createObject(self):
         # create an object using the createObject script
-        auth = self.getAuthToken()
-        response = self.publish(
-            '%s/createObject?type_name=%s&_authenticator=%s' % (
-                self.folder_path, self.portal_type, auth),
-            self.basic_auth)
+        response = self.publish(self.folder_path +
+                                '/createObject?type_name=%s' % self.portal_type,
+                                self.basic_auth)
 
         self.assertEqual(response.getStatus(), 302)  # Redirect to edit
 
@@ -82,7 +61,7 @@ def test_createObject(self):
 
         self.assertTrue(body.startswith(self.folder_url), body)
         # The url may end with /edit or /atct_edit depending on method aliases
-        self.assertTrue('edit' in body, body)
+        self.assertTrue(body.endswith('edit'), body)
 
         # Perform the redirect
         edit_form_path = body[len(self.app.REQUEST.SERVER_URL):]
@@ -99,10 +78,7 @@ def check_newly_created(self):
 
     def test_edit_view(self):
         # edit should work
-        response = self.publish(
-            '%s/atct_edit?_authenticator=%s' % (
-                self.obj_path, self.getAuthToken()),
-            self.basic_auth)
+        response = self.publish('%s/atct_edit' % self.obj_path, self.basic_auth)
         self.assertEqual(response.getStatus(), 200)  # OK
 
     def test_base_view(self):
diff --git a/Products/ATContentTypes/tests/editing.txt b/Products/ATContentTypes/tests/editing.txt
index c604966..2baa469 100644
--- a/Products/ATContentTypes/tests/editing.txt
+++ b/Products/ATContentTypes/tests/editing.txt
@@ -37,8 +37,7 @@ We'll try and set the title (a required field) to the empty string:
   
   >>> document.Schema().getField('title').required
   1
-  >>> browser.open(url)
-  >>> browser.getLink('Edit').click()
+  >>> browser.open(url+'/edit')
   >>> browser.getControl('Title').value = ''
   >>> browser.getControl('Save').click()
 
@@ -57,8 +56,7 @@ we want to make sure all of them are validated.
 
   >>> document.Schema().getField('title').schemata
   'categorization'
-  >>> browser.open(url)
-  >>> browser.getLink('Edit').click()
+  >>> browser.open(url+'/edit')
   >>> browser.getControl('Title').value = ''
   >>> browser.getControl('Save').click()
   >>> document.title_or_id()
@@ -72,8 +70,7 @@ Buttons name verification
 
 Let's verify that the buttons have the correct name:
   
-  >>> browser.open(url)
-  >>> browser.getLink('Edit').click()
+  >>> browser.open(url+'/edit')
   >>> browser.getControl('Save').name
   'form.button.save'
   
@@ -98,8 +95,7 @@ and change the schemata of one of its fields
   >>> document.Schema().getField('text').schemata
   'someschemata'
   
-  >>> browser.open(url)
-  >>> browser.getLink('Edit').click()
+  >>> browser.open(url+'/edit')
   >>> browser.getControl('Next').name
   'form.button.next'
   
diff --git a/Products/ATContentTypes/tests/portaltype_criterion.txt b/Products/ATContentTypes/tests/portaltype_criterion.txt
index 1f86447..8056f99 100644
--- a/Products/ATContentTypes/tests/portaltype_criterion.txt
+++ b/Products/ATContentTypes/tests/portaltype_criterion.txt
@@ -52,7 +52,7 @@ We edit the criteria:
 
     >>> browser.getLink('Criteria').click()
     >>> browser.url
-    'http://nohost/plone/my-collection/criterion_edit_form?_auth...'
+    'http://nohost/plone/my-collection/criterion_edit_form'
     >>> 'Add New Search Criteria' in browser.contents
     True
 
@@ -103,7 +103,7 @@ We now view the collection.
 
     >>> browser.getLink('View').click()
     >>> browser.url
-    'http://nohost/plone/my-collection/?_auth...'
+    'http://nohost/plone/my-collection/'
 
 The test document should be in the collection.
 
diff --git a/Products/ATContentTypes/tests/test_atdocument.py b/Products/ATContentTypes/tests/test_atdocument.py
index 8a220ae..c943e7c 100644
--- a/Products/ATContentTypes/tests/test_atdocument.py
+++ b/Products/ATContentTypes/tests/test_atdocument.py
@@ -275,17 +275,16 @@ class TestATDocumentFunctional(atctftestcase.ATCTIntegrationTestCase):
     def test_id_change_on_initial_edit(self):
         """Make sure Id is taken from title on initial edit and not otherwise"""
         # first create an object using the createObject script
-        auth = self.getAuthToken()
-        response = self.publish(
-            '%s/createObject?type_name=%s&_authenticator=%s' % (
-                self.folder_path, self.portal_type, auth),
-            self.basic_auth)
+
+        response = self.publish(self.folder_path +
+                                '/createObject?type_name=%s' % self.portal_type,
+                                self.basic_auth)
 
         self.assertEqual(response.getStatus(), 302)  # Redirect to edit
 
         location = response.getHeader('Location')
         self.assertTrue(location.startswith(self.folder_url), location)
-        self.assertTrue('edit' in location, location)
+        self.assertTrue(location.endswith('edit'), location)
 
         # Perform the redirect
         edit_form_path = location[len(self.app.REQUEST.SERVER_URL):]
@@ -300,12 +299,12 @@ def test_id_change_on_initial_edit(self):
         new_obj_path = '/%s' % new_obj.absolute_url(1)
         self.assertEqual(new_obj.checkCreationFlag(), True)  # object is not yet edited
 
-        response = self.publish('%s/atct_edit?form.submitted=1&title=%s&text=Blank&_authenticator=%s' % (new_obj_path, obj_title, auth), self.basic_auth)  # Edit object
+        response = self.publish('%s/atct_edit?form.submitted=1&title=%s&text=Blank' % (new_obj_path, obj_title,), self.basic_auth)  # Edit object
         self.assertEqual(response.getStatus(), 302)  # OK
         self.assertEqual(new_obj.getId(), new_id)  # does id match
         self.assertEqual(new_obj.checkCreationFlag(), False)  # object is fully created
         new_title = "Second Title"
-        response = self.publish('%s/atct_edit?form.submitted=1&title=%s&text=Blank&_authenticator=%s' % ('/%s' % new_obj.absolute_url(1), new_title, auth), self.basic_auth)  # Edit object
+        response = self.publish('%s/atct_edit?form.submitted=1&title=%s&text=Blank' % ('/%s' % new_obj.absolute_url(1), new_title,), self.basic_auth)  # Edit object
         self.assertEqual(response.getStatus(), 302)  # OK
         self.assertEqual(new_obj.getId(), new_id)  # id shouldn't have changed
 
diff --git a/Products/ATContentTypes/tests/test_atfolder.py b/Products/ATContentTypes/tests/test_atfolder.py
index 2d03905..3b19ff3 100644
--- a/Products/ATContentTypes/tests/test_atfolder.py
+++ b/Products/ATContentTypes/tests/test_atfolder.py
@@ -9,7 +9,6 @@
 from OFS.interfaces import IOrderedContainer as IOrderedContainer
 from Products.ATContentTypes.interfaces import IATFolder
 from Products.ATContentTypes.interfaces import IATBTreeFolder
-from Products.PloneTestCase.setup import portal_owner
 
 from zope.interface.verify import verifyObject
 from Products.ATContentTypes.interfaces import ISelectableConstrainTypes
@@ -176,10 +175,9 @@ def test_dynamic_view_without_view(self):
 
     def test_selectViewTemplate(self):
         # create an object using the createObject script
-        self.publish(
-            '%s/selectViewTemplate?templateId=atct_album_view&_authenticator=%s' % (
-                self.obj_path, self.getAuthToken(portal_owner)),
-            self.owner_auth)
+        self.publish(self.obj_path +
+                     '/selectViewTemplate?templateId=atct_album_view',
+                     self.owner_auth)
         self.assertEqual(self.obj.getLayout(), 'atct_album_view')
 
 tests.append(TestATFolderFunctional)
diff --git a/Products/ATContentTypes/tests/uploading.txt b/Products/ATContentTypes/tests/uploading.txt
index e410db9..d76b1b9 100644
--- a/Products/ATContentTypes/tests/uploading.txt
+++ b/Products/ATContentTypes/tests/uploading.txt
@@ -75,7 +75,7 @@ Now try to empty value of the text field (#7324)
 
     >>> browser.getLink('Edit').click()
     >>> browser.url
-    'http://nohost/plone/test-collection/edit?_auth...'
+    'http://nohost/plone/test-collection/edit'
     >>> browser.getControl(name='text').value = ''
     >>> browser.getControl('Save').click()
     >>> 'file contents' in browser.contents


