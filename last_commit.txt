Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2016-02-29T15:54:32+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.upgrade/commit/d459830c5cb8f9eb4b1385b86c3a430595ae3f35

registry upgrades (less variables)

Files changed:
M CHANGES.rst
M plone/app/upgrade/v50/final.py
M plone/app/upgrade/v50/profiles/to_503/registry.xml
M plone/app/upgrade/v50/tests.py

diff --git a/CHANGES.rst b/CHANGES.rst
index a025590..68c740b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -6,7 +6,8 @@ Changelog
 
 New:
 
-- *add item here*
+- Registry upgrades (less variables).
+  [jensens]
 
 Fixes:
 
diff --git a/plone/app/upgrade/v50/final.py b/plone/app/upgrade/v50/final.py
index 55e8afc..759052d 100644
--- a/plone/app/upgrade/v50/final.py
+++ b/plone/app/upgrade/v50/final.py
@@ -3,8 +3,11 @@
 from plone.registry.interfaces import IRegistry
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.utils import safe_unicode
+from Products.ResourceRegistries.interfaces.settings import \
+    IResourceRegistriesSettings
 from zope.component import getUtility
 from zope.component.hooks import getSite
+
 import logging
 
 
@@ -92,6 +95,27 @@ def to502(context):
     loadMigrationProfile(context, 'profile-plone.app.querystring:upgrade_to_5')
 
 
+def _fix_typo_in_toolbar_less_variable(context):
+    registry = getUtility(IRegistry)
+    rreg = registry.forInterface(
+        IResourceRegistriesSettings,
+        prefix='plone'
+    )
+    _marker = list()
+    value = rreg.lessvariables.get('plone-toolbar-font-secundary', _marker)
+    if (value == _marker):
+        return
+    if 'plone-toolbar-font-secondary' in rreg.lessvariables:
+        logger.warn(
+            'Try to migrate registry value "plone-toolbar-font-secundary" to '
+            '"plone-toolbar-font-secundary", but latter already exists. '
+            'Migration to fix the typo is not executed.'
+        )
+        rreg.lessvariables['plone-toolbar-font-secondary'] = value
+        del rreg.lessvariables['plone-toolbar-font-secundary']
+
+
 def to503(context):
     """5.0.2 -> 5.0.3"""
     loadMigrationProfile(context, 'profile-plone.app.upgrade.v50:to503')
+    _fix_typo_in_toolbar_less_variable(context)
diff --git a/plone/app/upgrade/v50/profiles/to_503/registry.xml b/plone/app/upgrade/v50/profiles/to_503/registry.xml
index 6b8dcea..fcaa573 100644
--- a/plone/app/upgrade/v50/profiles/to_503/registry.xml
+++ b/plone/app/upgrade/v50/profiles/to_503/registry.xml
@@ -12,4 +12,8 @@
             interface='Products.CMFPlone.interfaces.IBundleRegistry'>
     <value key="last_compilation">2015-02-16 00:00:00</value>
   </records>
+  <records prefix="plone.lessvariables"
+            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
+    <value key="plone-toolbar-submenu-width">180px</value>
+  </records>
 </registry>
diff --git a/plone/app/upgrade/v50/tests.py b/plone/app/upgrade/v50/tests.py
index 3fd73aa..d95408c 100644
--- a/plone/app/upgrade/v50/tests.py
+++ b/plone/app/upgrade/v50/tests.py
@@ -89,6 +89,33 @@ def test_migrate_members_default_layout(self):
         self.assertIsNone(members.get('index_html', None))
         self.assertEqual(members.getLayout(), '@@member-search')
 
+    def test_migrate_less_variabl_typo(self):
+        from plone.app.upgrade.v50.final import \
+            _fix_typo_in_toolbar_less_variable
+        from plone.registry.interfaces import IRegistry
+        registry = getUtility(IRegistry)
+        from Products.ResourceRegistries.interfaces.settings import \
+            IResourceRegistriesSettings
+        rreg = registry.forInterface(
+            IResourceRegistriesSettings,
+            prefix='plone'
+        )
+
+        # set to a defined state
+        rreg.lessvariables['plone-toolbar-font-secundary'] = "Foo"
+        if 'plone-toolbar-font-secondary' in rreg.lessvariables:
+            del rreg.lessvariables['plone-toolbar-font-secondary']
+
+        # start testing
+        _fix_typo_in_toolbar_less_variable(self.portal)
+        self.assertEqual(
+            rreg.lessvariables['plone-toolbar-font-secondary'],
+            'Foo',
+        )
+        self.assertTrue(
+            'plone-toolbar-font-secundary' not in rreg.lessvariables
+        )
+
 
 class TestFunctionalMigrations(unittest.TestCase):
     """Run an upgrade from a real Plone 4.0 ZEXP dump.


Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2016-02-29T18:26:46+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.upgrade/commit/7f44347b908e4b16556c6bbf6246e1162ce63980

fix typo in msg for typo to typo

Files changed:
M plone/app/upgrade/v50/final.py

diff --git a/plone/app/upgrade/v50/final.py b/plone/app/upgrade/v50/final.py
index 759052d..0b197c4 100644
--- a/plone/app/upgrade/v50/final.py
+++ b/plone/app/upgrade/v50/final.py
@@ -108,7 +108,7 @@ def _fix_typo_in_toolbar_less_variable(context):
     if 'plone-toolbar-font-secondary' in rreg.lessvariables:
         logger.warn(
             'Try to migrate registry value "plone-toolbar-font-secundary" to '
-            '"plone-toolbar-font-secundary", but latter already exists. '
+            '"plone-toolbar-font-secondary", but latter already exists. '
             'Migration to fix the typo is not executed.'
         )
         rreg.lessvariables['plone-toolbar-font-secondary'] = value


Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2016-02-29T21:54:24+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.upgrade/commit/713eafc45961a36e500b8a863f66fbcfe0af4e14

wrong indent, thx @mauritsvanrees for review

Files changed:
M plone/app/upgrade/v50/final.py

diff --git a/plone/app/upgrade/v50/final.py b/plone/app/upgrade/v50/final.py
index 0b197c4..a4a8b8e 100644
--- a/plone/app/upgrade/v50/final.py
+++ b/plone/app/upgrade/v50/final.py
@@ -111,8 +111,9 @@ def _fix_typo_in_toolbar_less_variable(context):
             '"plone-toolbar-font-secondary", but latter already exists. '
             'Migration to fix the typo is not executed.'
         )
-        rreg.lessvariables['plone-toolbar-font-secondary'] = value
-        del rreg.lessvariables['plone-toolbar-font-secundary']
+        return
+    rreg.lessvariables['plone-toolbar-font-secondary'] = value
+    del rreg.lessvariables['plone-toolbar-font-secundary']
 
 
 def to503(context):


Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2016-03-01T16:52:11+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.upgrade/commit/06b32e46f82ba5a138973d65ad0bea3cee778120

fix interface and notation, own test base

Files changed:
M plone/app/upgrade/tests/base.py
M plone/app/upgrade/v50/final.py
M plone/app/upgrade/v50/profiles/to_503/registry.xml
M plone/app/upgrade/v50/tests.py

diff --git a/plone/app/upgrade/tests/base.py b/plone/app/upgrade/tests/base.py
index c17c50f..b403e32 100644
--- a/plone/app/upgrade/tests/base.py
+++ b/plone/app/upgrade/tests/base.py
@@ -1,50 +1,54 @@
-#
-# Base TestCase for upgrades
-#
-
+# -*- coding: utf-8 -*-
 from os.path import abspath
 from os.path import dirname
 from os.path import join
-
-import transaction
-from zope.site.hooks import setSite
-
-from Testing.ZopeTestCase.sandbox import Sandboxed
 from plone.app.testing.bbb import PloneTestCase
-
 from Products.CMFCore.interfaces import IActionCategory
 from Products.CMFCore.interfaces import IActionInfo
-from Products.CMFCore.utils import getToolByName
 from Products.CMFCore.tests.base.testcase import WarningInterceptor
+from Products.CMFCore.utils import getToolByName
 from Products.GenericSetup.context import TarballImportContext
+from zope.site.hooks import setSite
 
-from Products.Five import zcml
+import transaction
 
+#
+# Base TestCase for upgrades
+#
 
 
 class MigrationTest(PloneTestCase):
 
-    def removeActionFromTool(self, action_id, category=None, action_provider='portal_actions'):
+    def removeActionFromTool(
+        self,
+        action_id,
+        category=None,
+        action_provider='portal_actions'
+    ):
         # Removes an action from portal_actions
         tool = getToolByName(self.portal, action_provider)
         if category is None:
-            if action_id in tool.objectIds() and IActionInfo.providedBy(tool._getOb(action_id)):
+            if action_id in tool.objectIds() and \
+               IActionInfo.providedBy(tool._getOb(action_id)):
                 tool._delOb(action_id)
-        else:
-            if category in tool.objectIds() and IActionCategory.providedBy(tool._getOb(category)):
-                if action_id in tool.objectIds() and IActionInfo.providedBy(tool._getOb(action_id)):
-                    tool._delOb(action_id)
+        elif (
+            category in tool.objectIds() and
+            IActionCategory.providedBy(tool._getOb(category)) and
+            action_id in tool.objectIds() and
+            IActionInfo.providedBy(tool._getOb(action_id))
+        ):
+            tool._delOb(action_id)
 
     def addResourceToJSTool(self, resource_name):
         # Registers a resource with the javascripts tool
         tool = getToolByName(self.portal, 'portal_javascripts')
-        if not resource_name in tool.getResourceIds():
+        if resource_name not in tool.getResourceIds():
             tool.registerScript(resource_name)
 
     def addResourceToCSSTool(self, resource_name):
         # Registers a resource with the css tool
         tool = getToolByName(self.portal, 'portal_css')
-        if not resource_name in tool.getResourceIds():
+        if resource_name not in tool.getResourceIds():
             tool.registerStylesheet(resource_name)
 
     def removeSiteProperty(self, property_id):
@@ -110,7 +114,6 @@ def removeSkinLayer(self, layer, skin='Plone Default'):
             skins.addSkinSelection(skin, ','.join(path))
 
 
-
 class FunctionalUpgradeTestCase(PloneTestCase, WarningInterceptor):
 
     _setup_fixture = 0
diff --git a/plone/app/upgrade/v50/final.py b/plone/app/upgrade/v50/final.py
index a4a8b8e..4bcfdcf 100644
--- a/plone/app/upgrade/v50/final.py
+++ b/plone/app/upgrade/v50/final.py
@@ -3,8 +3,6 @@
 from plone.registry.interfaces import IRegistry
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.utils import safe_unicode
-from Products.ResourceRegistries.interfaces.settings import \
-    IResourceRegistriesSettings
 from zope.component import getUtility
 from zope.component.hooks import getSite
 
@@ -97,23 +95,21 @@ def to502(context):
 
 def _fix_typo_in_toolbar_less_variable(context):
     registry = getUtility(IRegistry)
-    rreg = registry.forInterface(
-        IResourceRegistriesSettings,
-        prefix='plone'
-    )
     _marker = list()
-    value = rreg.lessvariables.get('plone-toolbar-font-secundary', _marker)
+
+    plv = 'plone.lessvariables'
+    value = registry[plv].get('plone-toolbar-font-secundary', _marker)
     if (value == _marker):
         return
-    if 'plone-toolbar-font-secondary' in rreg.lessvariables:
+    if 'plone-toolbar-font-secondary' in registry[plv]:
         logger.warn(
             'Try to migrate registry value "plone-toolbar-font-secundary" to '
             '"plone-toolbar-font-secondary", but latter already exists. '
             'Migration to fix the typo is not executed.'
         )
         return
-    rreg.lessvariables['plone-toolbar-font-secondary'] = value
-    del rreg.lessvariables['plone-toolbar-font-secundary']
+    registry[plv]['plone-toolbar-font-secondary'] = value
+    del registry[plv]['plone-toolbar-font-secundary']
 
 
 def to503(context):
diff --git a/plone/app/upgrade/v50/profiles/to_503/registry.xml b/plone/app/upgrade/v50/profiles/to_503/registry.xml
index fcaa573..44fa4e0 100644
--- a/plone/app/upgrade/v50/profiles/to_503/registry.xml
+++ b/plone/app/upgrade/v50/profiles/to_503/registry.xml
@@ -1,19 +1,28 @@
 <?xml version="1.0"?>
 <registry>
-  <records prefix="plone.bundles/plone-logged-in"
-           interface='Products.CMFPlone.interfaces.IBundleRegistry'>
+  <records
+      interface="Products.CMFPlone.interfaces.IBundleRegistry"
+      prefix="plone.bundles/plone-logged-in">
     <value key="last_compilation">2015-02-16 00:00:00</value>
-    <value key="stub_js_modules" purge="False">
+    <value
+        key="stub_js_modules"
+        purge="False">
       <element>mockup-patterns-moment</element>
       <element>moment</element>
     </value>
   </records>
-  <records prefix="plone.bundles/plone"
-            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
+  <records
+      interface="Products.CMFPlone.interfaces.IBundleRegistry"
+      prefix="plone.bundles/plone">
     <value key="last_compilation">2015-02-16 00:00:00</value>
   </records>
-  <records prefix="plone.lessvariables"
-            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
-    <value key="plone-toolbar-submenu-width">180px</value>
+  <records
+      interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings"
+      prefix="plone">
+    <value
+        key="lessvariables"
+        purge="False">
+      <element key="plone-toolbar-submenu-width">180px</element>
+    </value>
   </records>
 </registry>
diff --git a/plone/app/upgrade/v50/tests.py b/plone/app/upgrade/v50/tests.py
index d95408c..e04f435 100644
--- a/plone/app/upgrade/v50/tests.py
+++ b/plone/app/upgrade/v50/tests.py
@@ -1,4 +1,5 @@
-from Products.CMFCore.utils import getToolByName
+# -*- coding: utf-8 -*-
+from plone.app.testing import PLONE_INTEGRATION_TESTING
 from plone.app.upgrade.tests.base import MigrationTest
 from plone.app.upgrade.v50.testing import REAL_UPGRADE_FUNCTIONAL
 from plone.app.viewletmanager.interfaces import IViewletSettingsStorage
@@ -6,6 +7,7 @@
 from plone.portlets.interfaces import IPortletManager
 from plone.registry.interfaces import IRegistry
 from plone.testing.z2 import Browser
+from Products.CMFCore.utils import getToolByName
 from zope.component import getMultiAdapter
 from zope.component import getSiteManager
 from zope.component import getUtility
@@ -89,33 +91,6 @@ def test_migrate_members_default_layout(self):
         self.assertIsNone(members.get('index_html', None))
         self.assertEqual(members.getLayout(), '@@member-search')
 
-    def test_migrate_less_variabl_typo(self):
-        from plone.app.upgrade.v50.final import \
-            _fix_typo_in_toolbar_less_variable
-        from plone.registry.interfaces import IRegistry
-        registry = getUtility(IRegistry)
-        from Products.ResourceRegistries.interfaces.settings import \
-            IResourceRegistriesSettings
-        rreg = registry.forInterface(
-            IResourceRegistriesSettings,
-            prefix='plone'
-        )
-
-        # set to a defined state
-        rreg.lessvariables['plone-toolbar-font-secundary'] = "Foo"
-        if 'plone-toolbar-font-secondary' in rreg.lessvariables:
-            del rreg.lessvariables['plone-toolbar-font-secondary']
-
-        # start testing
-        _fix_typo_in_toolbar_less_variable(self.portal)
-        self.assertEqual(
-            rreg.lessvariables['plone-toolbar-font-secondary'],
-            'Foo',
-        )
-        self.assertTrue(
-            'plone-toolbar-font-secundary' not in rreg.lessvariables
-        )
-
 
 class TestFunctionalMigrations(unittest.TestCase):
     """Run an upgrade from a real Plone 4.0 ZEXP dump.
@@ -151,6 +126,35 @@ def testBarcelonetaThemeIsInstalled(self):
         )
 
 
+class UpgradeRegistry502to503Test(unittest.TestCase):
+    """test registry changes
+    """
+
+    layer = PLONE_INTEGRATION_TESTING
+
+    def test_migrate_less_variable_typo(self):
+        from plone.app.upgrade.v50.final import \
+            _fix_typo_in_toolbar_less_variable
+        from plone.registry.interfaces import IRegistry
+        registry = getUtility(IRegistry)
+
+        # set to a defined state
+        plv = 'plone.lessvariables'
+        registry[plv]['plone-toolbar-font-secundary'] = "Foo"
+        if 'plone-toolbar-font-secondary' in registry[plv]:
+            del registry[plv]['plone-toolbar-font-secondary']
+
+        # start testing
+        _fix_typo_in_toolbar_less_variable(self)
+        self.assertEqual(
+            registry[plv]['plone-toolbar-font-secondary'],
+            'Foo',
+        )
+        self.assertTrue(
+            'plone-toolbar-font-secundary' not in registry[plv]
+        )
+
+
 def test_suite():
     # Skip these tests on Plone 4
     from unittest import TestSuite, makeSuite
@@ -160,4 +164,5 @@ def test_suite():
         suite = TestSuite()
         suite.addTest(makeSuite(PASUpgradeTest))
         suite.addTest(makeSuite(TestFunctionalMigrations))
+        suite.addTest(makeSuite(UpgradeRegistry502to503Test))
         return suite


Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2016-03-09T15:40:04+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/04abec4d62df72103cdcdfb8f2423b24beac399d

Merge pull request #69 from plone/jensens-new-lessvar-plone-left-toolbar-level-two

New Lessvar for Plone Toolbar Submenu - fix typo

Files changed:
M CHANGES.rst
M plone/app/upgrade/tests/base.py
M plone/app/upgrade/v50/final.py
M plone/app/upgrade/v50/profiles/to_503/registry.xml
M plone/app/upgrade/v50/tests.py

diff --git a/CHANGES.rst b/CHANGES.rst
index a025590..68c740b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -6,7 +6,8 @@ Changelog
 
 New:
 
-- *add item here*
+- Registry upgrades (less variables).
+  [jensens]
 
 Fixes:
 
diff --git a/plone/app/upgrade/tests/base.py b/plone/app/upgrade/tests/base.py
index c17c50f..b403e32 100644
--- a/plone/app/upgrade/tests/base.py
+++ b/plone/app/upgrade/tests/base.py
@@ -1,50 +1,54 @@
-#
-# Base TestCase for upgrades
-#
-
+# -*- coding: utf-8 -*-
 from os.path import abspath
 from os.path import dirname
 from os.path import join
-
-import transaction
-from zope.site.hooks import setSite
-
-from Testing.ZopeTestCase.sandbox import Sandboxed
 from plone.app.testing.bbb import PloneTestCase
-
 from Products.CMFCore.interfaces import IActionCategory
 from Products.CMFCore.interfaces import IActionInfo
-from Products.CMFCore.utils import getToolByName
 from Products.CMFCore.tests.base.testcase import WarningInterceptor
+from Products.CMFCore.utils import getToolByName
 from Products.GenericSetup.context import TarballImportContext
+from zope.site.hooks import setSite
 
-from Products.Five import zcml
+import transaction
 
+#
+# Base TestCase for upgrades
+#
 
 
 class MigrationTest(PloneTestCase):
 
-    def removeActionFromTool(self, action_id, category=None, action_provider='portal_actions'):
+    def removeActionFromTool(
+        self,
+        action_id,
+        category=None,
+        action_provider='portal_actions'
+    ):
         # Removes an action from portal_actions
         tool = getToolByName(self.portal, action_provider)
         if category is None:
-            if action_id in tool.objectIds() and IActionInfo.providedBy(tool._getOb(action_id)):
+            if action_id in tool.objectIds() and \
+               IActionInfo.providedBy(tool._getOb(action_id)):
                 tool._delOb(action_id)
-        else:
-            if category in tool.objectIds() and IActionCategory.providedBy(tool._getOb(category)):
-                if action_id in tool.objectIds() and IActionInfo.providedBy(tool._getOb(action_id)):
-                    tool._delOb(action_id)
+        elif (
+            category in tool.objectIds() and
+            IActionCategory.providedBy(tool._getOb(category)) and
+            action_id in tool.objectIds() and
+            IActionInfo.providedBy(tool._getOb(action_id))
+        ):
+            tool._delOb(action_id)
 
     def addResourceToJSTool(self, resource_name):
         # Registers a resource with the javascripts tool
         tool = getToolByName(self.portal, 'portal_javascripts')
-        if not resource_name in tool.getResourceIds():
+        if resource_name not in tool.getResourceIds():
             tool.registerScript(resource_name)
 
     def addResourceToCSSTool(self, resource_name):
         # Registers a resource with the css tool
         tool = getToolByName(self.portal, 'portal_css')
-        if not resource_name in tool.getResourceIds():
+        if resource_name not in tool.getResourceIds():
             tool.registerStylesheet(resource_name)
 
     def removeSiteProperty(self, property_id):
@@ -110,7 +114,6 @@ def removeSkinLayer(self, layer, skin='Plone Default'):
             skins.addSkinSelection(skin, ','.join(path))
 
 
-
 class FunctionalUpgradeTestCase(PloneTestCase, WarningInterceptor):
 
     _setup_fixture = 0
diff --git a/plone/app/upgrade/v50/final.py b/plone/app/upgrade/v50/final.py
index 55e8afc..4bcfdcf 100644
--- a/plone/app/upgrade/v50/final.py
+++ b/plone/app/upgrade/v50/final.py
@@ -5,6 +5,7 @@
 from Products.CMFPlone.utils import safe_unicode
 from zope.component import getUtility
 from zope.component.hooks import getSite
+
 import logging
 
 
@@ -92,6 +93,26 @@ def to502(context):
     loadMigrationProfile(context, 'profile-plone.app.querystring:upgrade_to_5')
 
 
+def _fix_typo_in_toolbar_less_variable(context):
+    registry = getUtility(IRegistry)
+    _marker = list()
+
+    plv = 'plone.lessvariables'
+    value = registry[plv].get('plone-toolbar-font-secundary', _marker)
+    if (value == _marker):
+        return
+    if 'plone-toolbar-font-secondary' in registry[plv]:
+        logger.warn(
+            'Try to migrate registry value "plone-toolbar-font-secundary" to '
+            '"plone-toolbar-font-secondary", but latter already exists. '
+            'Migration to fix the typo is not executed.'
+        )
+        return
+    registry[plv]['plone-toolbar-font-secondary'] = value
+    del registry[plv]['plone-toolbar-font-secundary']
+
+
 def to503(context):
     """5.0.2 -> 5.0.3"""
     loadMigrationProfile(context, 'profile-plone.app.upgrade.v50:to503')
+    _fix_typo_in_toolbar_less_variable(context)
diff --git a/plone/app/upgrade/v50/profiles/to_503/registry.xml b/plone/app/upgrade/v50/profiles/to_503/registry.xml
index 6b8dcea..44fa4e0 100644
--- a/plone/app/upgrade/v50/profiles/to_503/registry.xml
+++ b/plone/app/upgrade/v50/profiles/to_503/registry.xml
@@ -1,15 +1,28 @@
 <?xml version="1.0"?>
 <registry>
-  <records prefix="plone.bundles/plone-logged-in"
-           interface='Products.CMFPlone.interfaces.IBundleRegistry'>
+  <records
+      interface="Products.CMFPlone.interfaces.IBundleRegistry"
+      prefix="plone.bundles/plone-logged-in">
     <value key="last_compilation">2015-02-16 00:00:00</value>
-    <value key="stub_js_modules" purge="False">
+    <value
+        key="stub_js_modules"
+        purge="False">
       <element>mockup-patterns-moment</element>
       <element>moment</element>
     </value>
   </records>
-  <records prefix="plone.bundles/plone"
-            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
+  <records
+      interface="Products.CMFPlone.interfaces.IBundleRegistry"
+      prefix="plone.bundles/plone">
     <value key="last_compilation">2015-02-16 00:00:00</value>
   </records>
+  <records
+      interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings"
+      prefix="plone">
+    <value
+        key="lessvariables"
+        purge="False">
+      <element key="plone-toolbar-submenu-width">180px</element>
+    </value>
+  </records>
 </registry>
diff --git a/plone/app/upgrade/v50/tests.py b/plone/app/upgrade/v50/tests.py
index 3fd73aa..e04f435 100644
--- a/plone/app/upgrade/v50/tests.py
+++ b/plone/app/upgrade/v50/tests.py
@@ -1,4 +1,5 @@
-from Products.CMFCore.utils import getToolByName
+# -*- coding: utf-8 -*-
+from plone.app.testing import PLONE_INTEGRATION_TESTING
 from plone.app.upgrade.tests.base import MigrationTest
 from plone.app.upgrade.v50.testing import REAL_UPGRADE_FUNCTIONAL
 from plone.app.viewletmanager.interfaces import IViewletSettingsStorage
@@ -6,6 +7,7 @@
 from plone.portlets.interfaces import IPortletManager
 from plone.registry.interfaces import IRegistry
 from plone.testing.z2 import Browser
+from Products.CMFCore.utils import getToolByName
 from zope.component import getMultiAdapter
 from zope.component import getSiteManager
 from zope.component import getUtility
@@ -124,6 +126,35 @@ def testBarcelonetaThemeIsInstalled(self):
         )
 
 
+class UpgradeRegistry502to503Test(unittest.TestCase):
+    """test registry changes
+    """
+
+    layer = PLONE_INTEGRATION_TESTING
+
+    def test_migrate_less_variable_typo(self):
+        from plone.app.upgrade.v50.final import \
+            _fix_typo_in_toolbar_less_variable
+        from plone.registry.interfaces import IRegistry
+        registry = getUtility(IRegistry)
+
+        # set to a defined state
+        plv = 'plone.lessvariables'
+        registry[plv]['plone-toolbar-font-secundary'] = "Foo"
+        if 'plone-toolbar-font-secondary' in registry[plv]:
+            del registry[plv]['plone-toolbar-font-secondary']
+
+        # start testing
+        _fix_typo_in_toolbar_less_variable(self)
+        self.assertEqual(
+            registry[plv]['plone-toolbar-font-secondary'],
+            'Foo',
+        )
+        self.assertTrue(
+            'plone-toolbar-font-secundary' not in registry[plv]
+        )
+
+
 def test_suite():
     # Skip these tests on Plone 4
     from unittest import TestSuite, makeSuite
@@ -133,4 +164,5 @@ def test_suite():
         suite = TestSuite()
         suite.addTest(makeSuite(PASUpgradeTest))
         suite.addTest(makeSuite(TestFunctionalMigrations))
+        suite.addTest(makeSuite(UpgradeRegistry502to503Test))
         return suite


