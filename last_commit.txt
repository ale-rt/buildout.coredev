Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2016-03-09T16:43:17+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.upgrade/commit/49b34836ec76161fd4960eb8c4718df85b0794e7

Revert "Revert "New Lessvar for Plone Toolbar Submenu - fix typo""

Files changed:
M CHANGES.rst
M plone/app/upgrade/tests/base.py
M plone/app/upgrade/v50/final.py
M plone/app/upgrade/v50/profiles/to_503/registry.xml
M plone/app/upgrade/v50/tests.py

diff --git a/CHANGES.rst b/CHANGES.rst
index a025590..68c740b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -6,7 +6,8 @@ Changelog
 
 New:
 
-- *add item here*
+- Registry upgrades (less variables).
+  [jensens]
 
 Fixes:
 
diff --git a/plone/app/upgrade/tests/base.py b/plone/app/upgrade/tests/base.py
index c17c50f..b403e32 100644
--- a/plone/app/upgrade/tests/base.py
+++ b/plone/app/upgrade/tests/base.py
@@ -1,50 +1,54 @@
-#
-# Base TestCase for upgrades
-#
-
+# -*- coding: utf-8 -*-
 from os.path import abspath
 from os.path import dirname
 from os.path import join
-
-import transaction
-from zope.site.hooks import setSite
-
-from Testing.ZopeTestCase.sandbox import Sandboxed
 from plone.app.testing.bbb import PloneTestCase
-
 from Products.CMFCore.interfaces import IActionCategory
 from Products.CMFCore.interfaces import IActionInfo
-from Products.CMFCore.utils import getToolByName
 from Products.CMFCore.tests.base.testcase import WarningInterceptor
+from Products.CMFCore.utils import getToolByName
 from Products.GenericSetup.context import TarballImportContext
+from zope.site.hooks import setSite
 
-from Products.Five import zcml
+import transaction
 
+#
+# Base TestCase for upgrades
+#
 
 
 class MigrationTest(PloneTestCase):
 
-    def removeActionFromTool(self, action_id, category=None, action_provider='portal_actions'):
+    def removeActionFromTool(
+        self,
+        action_id,
+        category=None,
+        action_provider='portal_actions'
+    ):
         # Removes an action from portal_actions
         tool = getToolByName(self.portal, action_provider)
         if category is None:
-            if action_id in tool.objectIds() and IActionInfo.providedBy(tool._getOb(action_id)):
+            if action_id in tool.objectIds() and \
+               IActionInfo.providedBy(tool._getOb(action_id)):
                 tool._delOb(action_id)
-        else:
-            if category in tool.objectIds() and IActionCategory.providedBy(tool._getOb(category)):
-                if action_id in tool.objectIds() and IActionInfo.providedBy(tool._getOb(action_id)):
-                    tool._delOb(action_id)
+        elif (
+            category in tool.objectIds() and
+            IActionCategory.providedBy(tool._getOb(category)) and
+            action_id in tool.objectIds() and
+            IActionInfo.providedBy(tool._getOb(action_id))
+        ):
+            tool._delOb(action_id)
 
     def addResourceToJSTool(self, resource_name):
         # Registers a resource with the javascripts tool
         tool = getToolByName(self.portal, 'portal_javascripts')
-        if not resource_name in tool.getResourceIds():
+        if resource_name not in tool.getResourceIds():
             tool.registerScript(resource_name)
 
     def addResourceToCSSTool(self, resource_name):
         # Registers a resource with the css tool
         tool = getToolByName(self.portal, 'portal_css')
-        if not resource_name in tool.getResourceIds():
+        if resource_name not in tool.getResourceIds():
             tool.registerStylesheet(resource_name)
 
     def removeSiteProperty(self, property_id):
@@ -110,7 +114,6 @@ def removeSkinLayer(self, layer, skin='Plone Default'):
             skins.addSkinSelection(skin, ','.join(path))
 
 
-
 class FunctionalUpgradeTestCase(PloneTestCase, WarningInterceptor):
 
     _setup_fixture = 0
diff --git a/plone/app/upgrade/v50/final.py b/plone/app/upgrade/v50/final.py
index 55e8afc..4bcfdcf 100644
--- a/plone/app/upgrade/v50/final.py
+++ b/plone/app/upgrade/v50/final.py
@@ -5,6 +5,7 @@
 from Products.CMFPlone.utils import safe_unicode
 from zope.component import getUtility
 from zope.component.hooks import getSite
+
 import logging
 
 
@@ -92,6 +93,26 @@ def to502(context):
     loadMigrationProfile(context, 'profile-plone.app.querystring:upgrade_to_5')
 
 
+def _fix_typo_in_toolbar_less_variable(context):
+    registry = getUtility(IRegistry)
+    _marker = list()
+
+    plv = 'plone.lessvariables'
+    value = registry[plv].get('plone-toolbar-font-secundary', _marker)
+    if (value == _marker):
+        return
+    if 'plone-toolbar-font-secondary' in registry[plv]:
+        logger.warn(
+            'Try to migrate registry value "plone-toolbar-font-secundary" to '
+            '"plone-toolbar-font-secondary", but latter already exists. '
+            'Migration to fix the typo is not executed.'
+        )
+        return
+    registry[plv]['plone-toolbar-font-secondary'] = value
+    del registry[plv]['plone-toolbar-font-secundary']
+
+
 def to503(context):
     """5.0.2 -> 5.0.3"""
     loadMigrationProfile(context, 'profile-plone.app.upgrade.v50:to503')
+    _fix_typo_in_toolbar_less_variable(context)
diff --git a/plone/app/upgrade/v50/profiles/to_503/registry.xml b/plone/app/upgrade/v50/profiles/to_503/registry.xml
index 6b8dcea..44fa4e0 100644
--- a/plone/app/upgrade/v50/profiles/to_503/registry.xml
+++ b/plone/app/upgrade/v50/profiles/to_503/registry.xml
@@ -1,15 +1,28 @@
 <?xml version="1.0"?>
 <registry>
-  <records prefix="plone.bundles/plone-logged-in"
-           interface='Products.CMFPlone.interfaces.IBundleRegistry'>
+  <records
+      interface="Products.CMFPlone.interfaces.IBundleRegistry"
+      prefix="plone.bundles/plone-logged-in">
     <value key="last_compilation">2015-02-16 00:00:00</value>
-    <value key="stub_js_modules" purge="False">
+    <value
+        key="stub_js_modules"
+        purge="False">
       <element>mockup-patterns-moment</element>
       <element>moment</element>
     </value>
   </records>
-  <records prefix="plone.bundles/plone"
-            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
+  <records
+      interface="Products.CMFPlone.interfaces.IBundleRegistry"
+      prefix="plone.bundles/plone">
     <value key="last_compilation">2015-02-16 00:00:00</value>
   </records>
+  <records
+      interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings"
+      prefix="plone">
+    <value
+        key="lessvariables"
+        purge="False">
+      <element key="plone-toolbar-submenu-width">180px</element>
+    </value>
+  </records>
 </registry>
diff --git a/plone/app/upgrade/v50/tests.py b/plone/app/upgrade/v50/tests.py
index 3fd73aa..e04f435 100644
--- a/plone/app/upgrade/v50/tests.py
+++ b/plone/app/upgrade/v50/tests.py
@@ -1,4 +1,5 @@
-from Products.CMFCore.utils import getToolByName
+# -*- coding: utf-8 -*-
+from plone.app.testing import PLONE_INTEGRATION_TESTING
 from plone.app.upgrade.tests.base import MigrationTest
 from plone.app.upgrade.v50.testing import REAL_UPGRADE_FUNCTIONAL
 from plone.app.viewletmanager.interfaces import IViewletSettingsStorage
@@ -6,6 +7,7 @@
 from plone.portlets.interfaces import IPortletManager
 from plone.registry.interfaces import IRegistry
 from plone.testing.z2 import Browser
+from Products.CMFCore.utils import getToolByName
 from zope.component import getMultiAdapter
 from zope.component import getSiteManager
 from zope.component import getUtility
@@ -124,6 +126,35 @@ def testBarcelonetaThemeIsInstalled(self):
         )
 
 
+class UpgradeRegistry502to503Test(unittest.TestCase):
+    """test registry changes
+    """
+
+    layer = PLONE_INTEGRATION_TESTING
+
+    def test_migrate_less_variable_typo(self):
+        from plone.app.upgrade.v50.final import \
+            _fix_typo_in_toolbar_less_variable
+        from plone.registry.interfaces import IRegistry
+        registry = getUtility(IRegistry)
+
+        # set to a defined state
+        plv = 'plone.lessvariables'
+        registry[plv]['plone-toolbar-font-secundary'] = "Foo"
+        if 'plone-toolbar-font-secondary' in registry[plv]:
+            del registry[plv]['plone-toolbar-font-secondary']
+
+        # start testing
+        _fix_typo_in_toolbar_less_variable(self)
+        self.assertEqual(
+            registry[plv]['plone-toolbar-font-secondary'],
+            'Foo',
+        )
+        self.assertTrue(
+            'plone-toolbar-font-secundary' not in registry[plv]
+        )
+
+
 def test_suite():
     # Skip these tests on Plone 4
     from unittest import TestSuite, makeSuite
@@ -133,4 +164,5 @@ def test_suite():
         suite = TestSuite()
         suite.addTest(makeSuite(PASUpgradeTest))
         suite.addTest(makeSuite(TestFunctionalMigrations))
+        suite.addTest(makeSuite(UpgradeRegistry502to503Test))
         return suite


Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2016-03-09T17:26:28+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.upgrade/commit/01f6db9d57dac802a233fecfcdbd8b2f6f42b57c

add 5.1 profile and move prior prepared upgrade step for 502 to 503 into the new 503 to 510

Files changed:
A plone/app/upgrade/v51/__init__.py
A plone/app/upgrade/v51/alphas.py
A plone/app/upgrade/v51/configure.zcml
A plone/app/upgrade/v51/profiles.zcml
A plone/app/upgrade/v51/profiles/to_alpha1/registry.xml
A plone/app/upgrade/v51/tests.py
M plone/app/upgrade/__init__.py
M plone/app/upgrade/configure.zcml
M plone/app/upgrade/v50/final.py
M plone/app/upgrade/v50/profiles/to_503/registry.xml
M plone/app/upgrade/v50/tests.py

diff --git a/plone/app/upgrade/__init__.py b/plone/app/upgrade/__init__.py
index 6ef9898..1843de8 100644
--- a/plone/app/upgrade/__init__.py
+++ b/plone/app/upgrade/__init__.py
@@ -23,6 +23,7 @@ def getNonInstallableProducts(self):
             'plone.app.upgrade.v42',
             'plone.app.upgrade.v43',
             'plone.app.upgrade.v50',
+            'plone.app.upgrade.v51',
             ]
 
 # Make sure folks upgrading from Plone 2.1 see a helpful message telling them
diff --git a/plone/app/upgrade/configure.zcml b/plone/app/upgrade/configure.zcml
index 2269ce3..601ac13 100644
--- a/plone/app/upgrade/configure.zcml
+++ b/plone/app/upgrade/configure.zcml
@@ -14,6 +14,7 @@
     <include package=".v42" />
     <include package=".v43" />
     <include package=".v50" zcml:condition="have plone-5" />
+    <include package=".v51" zcml:condition="have plone-51" />
 
     <utility
         factory=".HiddenProducts"
diff --git a/plone/app/upgrade/v50/final.py b/plone/app/upgrade/v50/final.py
index 4bcfdcf..127fd32 100644
--- a/plone/app/upgrade/v50/final.py
+++ b/plone/app/upgrade/v50/final.py
@@ -93,26 +93,6 @@ def to502(context):
     loadMigrationProfile(context, 'profile-plone.app.querystring:upgrade_to_5')
 
 
-def _fix_typo_in_toolbar_less_variable(context):
-    registry = getUtility(IRegistry)
-    _marker = list()
-
-    plv = 'plone.lessvariables'
-    value = registry[plv].get('plone-toolbar-font-secundary', _marker)
-    if (value == _marker):
-        return
-    if 'plone-toolbar-font-secondary' in registry[plv]:
-        logger.warn(
-            'Try to migrate registry value "plone-toolbar-font-secundary" to '
-            '"plone-toolbar-font-secondary", but latter already exists. '
-            'Migration to fix the typo is not executed.'
-        )
-        return
-    registry[plv]['plone-toolbar-font-secondary'] = value
-    del registry[plv]['plone-toolbar-font-secundary']
-
-
 def to503(context):
     """5.0.2 -> 5.0.3"""
     loadMigrationProfile(context, 'profile-plone.app.upgrade.v50:to503')
-    _fix_typo_in_toolbar_less_variable(context)
diff --git a/plone/app/upgrade/v50/profiles/to_503/registry.xml b/plone/app/upgrade/v50/profiles/to_503/registry.xml
index 44fa4e0..c727b35 100644
--- a/plone/app/upgrade/v50/profiles/to_503/registry.xml
+++ b/plone/app/upgrade/v50/profiles/to_503/registry.xml
@@ -16,13 +16,4 @@
       prefix="plone.bundles/plone">
     <value key="last_compilation">2015-02-16 00:00:00</value>
   </records>
-  <records
-      interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings"
-      prefix="plone">
-    <value
-        key="lessvariables"
-        purge="False">
-      <element key="plone-toolbar-submenu-width">180px</element>
-    </value>
-  </records>
 </registry>
diff --git a/plone/app/upgrade/v50/tests.py b/plone/app/upgrade/v50/tests.py
index e04f435..9fa64b4 100644
--- a/plone/app/upgrade/v50/tests.py
+++ b/plone/app/upgrade/v50/tests.py
@@ -126,35 +126,6 @@ def testBarcelonetaThemeIsInstalled(self):
         )
 
 
-class UpgradeRegistry502to503Test(unittest.TestCase):
-    """test registry changes
-    """
-
-    layer = PLONE_INTEGRATION_TESTING
-
-    def test_migrate_less_variable_typo(self):
-        from plone.app.upgrade.v50.final import \
-            _fix_typo_in_toolbar_less_variable
-        from plone.registry.interfaces import IRegistry
-        registry = getUtility(IRegistry)
-
-        # set to a defined state
-        plv = 'plone.lessvariables'
-        registry[plv]['plone-toolbar-font-secundary'] = "Foo"
-        if 'plone-toolbar-font-secondary' in registry[plv]:
-            del registry[plv]['plone-toolbar-font-secondary']
-
-        # start testing
-        _fix_typo_in_toolbar_less_variable(self)
-        self.assertEqual(
-            registry[plv]['plone-toolbar-font-secondary'],
-            'Foo',
-        )
-        self.assertTrue(
-            'plone-toolbar-font-secundary' not in registry[plv]
-        )
-
-
 def test_suite():
     # Skip these tests on Plone 4
     from unittest import TestSuite, makeSuite
@@ -164,5 +135,4 @@ def test_suite():
         suite = TestSuite()
         suite.addTest(makeSuite(PASUpgradeTest))
         suite.addTest(makeSuite(TestFunctionalMigrations))
-        suite.addTest(makeSuite(UpgradeRegistry502to503Test))
         return suite
diff --git a/plone/app/upgrade/v51/__init__.py b/plone/app/upgrade/v51/__init__.py
new file mode 100644
index 0000000..40a96af
--- /dev/null
+++ b/plone/app/upgrade/v51/__init__.py
@@ -0,0 +1 @@
+# -*- coding: utf-8 -*-
diff --git a/plone/app/upgrade/v51/alphas.py b/plone/app/upgrade/v51/alphas.py
new file mode 100644
index 0000000..4b56f0e
--- /dev/null
+++ b/plone/app/upgrade/v51/alphas.py
@@ -0,0 +1,34 @@
+# -*- coding: utf-8 -*-
+from plone.app.upgrade.utils import loadMigrationProfile
+from plone.registry.interfaces import IRegistry
+from zope.component import getUtility
+
+import logging
+
+
+logger = logging.getLogger('plone.app.upgrade')
+
+
+def _fix_typo_in_toolbar_less_variable(context):
+    registry = getUtility(IRegistry)
+    _marker = list()
+
+    plv = 'plone.lessvariables'
+    value = registry[plv].get('plone-toolbar-font-secundary', _marker)
+    if value == _marker:
+        return
+    if 'plone-toolbar-font-secondary' in registry[plv]:
+        logger.warn(
+            'Try to migrate registry value "plone-toolbar-font-secundary" to '
+            '"plone-toolbar-font-secondary", but latter already exists. '
+            'Migration to fix the typo is not executed.'
+        )
+        return
+    registry[plv]['plone-toolbar-font-secondary'] = value
+    del registry[plv]['plone-toolbar-font-secundary']
+
+
+def to51alpha1(context):
+    """5.0.2 -> 5.0.3"""
+    loadMigrationProfile(context, 'profile-plone.app.upgrade.v51:to51alpha1')
+    _fix_typo_in_toolbar_less_variable(context)
diff --git a/plone/app/upgrade/v51/configure.zcml b/plone/app/upgrade/v51/configure.zcml
new file mode 100644
index 0000000..8972f71
--- /dev/null
+++ b/plone/app/upgrade/v51/configure.zcml
@@ -0,0 +1,22 @@
+<configure
+    xmlns="http://namespaces.zope.org/zope"
+    xmlns:gs="http://namespaces.zope.org/genericsetup"
+    xmlns:zcml="http://namespaces.zope.org/zcml"
+    i18n_domain="plone">
+
+    <include file="profiles.zcml" />
+
+    <gs:upgradeSteps
+        source="5013"
+        destination="5101"
+        profile="Products.CMFPlone:plone">
+
+      <gs:upgradeStep
+           title="Run to51alpha1 upgrade profile."
+           description=""
+           handler=".alphas.to51alpha1"
+           />
+
+    </gs:upgradeSteps>
+
+</configure>
diff --git a/plone/app/upgrade/v51/profiles.zcml b/plone/app/upgrade/v51/profiles.zcml
new file mode 100644
index 0000000..7aaa51c
--- /dev/null
+++ b/plone/app/upgrade/v51/profiles.zcml
@@ -0,0 +1,15 @@
+<configure
+    xmlns="http://namespaces.zope.org/zope"
+    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
+    i18n_domain="plone">
+
+  <genericsetup:registerProfile
+      name="to51alpha1"
+      title="Upgrade profile for Plone 5.0.3 to Plone 5.1alpha1"
+      description=""
+      directory="profiles/to_alpha1"
+      for="Products.CMFPlone.interfaces.IMigratingPloneSiteRoot"
+      provides="Products.GenericSetup.interfaces.EXTENSION"
+      />
+
+</configure>
diff --git a/plone/app/upgrade/v51/profiles/to_alpha1/registry.xml b/plone/app/upgrade/v51/profiles/to_alpha1/registry.xml
new file mode 100644
index 0000000..ba0e3e3
--- /dev/null
+++ b/plone/app/upgrade/v51/profiles/to_alpha1/registry.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0"?>
+<registry>
+  <records
+      interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings"
+      prefix="plone">
+    <value
+        key="lessvariables"
+        purge="False">
+      <element key="plone-toolbar-submenu-width">180px</element>
+    </value>
+  </records>
+</registry>
diff --git a/plone/app/upgrade/v51/tests.py b/plone/app/upgrade/v51/tests.py
new file mode 100644
index 0000000..9f66344
--- /dev/null
+++ b/plone/app/upgrade/v51/tests.py
@@ -0,0 +1,54 @@
+# -*- coding: utf-8 -*-
+from plone.app.testing import PLONE_INTEGRATION_TESTING
+from zope.component import getUtility
+
+import unittest
+
+try:
+    from Products.CMFPlone.factory import _IMREALLYPLONE5
+    _IMREALLYPLONE5  # pyflakes
+except ImportError:
+    PLONE_5 = False
+else:
+    PLONE_5 = True
+
+
+class UpgradeRegistry503to51alpha1Test(unittest.TestCase):
+    """test registry changes
+    """
+
+    layer = PLONE_INTEGRATION_TESTING
+
+    def test_migrate_less_variable_typo(self):
+        from plone.app.upgrade.v51.alphas import \
+            _fix_typo_in_toolbar_less_variable
+        from plone.registry.interfaces import IRegistry
+        registry = getUtility(IRegistry)
+
+        # set to a defined state
+        plv = 'plone.lessvariables'
+        registry[plv]['plone-toolbar-font-secundary'] = "Foo"
+        if 'plone-toolbar-font-secondary' in registry[plv]:
+            del registry[plv]['plone-toolbar-font-secondary']
+
+        # start testing
+        _fix_typo_in_toolbar_less_variable(self)
+        self.assertEqual(
+            registry[plv]['plone-toolbar-font-secondary'],
+            'Foo',
+        )
+        self.assertTrue(
+            'plone-toolbar-font-secundary' not in registry[plv]
+        )
+
+
+def test_suite():
+    # Skip these tests on Plone 4
+    if not PLONE_5:
+        return unittest.TestSuite()
+
+    suite = unittest.TestSuite()
+    suite.addTest(
+        unittest.makeSuite(UpgradeRegistry503to51alpha1Test)
+    )
+    return suite


Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2016-03-09T19:09:19+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.upgrade/commit/81edc0b7e35009b7df8850ef2a6c13d2c8857690

Merge pull request #71 from plone/revert-70-revert-69-jensens-new-lessvar-plone-left-toolbar-level-two

New Lessvar for Plone Toolbar Submenu - fix typo - 5.1

Files changed:
A plone/app/upgrade/v51/__init__.py
A plone/app/upgrade/v51/alphas.py
A plone/app/upgrade/v51/configure.zcml
A plone/app/upgrade/v51/profiles.zcml
A plone/app/upgrade/v51/profiles/to_alpha1/registry.xml
A plone/app/upgrade/v51/tests.py
M CHANGES.rst
M plone/app/upgrade/__init__.py
M plone/app/upgrade/configure.zcml
M plone/app/upgrade/tests/base.py
M plone/app/upgrade/v50/final.py
M plone/app/upgrade/v50/profiles/to_503/registry.xml
M plone/app/upgrade/v50/tests.py

diff --git a/CHANGES.rst b/CHANGES.rst
index a025590..68c740b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -6,7 +6,8 @@ Changelog
 
 New:
 
-- *add item here*
+- Registry upgrades (less variables).
+  [jensens]
 
 Fixes:
 
diff --git a/plone/app/upgrade/__init__.py b/plone/app/upgrade/__init__.py
index 6ef9898..1843de8 100644
--- a/plone/app/upgrade/__init__.py
+++ b/plone/app/upgrade/__init__.py
@@ -23,6 +23,7 @@ def getNonInstallableProducts(self):
             'plone.app.upgrade.v42',
             'plone.app.upgrade.v43',
             'plone.app.upgrade.v50',
+            'plone.app.upgrade.v51',
             ]
 
 # Make sure folks upgrading from Plone 2.1 see a helpful message telling them
diff --git a/plone/app/upgrade/configure.zcml b/plone/app/upgrade/configure.zcml
index 2269ce3..601ac13 100644
--- a/plone/app/upgrade/configure.zcml
+++ b/plone/app/upgrade/configure.zcml
@@ -14,6 +14,7 @@
     <include package=".v42" />
     <include package=".v43" />
     <include package=".v50" zcml:condition="have plone-5" />
+    <include package=".v51" zcml:condition="have plone-51" />
 
     <utility
         factory=".HiddenProducts"
diff --git a/plone/app/upgrade/tests/base.py b/plone/app/upgrade/tests/base.py
index c17c50f..b403e32 100644
--- a/plone/app/upgrade/tests/base.py
+++ b/plone/app/upgrade/tests/base.py
@@ -1,50 +1,54 @@
-#
-# Base TestCase for upgrades
-#
-
+# -*- coding: utf-8 -*-
 from os.path import abspath
 from os.path import dirname
 from os.path import join
-
-import transaction
-from zope.site.hooks import setSite
-
-from Testing.ZopeTestCase.sandbox import Sandboxed
 from plone.app.testing.bbb import PloneTestCase
-
 from Products.CMFCore.interfaces import IActionCategory
 from Products.CMFCore.interfaces import IActionInfo
-from Products.CMFCore.utils import getToolByName
 from Products.CMFCore.tests.base.testcase import WarningInterceptor
+from Products.CMFCore.utils import getToolByName
 from Products.GenericSetup.context import TarballImportContext
+from zope.site.hooks import setSite
 
-from Products.Five import zcml
+import transaction
 
+#
+# Base TestCase for upgrades
+#
 
 
 class MigrationTest(PloneTestCase):
 
-    def removeActionFromTool(self, action_id, category=None, action_provider='portal_actions'):
+    def removeActionFromTool(
+        self,
+        action_id,
+        category=None,
+        action_provider='portal_actions'
+    ):
         # Removes an action from portal_actions
         tool = getToolByName(self.portal, action_provider)
         if category is None:
-            if action_id in tool.objectIds() and IActionInfo.providedBy(tool._getOb(action_id)):
+            if action_id in tool.objectIds() and \
+               IActionInfo.providedBy(tool._getOb(action_id)):
                 tool._delOb(action_id)
-        else:
-            if category in tool.objectIds() and IActionCategory.providedBy(tool._getOb(category)):
-                if action_id in tool.objectIds() and IActionInfo.providedBy(tool._getOb(action_id)):
-                    tool._delOb(action_id)
+        elif (
+            category in tool.objectIds() and
+            IActionCategory.providedBy(tool._getOb(category)) and
+            action_id in tool.objectIds() and
+            IActionInfo.providedBy(tool._getOb(action_id))
+        ):
+            tool._delOb(action_id)
 
     def addResourceToJSTool(self, resource_name):
         # Registers a resource with the javascripts tool
         tool = getToolByName(self.portal, 'portal_javascripts')
-        if not resource_name in tool.getResourceIds():
+        if resource_name not in tool.getResourceIds():
             tool.registerScript(resource_name)
 
     def addResourceToCSSTool(self, resource_name):
         # Registers a resource with the css tool
         tool = getToolByName(self.portal, 'portal_css')
-        if not resource_name in tool.getResourceIds():
+        if resource_name not in tool.getResourceIds():
             tool.registerStylesheet(resource_name)
 
     def removeSiteProperty(self, property_id):
@@ -110,7 +114,6 @@ def removeSkinLayer(self, layer, skin='Plone Default'):
             skins.addSkinSelection(skin, ','.join(path))
 
 
-
 class FunctionalUpgradeTestCase(PloneTestCase, WarningInterceptor):
 
     _setup_fixture = 0
diff --git a/plone/app/upgrade/v50/final.py b/plone/app/upgrade/v50/final.py
index 55e8afc..127fd32 100644
--- a/plone/app/upgrade/v50/final.py
+++ b/plone/app/upgrade/v50/final.py
@@ -5,6 +5,7 @@
 from Products.CMFPlone.utils import safe_unicode
 from zope.component import getUtility
 from zope.component.hooks import getSite
+
 import logging
 
 
diff --git a/plone/app/upgrade/v50/profiles/to_503/registry.xml b/plone/app/upgrade/v50/profiles/to_503/registry.xml
index 6b8dcea..c727b35 100644
--- a/plone/app/upgrade/v50/profiles/to_503/registry.xml
+++ b/plone/app/upgrade/v50/profiles/to_503/registry.xml
@@ -1,15 +1,19 @@
 <?xml version="1.0"?>
 <registry>
-  <records prefix="plone.bundles/plone-logged-in"
-           interface='Products.CMFPlone.interfaces.IBundleRegistry'>
+  <records
+      interface="Products.CMFPlone.interfaces.IBundleRegistry"
+      prefix="plone.bundles/plone-logged-in">
     <value key="last_compilation">2015-02-16 00:00:00</value>
-    <value key="stub_js_modules" purge="False">
+    <value
+        key="stub_js_modules"
+        purge="False">
       <element>mockup-patterns-moment</element>
       <element>moment</element>
     </value>
   </records>
-  <records prefix="plone.bundles/plone"
-            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
+  <records
+      interface="Products.CMFPlone.interfaces.IBundleRegistry"
+      prefix="plone.bundles/plone">
     <value key="last_compilation">2015-02-16 00:00:00</value>
   </records>
 </registry>
diff --git a/plone/app/upgrade/v50/tests.py b/plone/app/upgrade/v50/tests.py
index 3fd73aa..9fa64b4 100644
--- a/plone/app/upgrade/v50/tests.py
+++ b/plone/app/upgrade/v50/tests.py
@@ -1,4 +1,5 @@
-from Products.CMFCore.utils import getToolByName
+# -*- coding: utf-8 -*-
+from plone.app.testing import PLONE_INTEGRATION_TESTING
 from plone.app.upgrade.tests.base import MigrationTest
 from plone.app.upgrade.v50.testing import REAL_UPGRADE_FUNCTIONAL
 from plone.app.viewletmanager.interfaces import IViewletSettingsStorage
@@ -6,6 +7,7 @@
 from plone.portlets.interfaces import IPortletManager
 from plone.registry.interfaces import IRegistry
 from plone.testing.z2 import Browser
+from Products.CMFCore.utils import getToolByName
 from zope.component import getMultiAdapter
 from zope.component import getSiteManager
 from zope.component import getUtility
diff --git a/plone/app/upgrade/v51/__init__.py b/plone/app/upgrade/v51/__init__.py
new file mode 100644
index 0000000..40a96af
--- /dev/null
+++ b/plone/app/upgrade/v51/__init__.py
@@ -0,0 +1 @@
+# -*- coding: utf-8 -*-
diff --git a/plone/app/upgrade/v51/alphas.py b/plone/app/upgrade/v51/alphas.py
new file mode 100644
index 0000000..4b56f0e
--- /dev/null
+++ b/plone/app/upgrade/v51/alphas.py
@@ -0,0 +1,34 @@
+# -*- coding: utf-8 -*-
+from plone.app.upgrade.utils import loadMigrationProfile
+from plone.registry.interfaces import IRegistry
+from zope.component import getUtility
+
+import logging
+
+
+logger = logging.getLogger('plone.app.upgrade')
+
+
+def _fix_typo_in_toolbar_less_variable(context):
+    registry = getUtility(IRegistry)
+    _marker = list()
+
+    plv = 'plone.lessvariables'
+    value = registry[plv].get('plone-toolbar-font-secundary', _marker)
+    if value == _marker:
+        return
+    if 'plone-toolbar-font-secondary' in registry[plv]:
+        logger.warn(
+            'Try to migrate registry value "plone-toolbar-font-secundary" to '
+            '"plone-toolbar-font-secondary", but latter already exists. '
+            'Migration to fix the typo is not executed.'
+        )
+        return
+    registry[plv]['plone-toolbar-font-secondary'] = value
+    del registry[plv]['plone-toolbar-font-secundary']
+
+
+def to51alpha1(context):
+    """5.0.2 -> 5.0.3"""
+    loadMigrationProfile(context, 'profile-plone.app.upgrade.v51:to51alpha1')
+    _fix_typo_in_toolbar_less_variable(context)
diff --git a/plone/app/upgrade/v51/configure.zcml b/plone/app/upgrade/v51/configure.zcml
new file mode 100644
index 0000000..8972f71
--- /dev/null
+++ b/plone/app/upgrade/v51/configure.zcml
@@ -0,0 +1,22 @@
+<configure
+    xmlns="http://namespaces.zope.org/zope"
+    xmlns:gs="http://namespaces.zope.org/genericsetup"
+    xmlns:zcml="http://namespaces.zope.org/zcml"
+    i18n_domain="plone">
+
+    <include file="profiles.zcml" />
+
+    <gs:upgradeSteps
+        source="5013"
+        destination="5101"
+        profile="Products.CMFPlone:plone">
+
+      <gs:upgradeStep
+           title="Run to51alpha1 upgrade profile."
+           description=""
+           handler=".alphas.to51alpha1"
+           />
+
+    </gs:upgradeSteps>
+
+</configure>
diff --git a/plone/app/upgrade/v51/profiles.zcml b/plone/app/upgrade/v51/profiles.zcml
new file mode 100644
index 0000000..7aaa51c
--- /dev/null
+++ b/plone/app/upgrade/v51/profiles.zcml
@@ -0,0 +1,15 @@
+<configure
+    xmlns="http://namespaces.zope.org/zope"
+    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
+    i18n_domain="plone">
+
+  <genericsetup:registerProfile
+      name="to51alpha1"
+      title="Upgrade profile for Plone 5.0.3 to Plone 5.1alpha1"
+      description=""
+      directory="profiles/to_alpha1"
+      for="Products.CMFPlone.interfaces.IMigratingPloneSiteRoot"
+      provides="Products.GenericSetup.interfaces.EXTENSION"
+      />
+
+</configure>
diff --git a/plone/app/upgrade/v51/profiles/to_alpha1/registry.xml b/plone/app/upgrade/v51/profiles/to_alpha1/registry.xml
new file mode 100644
index 0000000..ba0e3e3
--- /dev/null
+++ b/plone/app/upgrade/v51/profiles/to_alpha1/registry.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0"?>
+<registry>
+  <records
+      interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings"
+      prefix="plone">
+    <value
+        key="lessvariables"
+        purge="False">
+      <element key="plone-toolbar-submenu-width">180px</element>
+    </value>
+  </records>
+</registry>
diff --git a/plone/app/upgrade/v51/tests.py b/plone/app/upgrade/v51/tests.py
new file mode 100644
index 0000000..9f66344
--- /dev/null
+++ b/plone/app/upgrade/v51/tests.py
@@ -0,0 +1,54 @@
+# -*- coding: utf-8 -*-
+from plone.app.testing import PLONE_INTEGRATION_TESTING
+from zope.component import getUtility
+
+import unittest
+
+try:
+    from Products.CMFPlone.factory import _IMREALLYPLONE5
+    _IMREALLYPLONE5  # pyflakes
+except ImportError:
+    PLONE_5 = False
+else:
+    PLONE_5 = True
+
+
+class UpgradeRegistry503to51alpha1Test(unittest.TestCase):
+    """test registry changes
+    """
+
+    layer = PLONE_INTEGRATION_TESTING
+
+    def test_migrate_less_variable_typo(self):
+        from plone.app.upgrade.v51.alphas import \
+            _fix_typo_in_toolbar_less_variable
+        from plone.registry.interfaces import IRegistry
+        registry = getUtility(IRegistry)
+
+        # set to a defined state
+        plv = 'plone.lessvariables'
+        registry[plv]['plone-toolbar-font-secundary'] = "Foo"
+        if 'plone-toolbar-font-secondary' in registry[plv]:
+            del registry[plv]['plone-toolbar-font-secondary']
+
+        # start testing
+        _fix_typo_in_toolbar_less_variable(self)
+        self.assertEqual(
+            registry[plv]['plone-toolbar-font-secondary'],
+            'Foo',
+        )
+        self.assertTrue(
+            'plone-toolbar-font-secundary' not in registry[plv]
+        )
+
+
+def test_suite():
+    # Skip these tests on Plone 4
+    if not PLONE_5:
+        return unittest.TestSuite()
+
+    suite = unittest.TestSuite()
+    suite.addTest(
+        unittest.makeSuite(UpgradeRegistry503to51alpha1Test)
+    )
+    return suite


