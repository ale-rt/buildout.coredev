Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2017-01-22T02:43:19+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.dexterity/commit/d902f6cf501523a251de4f26198337b937ec8315

import from cononical source

Files changed:
M CHANGES.rst
M plone/app/dexterity/interfaces.py

diff --git a/CHANGES.rst b/CHANGES.rst
index b8f6867..69b874c 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,9 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Do not import ``IFileFactory`` in interfaces from plone.app.widgets.
+  It is only imported over there.
+  [jensens]
 
 
 2.3.6 (2017-01-20)
diff --git a/plone/app/dexterity/interfaces.py b/plone/app/dexterity/interfaces.py
index 1fb34d2..6a0d776 100644
--- a/plone/app/dexterity/interfaces.py
+++ b/plone/app/dexterity/interfaces.py
@@ -1,10 +1,10 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_base
 from plone.app.dexterity import _
-from plone.app.widgets.interfaces import IFileFactory
 from Products.CMFCore.utils import getToolByName
 from z3c.form import validator
 from zope import schema
+from zope.filerepresentation.interfaces import IFileFactory
 from zope.interface import Attribute
 from zope.interface import Interface
 from zope.interface import Invalid
@@ -30,6 +30,7 @@ class InvalidIdError(schema.ValidationError):
     __doc__ = _(
         u'Please use only letters, numbers and the following characters: .-_')
 
+
 # a letter followed by letters, numbers, period, hyphen, or underscore
 ID_RE = re.compile(r'^[a-z][\w\d\.-]*$')
 
@@ -107,6 +108,7 @@ def validate(self, value):
             msg = u"There is already a content type named '${name}'"
             raise Invalid(_(msg, mapping={'name': value}))
 
+
 validator.WidgetValidatorDiscriminators(
     TypeIdValidator,
     field=ITypeSettings['id']
@@ -127,6 +129,7 @@ def validate(self, value):
                 msg = u"There is already a content type named '${name}'"
                 raise Invalid(_(msg, mapping={'name': value}))
 
+
 validator.WidgetValidatorDiscriminators(
     TypeTitleValidator,
     field=ITypeSettings['title']


Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2017-01-22T18:56:36+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.dexterity/commit/fbc21e911cbc9bf0ea37222b18f4393971491808

Merge pull request #233 from plone/jensens-clean-import

import from canonical source

Files changed:
M CHANGES.rst
M plone/app/dexterity/interfaces.py

diff --git a/CHANGES.rst b/CHANGES.rst
index b8f6867..69b874c 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,9 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Do not import ``IFileFactory`` in interfaces from plone.app.widgets.
+  It is only imported over there.
+  [jensens]
 
 
 2.3.6 (2017-01-20)
diff --git a/plone/app/dexterity/interfaces.py b/plone/app/dexterity/interfaces.py
index 1fb34d2..6a0d776 100644
--- a/plone/app/dexterity/interfaces.py
+++ b/plone/app/dexterity/interfaces.py
@@ -1,10 +1,10 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_base
 from plone.app.dexterity import _
-from plone.app.widgets.interfaces import IFileFactory
 from Products.CMFCore.utils import getToolByName
 from z3c.form import validator
 from zope import schema
+from zope.filerepresentation.interfaces import IFileFactory
 from zope.interface import Attribute
 from zope.interface import Interface
 from zope.interface import Invalid
@@ -30,6 +30,7 @@ class InvalidIdError(schema.ValidationError):
     __doc__ = _(
         u'Please use only letters, numbers and the following characters: .-_')
 
+
 # a letter followed by letters, numbers, period, hyphen, or underscore
 ID_RE = re.compile(r'^[a-z][\w\d\.-]*$')
 
@@ -107,6 +108,7 @@ def validate(self, value):
             msg = u"There is already a content type named '${name}'"
             raise Invalid(_(msg, mapping={'name': value}))
 
+
 validator.WidgetValidatorDiscriminators(
     TypeIdValidator,
     field=ITypeSettings['id']
@@ -127,6 +129,7 @@ def validate(self, value):
                 msg = u"There is already a content type named '${name}'"
                 raise Invalid(_(msg, mapping={'name': value}))
 
+
 validator.WidgetValidatorDiscriminators(
     TypeTitleValidator,
     field=ITypeSettings['title']


