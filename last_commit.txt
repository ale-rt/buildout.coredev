Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2016-03-17T06:45:31+01:00
Author: Markus Hilbert () <m.hilbert@akbild.ac.at>
Commit: https://github.com/plone/Products.CMFEditions/commit/68807c85ee7b0c71eff624a824225cf9089c89a1

Fixed CloneBlobs modifier to only react on Archetypes.

Files changed:
M CHANGES.rst
M Products/CMFEditions/StandardModifiers.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 63c3d03..43bfa06 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,9 @@ New:
 
 Fixes:
 
-- *add item here*
+- Fixed CloneBlobs modifier to only react on Archetypes.
+  This fix allows Dexterity Blob-Types (e.g. File, Image) to be versioned.
+  [iham]
 
 
 2.2.19 (2016-02-14)
diff --git a/Products/CMFEditions/StandardModifiers.py b/Products/CMFEditions/StandardModifiers.py
index 0481e68..ec2169d 100644
--- a/Products/CMFEditions/StandardModifiers.py
+++ b/Products/CMFEditions/StandardModifiers.py
@@ -54,6 +54,11 @@
 from Products.CMFEditions.Modifiers import ConditionalTalesModifier
 
 try:
+    from Products.Archetypes.interfaces.base import IBaseContent
+except ImportError:
+    class IBaseContent(Interface):
+        pass
+try:
     from Products.Archetypes.interfaces.referenceable import IReferenceable
     from Products.Archetypes.config import UUID_ATTR, REFERENCE_ANNOTATION
 except ImportError:
@@ -1167,9 +1172,16 @@ class CloneBlobs:
     implements(IAttributeModifier, ICloneModifier)
 
     def getReferencedAttributes(self, obj):
+
+        file_data = {}
+
+        # This modifier should only be used for ATCT
+        # so return the empty file_data if not an ATCT
+        if not IBaseContent.providedBy(obj):
+            return file_data
+
         blob_fields = (f for f in obj.Schema().fields()
                        if IBlobField.providedBy(f))
-        file_data = {}
         # try to get last revision, only store a new blob if the
         # contents differ from the prior one, otherwise store a
         # reference to the prior one
@@ -1221,6 +1233,10 @@ def reattachReferencedAttributes(self, obj, attrs_dict):
     def getOnCloneModifiers(self, obj):
         """Removes references to blobs.
         """
+        # Fix for Dexterity Types
+        if not IBaseContent.providedBy(obj):
+            return None
+
         blob_refs = dict((id(f.getUnwrapped(obj, raw=True).getBlob()), True)
                          for f in obj.Schema().fields()
                          if IBlobField.providedBy(f))


Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2016-04-04T09:26:14+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFEditions/commit/fb2ded6fd3ea9f0a7f3d9c0161bba929191bf486

Merge pull request #36 from iham/master

Fixed CloneBlobs modifier to only react on Archetypes.

Files changed:
M CHANGES.rst
M Products/CMFEditions/StandardModifiers.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 63c3d03..43bfa06 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,9 @@ New:
 
 Fixes:
 
-- *add item here*
+- Fixed CloneBlobs modifier to only react on Archetypes.
+  This fix allows Dexterity Blob-Types (e.g. File, Image) to be versioned.
+  [iham]
 
 
 2.2.19 (2016-02-14)
diff --git a/Products/CMFEditions/StandardModifiers.py b/Products/CMFEditions/StandardModifiers.py
index 0481e68..ec2169d 100644
--- a/Products/CMFEditions/StandardModifiers.py
+++ b/Products/CMFEditions/StandardModifiers.py
@@ -54,6 +54,11 @@
 from Products.CMFEditions.Modifiers import ConditionalTalesModifier
 
 try:
+    from Products.Archetypes.interfaces.base import IBaseContent
+except ImportError:
+    class IBaseContent(Interface):
+        pass
+try:
     from Products.Archetypes.interfaces.referenceable import IReferenceable
     from Products.Archetypes.config import UUID_ATTR, REFERENCE_ANNOTATION
 except ImportError:
@@ -1167,9 +1172,16 @@ class CloneBlobs:
     implements(IAttributeModifier, ICloneModifier)
 
     def getReferencedAttributes(self, obj):
+
+        file_data = {}
+
+        # This modifier should only be used for ATCT
+        # so return the empty file_data if not an ATCT
+        if not IBaseContent.providedBy(obj):
+            return file_data
+
         blob_fields = (f for f in obj.Schema().fields()
                        if IBlobField.providedBy(f))
-        file_data = {}
         # try to get last revision, only store a new blob if the
         # contents differ from the prior one, otherwise store a
         # reference to the prior one
@@ -1221,6 +1233,10 @@ def reattachReferencedAttributes(self, obj, attrs_dict):
     def getOnCloneModifiers(self, obj):
         """Removes references to blobs.
         """
+        # Fix for Dexterity Types
+        if not IBaseContent.providedBy(obj):
+            return None
+
         blob_refs = dict((id(f.getUnwrapped(obj, raw=True).getBlob()), True)
                          for f in obj.Schema().fields()
                          if IBlobField.providedBy(f))


