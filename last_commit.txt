Repository: plone.app.textfield


Branch: refs/heads/master
Date: 2017-01-25T17:31:30+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.textfield/commit/0a552d6fe3689de6fa05479245cbcd96413aac9c

more zope.interface decorators, utf8 headers, isort, zcml conditions are enough

Files changed:
M CHANGES.rst
M plone/__init__.py
M plone/app/__init__.py
M plone/app/textfield/__init__.py
M plone/app/textfield/browser.py
M plone/app/textfield/editor.py
M plone/app/textfield/field.rst
M plone/app/textfield/handler.py
M plone/app/textfield/interfaces.py
M plone/app/textfield/marshaler.py
M plone/app/textfield/marshaler.rst
M plone/app/textfield/tests.py
M plone/app/textfield/transform.py
M plone/app/textfield/utils.py
M plone/app/textfield/value.py
M plone/app/textfield/widget.py
M plone/app/textfield/widget.zcml
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 8d19b19..7e5d9b6 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,12 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Cleanup:
+  Use more zope.interface decorators,
+  add utf8 headers,
+  isort imports,
+  zcml conditions are enough.
+  [jensens]
 
 
 1.2.7 (2016-08-10)
diff --git a/plone/__init__.py b/plone/__init__.py
index de40ea7..68c04af 100644
--- a/plone/__init__.py
+++ b/plone/__init__.py
@@ -1 +1,2 @@
+# -*- coding: utf-8 -*-
 __import__('pkg_resources').declare_namespace(__name__)
diff --git a/plone/app/__init__.py b/plone/app/__init__.py
index de40ea7..68c04af 100644
--- a/plone/app/__init__.py
+++ b/plone/app/__init__.py
@@ -1 +1,2 @@
+# -*- coding: utf-8 -*-
 __import__('pkg_resources').declare_namespace(__name__)
diff --git a/plone/app/textfield/__init__.py b/plone/app/textfield/__init__.py
index a4ab9da..eaef5a7 100644
--- a/plone/app/textfield/__init__.py
+++ b/plone/app/textfield/__init__.py
@@ -1,13 +1,16 @@
-from plone.app.textfield.interfaces import IRichText, IRichTextValue
+# -*- coding: utf-8 -*-
+from plone.app.textfield.interfaces import IRichText
+from plone.app.textfield.interfaces import IRichTextValue
 from plone.app.textfield.value import RichTextValue
 from zope.i18nmessageid.message import MessageFactory
-from zope.interface import Invalid
 from zope.interface import implementer
+from zope.interface import Invalid
 from zope.schema import Object
 from zope.schema._bootstrapinterfaces import ConstraintNotSatisfied
 from zope.schema.interfaces import IFromUnicode
 from zope.schema.interfaces import WrongType
 
+
 _ = MessageFactory('plone')
 
 
diff --git a/plone/app/textfield/browser.py b/plone/app/textfield/browser.py
index 7f167f6..b599391 100644
--- a/plone/app/textfield/browser.py
+++ b/plone/app/textfield/browser.py
@@ -1,6 +1,7 @@
+# -*- coding: utf-8 -*-
 from Acquisition import aq_inner
-from Products.Five.browser import BrowserView
 from plone.app.textfield.interfaces import ITransformer
+from Products.Five.browser import BrowserView
 
 
 class Transform(BrowserView):
diff --git a/plone/app/textfield/editor.py b/plone/app/textfield/editor.py
index 3bbfecd..2ab0b44 100644
--- a/plone/app/textfield/editor.py
+++ b/plone/app/textfield/editor.py
@@ -1,6 +1,7 @@
-from plone.app.textfield import RichText
+# -*- coding: utf-8 -*-
 from plone.app.textfield import _
 from plone.app.textfield import interfaces
+from plone.app.textfield import RichText
 from plone.schemaeditor.fields import FieldFactory
 from zope import schema
 from zope.interface import Attribute
diff --git a/plone/app/textfield/field.rst b/plone/app/textfield/field.rst
index 4c24ada..9f6b5ef 100644
--- a/plone/app/textfield/field.rst
+++ b/plone/app/textfield/field.rst
@@ -14,7 +14,7 @@ Using the field
 
 The field can be used much like any other field:
 
-    >>> from zope.interface import Interface, implements
+    >>> from zope.interface import Interface, implementer
     >>> from plone.app.textfield import RichText
 
     >>> class IContent(Interface):
@@ -46,8 +46,8 @@ These can be set when the field is constructed:
     >>> field = IContent['rich']
 
     >>> from persistent import Persistent
-    >>> class Content(Persistent):
-    ...     implements(IContent)
+    >>> @implementer(IContent)
+    ... class Content(Persistent):
     ...     def __init__(self, rich=None):
     ...         self.rich = rich
 
@@ -79,10 +79,10 @@ This package comes with a default transformer that uses
 Products.PortalTransforms, which in turn comes with Plone.
 
     >>> from plone.app.textfield.interfaces import ITransformer, TransformError
-    >>> from zope.component import adapts, provideAdapter
-    >>> class TestTransformer(object):
-    ...     implements(ITransformer)
-    ...     adapts(Interface)
+    >>> from zope.component import adapter, provideAdapter
+    >>> @implementer(ITransformer)
+    ... @adapter(Interface)
+    ... class TestTransformer(object):
     ...
     ...     def __init__(self, context):
     ...         self.context = context
diff --git a/plone/app/textfield/handler.py b/plone/app/textfield/handler.py
index ac6fa03..639e569 100644
--- a/plone/app/textfield/handler.py
+++ b/plone/app/textfield/handler.py
@@ -1,37 +1,34 @@
-try:
-    from plone.supermodel.exportimport import BaseHandler
-    HAVE_SUPERMODEL = True
-except ImportError:
-    HAVE_SUPERMODEL = False
+# -*- coding: utf-8 -*-
+from plone.app.textfield import RichText
+from plone.app.textfield.interfaces import IRichText
+from plone.supermodel.exportimport import BaseHandler
+from plone.supermodel.interfaces import IToUnicode
+from zope.component import adapter
+from zope.interface import implementer
 
-if HAVE_SUPERMODEL:
 
-    from zope.interface import implementer
-    from zope.component import adapts
-    from plone.app.textfield import RichText
-    from plone.supermodel.interfaces import IToUnicode
-    from plone.app.textfield.interfaces import IRichText
+class RichTextHandler_(BaseHandler):
+    """Special handling for the RichText field, to deal with 'default'
+    that may be unicode.
+    """
 
-    class RichTextHandler_(BaseHandler):
-        """Special handling for the RichText field, to deal with 'default'
-        that may be unicode.
-        """
+    # Don't read or write 'schema'
+    filteredAttributes = BaseHandler.filteredAttributes.copy()
+    filteredAttributes.update({'schema': 'rw'})
 
-        # Don't read or write 'schema'
-        filteredAttributes = BaseHandler.filteredAttributes.copy()
-        filteredAttributes.update({'schema': 'rw'})
+    def __init__(self, klass):
+        super(RichTextHandler_, self).__init__(klass)
 
-        def __init__(self, klass):
-            super(RichTextHandler_, self).__init__(klass)
 
-    @implementer(IToUnicode)
-    class RichTextToUnicode(object):
-        adapts(IRichText)
+@implementer(IToUnicode)
+@adapter(IRichText)
+class RichTextToUnicode(object):
 
-        def __init__(self, context):
-            self.context = context
+    def __init__(self, context):
+        self.context = context
 
-        def toUnicode(self, value):
-            return value.raw
+    def toUnicode(self, value):
+        return value.raw
 
-    RichTextHandler = RichTextHandler_(RichText)
+
+RichTextHandler = RichTextHandler_(RichText)
diff --git a/plone/app/textfield/interfaces.py b/plone/app/textfield/interfaces.py
index 3364f53..ac3b5ca 100644
--- a/plone/app/textfield/interfaces.py
+++ b/plone/app/textfield/interfaces.py
@@ -1,8 +1,10 @@
+# -*- coding: utf-8 -*-
 from zope import schema
 from zope.i18nmessageid.message import MessageFactory
 from zope.interface import Interface
 from zope.schema.interfaces import IObject
 
+
 _ = MessageFactory('plone')
 
 
diff --git a/plone/app/textfield/marshaler.py b/plone/app/textfield/marshaler.py
index baf0bdb..8457035 100644
--- a/plone/app/textfield/marshaler.py
+++ b/plone/app/textfield/marshaler.py
@@ -1,56 +1,49 @@
-try:
-    from plone.rfc822.defaultfields import BaseFieldMarshaler
-    HAVE_MARSHALER = True
-except ImportError:
-    HAVE_MARSHALER = False
-
-if HAVE_MARSHALER:
-
-    from zope.interface import Interface
-    from zope.component import adapts
-
-    from plone.app.textfield.interfaces import IRichText
-    from plone.app.textfield.value import RichTextValue
-
-    class RichTextFieldMarshaler(BaseFieldMarshaler):
-        """Field marshaler for plone.app.textfield values.
-        """
-
-        adapts(Interface, IRichText)
-
-        ascii = False
-
-        def encode(self, value, charset='utf-8', primary=False):
-            if value is None:
-                return
-            return value.raw.encode(charset)
-
-        def decode(
-                self,
-                value,
-                message=None,
-                charset='utf-8',
-                contentType=None,
-                primary=False):
-            try:
-                unicode_value = value.decode(charset)
-            except UnicodeEncodeError:
-                unicode_value = value  # was already unicode
-            return RichTextValue(
-                raw=unicode_value,
-                mimeType=contentType or self.field.default_mime_type,
-                outputMimeType=self.field.output_mime_type,
-                encoding=charset
-            )
-
-        def getContentType(self):
-            value = self._query()
-            if value is None:
-                return None
-            return value.mimeType
-
-        def getCharset(self, default='utf-8'):
-            value = self._query()
-            if value is None:
-                return None
-            return value.encoding
+# -*- coding: utf-8 -*-
+from plone.app.textfield.interfaces import IRichText
+from plone.app.textfield.value import RichTextValue
+from plone.rfc822.defaultfields import BaseFieldMarshaler
+from zope.component import adapter
+from zope.interface import Interface
+
+
+@adapter(Interface, IRichText)
+class RichTextFieldMarshaler(BaseFieldMarshaler):
+    """Field marshaler for plone.app.textfield values.
+    """
+
+    ascii = False
+
+    def encode(self, value, charset='utf-8', primary=False):
+        if value is None:
+            return
+        return value.raw.encode(charset)
+
+    def decode(
+            self,
+            value,
+            message=None,
+            charset='utf-8',
+            contentType=None,
+            primary=False):
+        try:
+            unicode_value = value.decode(charset)
+        except UnicodeEncodeError:
+            unicode_value = value  # was already unicode
+        return RichTextValue(
+            raw=unicode_value,
+            mimeType=contentType or self.field.default_mime_type,
+            outputMimeType=self.field.output_mime_type,
+            encoding=charset
+        )
+
+    def getContentType(self):
+        value = self._query()
+        if value is None:
+            return None
+        return value.mimeType
+
+    def getCharset(self, default='utf-8'):
+        value = self._query()
+        if value is None:
+            return None
+        return value.encoding
diff --git a/plone/app/textfield/marshaler.rst b/plone/app/textfield/marshaler.rst
index 1f6ee3d..f6e122a 100644
--- a/plone/app/textfield/marshaler.rst
+++ b/plone/app/textfield/marshaler.rst
@@ -36,9 +36,9 @@ We'll create an instance with some data, too. To avoid having to set up a
 transformation utility, we'll simply provide the output value directly.
 
     >>> from plone.app.textfield.value import RichTextValue
-    >>> from zope.interface import implements
-    >>> class TestContent(object):
-    ...     implements(ITestContent)
+    >>> from zope.interface import implementer
+    >>> @implementer(ITestContent)
+    ... class TestContent(object):
     ...     _text = RichTextValue(u"Some \xd8 plain text", 'text/plain', 'text/html', 'utf-8', u'<p>Some \xd8 plain text</p>')
 
     >>> t = TestContent()
diff --git a/plone/app/textfield/tests.py b/plone/app/textfield/tests.py
index 0f3ad13..caff931 100644
--- a/plone/app/textfield/tests.py
+++ b/plone/app/textfield/tests.py
@@ -1,11 +1,12 @@
-import doctest
-import unittest
-
-import plone.app.textfield
-from plone.app.testing.bbb import PloneTestCase
+# -*- coding: utf-8 -*-
 from plone.app import testing
+from plone.app.testing.bbb import PloneTestCase
 from plone.testing import layered
 
+import doctest
+import plone.app.textfield
+import unittest
+
 
 class IntegrationFixture(testing.PloneSandboxLayer):
 
diff --git a/plone/app/textfield/transform.py b/plone/app/textfield/transform.py
index 6c622e6..5bbc1d6 100644
--- a/plone/app/textfield/transform.py
+++ b/plone/app/textfield/transform.py
@@ -1,11 +1,14 @@
-# from Products.statusmessages.interfaces import IStatusMessage
+# -*- coding: utf-8 -*-
+from plone.app.textfield.interfaces import ITransformer
+from plone.app.textfield.interfaces import TransformError
 from Products.CMFCore.utils import getToolByName
 from ZODB.POSException import ConflictError
-from plone.app.textfield.interfaces import ITransformer, TransformError
 from zope.component.hooks import getSite
 from zope.interface import implementer
+
 import logging
 
+
 LOG = logging.getLogger('plone.app.textfield')
 
 
diff --git a/plone/app/textfield/utils.py b/plone/app/textfield/utils.py
index a4d7c2a..fc2227f 100644
--- a/plone/app/textfield/utils.py
+++ b/plone/app/textfield/utils.py
@@ -1,5 +1,7 @@
-from zope.component.hooks import getSite
+# -*- coding: utf-8 -*-
 from Products.CMFCore.utils import getToolByName
+from zope.component.hooks import getSite
+
 
 try:
     from Products.CMFPlone.interfaces import IMarkupSchema
diff --git a/plone/app/textfield/value.py b/plone/app/textfield/value.py
index dceae8a..80185ac 100644
--- a/plone/app/textfield/value.py
+++ b/plone/app/textfield/value.py
@@ -1,10 +1,14 @@
-from Products.CMFPlone.utils import safe_unicode
+# -*- coding: utf-8 -*-
 from persistent import Persistent
-from plone.app.textfield.interfaces import IRichTextValue, ITransformer
+from plone.app.textfield.interfaces import IRichTextValue
+from plone.app.textfield.interfaces import ITransformer
+from Products.CMFPlone.utils import safe_unicode
 from zope.component.hooks import getSite
 from zope.interface import implementer
+
 import logging
 
+
 LOG = logging.getLogger('plone.app.textfield')
 
 
diff --git a/plone/app/textfield/widget.py b/plone/app/textfield/widget.py
index 5185471..861d7a7 100644
--- a/plone/app/textfield/widget.py
+++ b/plone/app/textfield/widget.py
@@ -1,9 +1,11 @@
+# -*- coding: utf-8 -*-
 from Acquisition import ImplicitAcquisitionWrapper
-from UserDict import UserDict
-from plone.app.textfield.interfaces import IRichText, IRichTextValue
+from plone.app.textfield.interfaces import IRichText
+from plone.app.textfield.interfaces import IRichTextValue
 from plone.app.textfield.utils import getAllowedContentTypes
 from plone.app.textfield.value import RichTextValue
 from plone.app.z3cform.utils import closest_content
+from UserDict import UserDict
 from z3c.form.browser.textarea import TextAreaWidget
 from z3c.form.browser.widget import addFieldClass
 from z3c.form.converter import BaseDataConverter
@@ -12,8 +14,9 @@
 from z3c.form.interfaces import ITextAreaWidget
 from z3c.form.interfaces import NOVALUE
 from z3c.form.widget import FieldWidget
-from zope.component import adapts, adapter
-from zope.interface import implementer_only, implementer
+from zope.component import adapter
+from zope.interface import implementer
+from zope.interface import implementer_only
 
 
 class IRichTextWidget(ITextAreaWidget):
@@ -77,8 +80,6 @@ class RichTextConverter(BaseDataConverter):
     """Data converter for the RichTextWidget
     """
 
-    adapts(IRichText, IRichTextWidget)
-
     def toWidgetValue(self, value):
         if IRichTextValue.providedBy(value):
             return value
diff --git a/plone/app/textfield/widget.zcml b/plone/app/textfield/widget.zcml
index 3381c63..2775ab4 100644
--- a/plone/app/textfield/widget.zcml
+++ b/plone/app/textfield/widget.zcml
@@ -8,7 +8,9 @@
   <include package="z3c.form" />
 
   <adapter factory=".widget.RichTextFieldWidget" />
-  <adapter factory=".widget.RichTextConverter" />
+  <adapter factory=".widget.RichTextConverter"
+           for=".interfaces.IRichText
+                .widget.IRichTextWidget"/>
 
   <class class=".widget.RichTextWidget">
       <require
diff --git a/setup.py b/setup.py
index a356944..0f3dcdb 100644
--- a/setup.py
+++ b/setup.py
@@ -1,4 +1,6 @@
-from setuptools import setup, find_packages
+# -*- coding: utf-8 -*-
+from setuptools import find_packages
+from setuptools import setup
 
 version = '1.2.8.dev0'
 


Repository: plone.app.textfield


Branch: refs/heads/master
Date: 2017-01-25T18:24:43+01:00
Author: agitator (agitator) <hpeter@agitator.com>
Commit: https://github.com/plone/plone.app.textfield/commit/957d3d8f6c9a37d584d90cd7556c2a8242e8464f

Merge pull request #19 from plone/jensens-cleanup

Cleanup

Files changed:
M CHANGES.rst
M plone/__init__.py
M plone/app/__init__.py
M plone/app/textfield/__init__.py
M plone/app/textfield/browser.py
M plone/app/textfield/editor.py
M plone/app/textfield/field.rst
M plone/app/textfield/handler.py
M plone/app/textfield/interfaces.py
M plone/app/textfield/marshaler.py
M plone/app/textfield/marshaler.rst
M plone/app/textfield/tests.py
M plone/app/textfield/transform.py
M plone/app/textfield/utils.py
M plone/app/textfield/value.py
M plone/app/textfield/widget.py
M plone/app/textfield/widget.zcml
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 8d19b19..7e5d9b6 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,12 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Cleanup:
+  Use more zope.interface decorators,
+  add utf8 headers,
+  isort imports,
+  zcml conditions are enough.
+  [jensens]
 
 
 1.2.7 (2016-08-10)
diff --git a/plone/__init__.py b/plone/__init__.py
index de40ea7..68c04af 100644
--- a/plone/__init__.py
+++ b/plone/__init__.py
@@ -1 +1,2 @@
+# -*- coding: utf-8 -*-
 __import__('pkg_resources').declare_namespace(__name__)
diff --git a/plone/app/__init__.py b/plone/app/__init__.py
index de40ea7..68c04af 100644
--- a/plone/app/__init__.py
+++ b/plone/app/__init__.py
@@ -1 +1,2 @@
+# -*- coding: utf-8 -*-
 __import__('pkg_resources').declare_namespace(__name__)
diff --git a/plone/app/textfield/__init__.py b/plone/app/textfield/__init__.py
index a4ab9da..eaef5a7 100644
--- a/plone/app/textfield/__init__.py
+++ b/plone/app/textfield/__init__.py
@@ -1,13 +1,16 @@
-from plone.app.textfield.interfaces import IRichText, IRichTextValue
+# -*- coding: utf-8 -*-
+from plone.app.textfield.interfaces import IRichText
+from plone.app.textfield.interfaces import IRichTextValue
 from plone.app.textfield.value import RichTextValue
 from zope.i18nmessageid.message import MessageFactory
-from zope.interface import Invalid
 from zope.interface import implementer
+from zope.interface import Invalid
 from zope.schema import Object
 from zope.schema._bootstrapinterfaces import ConstraintNotSatisfied
 from zope.schema.interfaces import IFromUnicode
 from zope.schema.interfaces import WrongType
 
+
 _ = MessageFactory('plone')
 
 
diff --git a/plone/app/textfield/browser.py b/plone/app/textfield/browser.py
index 7f167f6..b599391 100644
--- a/plone/app/textfield/browser.py
+++ b/plone/app/textfield/browser.py
@@ -1,6 +1,7 @@
+# -*- coding: utf-8 -*-
 from Acquisition import aq_inner
-from Products.Five.browser import BrowserView
 from plone.app.textfield.interfaces import ITransformer
+from Products.Five.browser import BrowserView
 
 
 class Transform(BrowserView):
diff --git a/plone/app/textfield/editor.py b/plone/app/textfield/editor.py
index 3bbfecd..2ab0b44 100644
--- a/plone/app/textfield/editor.py
+++ b/plone/app/textfield/editor.py
@@ -1,6 +1,7 @@
-from plone.app.textfield import RichText
+# -*- coding: utf-8 -*-
 from plone.app.textfield import _
 from plone.app.textfield import interfaces
+from plone.app.textfield import RichText
 from plone.schemaeditor.fields import FieldFactory
 from zope import schema
 from zope.interface import Attribute
diff --git a/plone/app/textfield/field.rst b/plone/app/textfield/field.rst
index 4c24ada..9f6b5ef 100644
--- a/plone/app/textfield/field.rst
+++ b/plone/app/textfield/field.rst
@@ -14,7 +14,7 @@ Using the field
 
 The field can be used much like any other field:
 
-    >>> from zope.interface import Interface, implements
+    >>> from zope.interface import Interface, implementer
     >>> from plone.app.textfield import RichText
 
     >>> class IContent(Interface):
@@ -46,8 +46,8 @@ These can be set when the field is constructed:
     >>> field = IContent['rich']
 
     >>> from persistent import Persistent
-    >>> class Content(Persistent):
-    ...     implements(IContent)
+    >>> @implementer(IContent)
+    ... class Content(Persistent):
     ...     def __init__(self, rich=None):
     ...         self.rich = rich
 
@@ -79,10 +79,10 @@ This package comes with a default transformer that uses
 Products.PortalTransforms, which in turn comes with Plone.
 
     >>> from plone.app.textfield.interfaces import ITransformer, TransformError
-    >>> from zope.component import adapts, provideAdapter
-    >>> class TestTransformer(object):
-    ...     implements(ITransformer)
-    ...     adapts(Interface)
+    >>> from zope.component import adapter, provideAdapter
+    >>> @implementer(ITransformer)
+    ... @adapter(Interface)
+    ... class TestTransformer(object):
     ...
     ...     def __init__(self, context):
     ...         self.context = context
diff --git a/plone/app/textfield/handler.py b/plone/app/textfield/handler.py
index ac6fa03..639e569 100644
--- a/plone/app/textfield/handler.py
+++ b/plone/app/textfield/handler.py
@@ -1,37 +1,34 @@
-try:
-    from plone.supermodel.exportimport import BaseHandler
-    HAVE_SUPERMODEL = True
-except ImportError:
-    HAVE_SUPERMODEL = False
+# -*- coding: utf-8 -*-
+from plone.app.textfield import RichText
+from plone.app.textfield.interfaces import IRichText
+from plone.supermodel.exportimport import BaseHandler
+from plone.supermodel.interfaces import IToUnicode
+from zope.component import adapter
+from zope.interface import implementer
 
-if HAVE_SUPERMODEL:
 
-    from zope.interface import implementer
-    from zope.component import adapts
-    from plone.app.textfield import RichText
-    from plone.supermodel.interfaces import IToUnicode
-    from plone.app.textfield.interfaces import IRichText
+class RichTextHandler_(BaseHandler):
+    """Special handling for the RichText field, to deal with 'default'
+    that may be unicode.
+    """
 
-    class RichTextHandler_(BaseHandler):
-        """Special handling for the RichText field, to deal with 'default'
-        that may be unicode.
-        """
+    # Don't read or write 'schema'
+    filteredAttributes = BaseHandler.filteredAttributes.copy()
+    filteredAttributes.update({'schema': 'rw'})
 
-        # Don't read or write 'schema'
-        filteredAttributes = BaseHandler.filteredAttributes.copy()
-        filteredAttributes.update({'schema': 'rw'})
+    def __init__(self, klass):
+        super(RichTextHandler_, self).__init__(klass)
 
-        def __init__(self, klass):
-            super(RichTextHandler_, self).__init__(klass)
 
-    @implementer(IToUnicode)
-    class RichTextToUnicode(object):
-        adapts(IRichText)
+@implementer(IToUnicode)
+@adapter(IRichText)
+class RichTextToUnicode(object):
 
-        def __init__(self, context):
-            self.context = context
+    def __init__(self, context):
+        self.context = context
 
-        def toUnicode(self, value):
-            return value.raw
+    def toUnicode(self, value):
+        return value.raw
 
-    RichTextHandler = RichTextHandler_(RichText)
+
+RichTextHandler = RichTextHandler_(RichText)
diff --git a/plone/app/textfield/interfaces.py b/plone/app/textfield/interfaces.py
index 3364f53..ac3b5ca 100644
--- a/plone/app/textfield/interfaces.py
+++ b/plone/app/textfield/interfaces.py
@@ -1,8 +1,10 @@
+# -*- coding: utf-8 -*-
 from zope import schema
 from zope.i18nmessageid.message import MessageFactory
 from zope.interface import Interface
 from zope.schema.interfaces import IObject
 
+
 _ = MessageFactory('plone')
 
 
diff --git a/plone/app/textfield/marshaler.py b/plone/app/textfield/marshaler.py
index baf0bdb..8457035 100644
--- a/plone/app/textfield/marshaler.py
+++ b/plone/app/textfield/marshaler.py
@@ -1,56 +1,49 @@
-try:
-    from plone.rfc822.defaultfields import BaseFieldMarshaler
-    HAVE_MARSHALER = True
-except ImportError:
-    HAVE_MARSHALER = False
-
-if HAVE_MARSHALER:
-
-    from zope.interface import Interface
-    from zope.component import adapts
-
-    from plone.app.textfield.interfaces import IRichText
-    from plone.app.textfield.value import RichTextValue
-
-    class RichTextFieldMarshaler(BaseFieldMarshaler):
-        """Field marshaler for plone.app.textfield values.
-        """
-
-        adapts(Interface, IRichText)
-
-        ascii = False
-
-        def encode(self, value, charset='utf-8', primary=False):
-            if value is None:
-                return
-            return value.raw.encode(charset)
-
-        def decode(
-                self,
-                value,
-                message=None,
-                charset='utf-8',
-                contentType=None,
-                primary=False):
-            try:
-                unicode_value = value.decode(charset)
-            except UnicodeEncodeError:
-                unicode_value = value  # was already unicode
-            return RichTextValue(
-                raw=unicode_value,
-                mimeType=contentType or self.field.default_mime_type,
-                outputMimeType=self.field.output_mime_type,
-                encoding=charset
-            )
-
-        def getContentType(self):
-            value = self._query()
-            if value is None:
-                return None
-            return value.mimeType
-
-        def getCharset(self, default='utf-8'):
-            value = self._query()
-            if value is None:
-                return None
-            return value.encoding
+# -*- coding: utf-8 -*-
+from plone.app.textfield.interfaces import IRichText
+from plone.app.textfield.value import RichTextValue
+from plone.rfc822.defaultfields import BaseFieldMarshaler
+from zope.component import adapter
+from zope.interface import Interface
+
+
+@adapter(Interface, IRichText)
+class RichTextFieldMarshaler(BaseFieldMarshaler):
+    """Field marshaler for plone.app.textfield values.
+    """
+
+    ascii = False
+
+    def encode(self, value, charset='utf-8', primary=False):
+        if value is None:
+            return
+        return value.raw.encode(charset)
+
+    def decode(
+            self,
+            value,
+            message=None,
+            charset='utf-8',
+            contentType=None,
+            primary=False):
+        try:
+            unicode_value = value.decode(charset)
+        except UnicodeEncodeError:
+            unicode_value = value  # was already unicode
+        return RichTextValue(
+            raw=unicode_value,
+            mimeType=contentType or self.field.default_mime_type,
+            outputMimeType=self.field.output_mime_type,
+            encoding=charset
+        )
+
+    def getContentType(self):
+        value = self._query()
+        if value is None:
+            return None
+        return value.mimeType
+
+    def getCharset(self, default='utf-8'):
+        value = self._query()
+        if value is None:
+            return None
+        return value.encoding
diff --git a/plone/app/textfield/marshaler.rst b/plone/app/textfield/marshaler.rst
index 1f6ee3d..f6e122a 100644
--- a/plone/app/textfield/marshaler.rst
+++ b/plone/app/textfield/marshaler.rst
@@ -36,9 +36,9 @@ We'll create an instance with some data, too. To avoid having to set up a
 transformation utility, we'll simply provide the output value directly.
 
     >>> from plone.app.textfield.value import RichTextValue
-    >>> from zope.interface import implements
-    >>> class TestContent(object):
-    ...     implements(ITestContent)
+    >>> from zope.interface import implementer
+    >>> @implementer(ITestContent)
+    ... class TestContent(object):
     ...     _text = RichTextValue(u"Some \xd8 plain text", 'text/plain', 'text/html', 'utf-8', u'<p>Some \xd8 plain text</p>')
 
     >>> t = TestContent()
diff --git a/plone/app/textfield/tests.py b/plone/app/textfield/tests.py
index 0f3ad13..caff931 100644
--- a/plone/app/textfield/tests.py
+++ b/plone/app/textfield/tests.py
@@ -1,11 +1,12 @@
-import doctest
-import unittest
-
-import plone.app.textfield
-from plone.app.testing.bbb import PloneTestCase
+# -*- coding: utf-8 -*-
 from plone.app import testing
+from plone.app.testing.bbb import PloneTestCase
 from plone.testing import layered
 
+import doctest
+import plone.app.textfield
+import unittest
+
 
 class IntegrationFixture(testing.PloneSandboxLayer):
 
diff --git a/plone/app/textfield/transform.py b/plone/app/textfield/transform.py
index 6c622e6..5bbc1d6 100644
--- a/plone/app/textfield/transform.py
+++ b/plone/app/textfield/transform.py
@@ -1,11 +1,14 @@
-# from Products.statusmessages.interfaces import IStatusMessage
+# -*- coding: utf-8 -*-
+from plone.app.textfield.interfaces import ITransformer
+from plone.app.textfield.interfaces import TransformError
 from Products.CMFCore.utils import getToolByName
 from ZODB.POSException import ConflictError
-from plone.app.textfield.interfaces import ITransformer, TransformError
 from zope.component.hooks import getSite
 from zope.interface import implementer
+
 import logging
 
+
 LOG = logging.getLogger('plone.app.textfield')
 
 
diff --git a/plone/app/textfield/utils.py b/plone/app/textfield/utils.py
index a4d7c2a..fc2227f 100644
--- a/plone/app/textfield/utils.py
+++ b/plone/app/textfield/utils.py
@@ -1,5 +1,7 @@
-from zope.component.hooks import getSite
+# -*- coding: utf-8 -*-
 from Products.CMFCore.utils import getToolByName
+from zope.component.hooks import getSite
+
 
 try:
     from Products.CMFPlone.interfaces import IMarkupSchema
diff --git a/plone/app/textfield/value.py b/plone/app/textfield/value.py
index dceae8a..80185ac 100644
--- a/plone/app/textfield/value.py
+++ b/plone/app/textfield/value.py
@@ -1,10 +1,14 @@
-from Products.CMFPlone.utils import safe_unicode
+# -*- coding: utf-8 -*-
 from persistent import Persistent
-from plone.app.textfield.interfaces import IRichTextValue, ITransformer
+from plone.app.textfield.interfaces import IRichTextValue
+from plone.app.textfield.interfaces import ITransformer
+from Products.CMFPlone.utils import safe_unicode
 from zope.component.hooks import getSite
 from zope.interface import implementer
+
 import logging
 
+
 LOG = logging.getLogger('plone.app.textfield')
 
 
diff --git a/plone/app/textfield/widget.py b/plone/app/textfield/widget.py
index 5185471..861d7a7 100644
--- a/plone/app/textfield/widget.py
+++ b/plone/app/textfield/widget.py
@@ -1,9 +1,11 @@
+# -*- coding: utf-8 -*-
 from Acquisition import ImplicitAcquisitionWrapper
-from UserDict import UserDict
-from plone.app.textfield.interfaces import IRichText, IRichTextValue
+from plone.app.textfield.interfaces import IRichText
+from plone.app.textfield.interfaces import IRichTextValue
 from plone.app.textfield.utils import getAllowedContentTypes
 from plone.app.textfield.value import RichTextValue
 from plone.app.z3cform.utils import closest_content
+from UserDict import UserDict
 from z3c.form.browser.textarea import TextAreaWidget
 from z3c.form.browser.widget import addFieldClass
 from z3c.form.converter import BaseDataConverter
@@ -12,8 +14,9 @@
 from z3c.form.interfaces import ITextAreaWidget
 from z3c.form.interfaces import NOVALUE
 from z3c.form.widget import FieldWidget
-from zope.component import adapts, adapter
-from zope.interface import implementer_only, implementer
+from zope.component import adapter
+from zope.interface import implementer
+from zope.interface import implementer_only
 
 
 class IRichTextWidget(ITextAreaWidget):
@@ -77,8 +80,6 @@ class RichTextConverter(BaseDataConverter):
     """Data converter for the RichTextWidget
     """
 
-    adapts(IRichText, IRichTextWidget)
-
     def toWidgetValue(self, value):
         if IRichTextValue.providedBy(value):
             return value
diff --git a/plone/app/textfield/widget.zcml b/plone/app/textfield/widget.zcml
index 3381c63..2775ab4 100644
--- a/plone/app/textfield/widget.zcml
+++ b/plone/app/textfield/widget.zcml
@@ -8,7 +8,9 @@
   <include package="z3c.form" />
 
   <adapter factory=".widget.RichTextFieldWidget" />
-  <adapter factory=".widget.RichTextConverter" />
+  <adapter factory=".widget.RichTextConverter"
+           for=".interfaces.IRichText
+                .widget.IRichTextWidget"/>
 
   <class class=".widget.RichTextWidget">
       <require
diff --git a/setup.py b/setup.py
index a356944..0f3dcdb 100644
--- a/setup.py
+++ b/setup.py
@@ -1,4 +1,6 @@
-from setuptools import setup, find_packages
+# -*- coding: utf-8 -*-
+from setuptools import find_packages
+from setuptools import setup
 
 version = '1.2.8.dev0'
 


