Repository: plone.supermodel


Branch: refs/heads/master
Date: 2016-01-31T10:39:21+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.supermodel/commit/8a4d202e69ee99c6f777d48d14cec608247efae7

Add temporary fix for broken test:

  File "/Users/philip/workspace/coredev/src/plone.supermodel/plone/supermodel/model.py", line 87, in walk
    for child in schema.dependents.keys():
ConfigurationExecutionError: &lt;type 'exceptions.AttributeError'&gt;: 'VerifyingAdapterLookup' object has no attribute 'dependents'
  in:
  File "/Users/philip/workspace/coredev/src/plone.supermodel/plone/supermodel/configure.zcml", line 9.4-12.10
      &lt;zcml:customAction
          handler=".model.finalizeSchemas"
          order="9999999"
          /&gt;

Files changed:
M plone/supermodel/model.py

diff --git a/plone/supermodel/model.py b/plone/supermodel/model.py
index b693bb9..fc838a3 100644
--- a/plone/supermodel/model.py
+++ b/plone/supermodel/model.py
@@ -84,9 +84,23 @@ def finalizeSchemas(parent=Schema):
 
     def walk(schema):
         yield schema
-        for child in schema.dependents.keys():
-            for s in walk(child):
-                yield s
+        if getattr(schema, 'dependents', None) is None:
+            # This is just a temporary fix for a issue when running Plone-tests
+            # with zope4 (http://jenkins.plone.org/view/PLIPs/job/plip-zope4/).
+            # InterfaceClass
+            # plone.dexterity.schema.generated.plone_0_LockableType
+            # has zope.interface.adapter.VerifyingAdapterLookup as a
+            # dependent which again has no dependents.
+            # Maybe VerifyingAdapterLookup should not be here or it should have
+            # dependents (a weakref.WeakKeyDictionary())
+            # Maybe also related to the comment below which states that the
+            # first base class of a schema must be a SchemaClass.
+            logger.info(
+                'This should not happen: "%s" has no dependents!' % schema)
+        else:
+            for child in schema.dependents.keys():
+                for s in walk(child):
+                    yield s
     schemas = set(walk(parent))
     for schema in schemas:
         if hasattr(schema, '_SchemaClass_finalize'):


Repository: plone.supermodel


Branch: refs/heads/master
Date: 2016-02-02T13:25:06+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.supermodel/commit/5716d6aadeeea17afa94f1b378c0e404fa060ce2

changelog

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index b845612..ef9acac 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ New:
 
 Fixes:
 
-- *add item here*
+- Add temporary fix for a test failure within a Zope 4 environment.
+  [pbauer]
 
 
 1.2.6 (2014-10-20)


Repository: plone.supermodel


Branch: refs/heads/master
Date: 2016-02-04T11:32:18+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.supermodel/commit/d53fe5c486e7a71d2ce2284cee268686744a92dd

Merge pull request #13 from plone/thet-zope4

Zope4

Files changed:
M CHANGES.rst
M plone/supermodel/model.py

diff --git a/CHANGES.rst b/CHANGES.rst
index b845612..ef9acac 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ New:
 
 Fixes:
 
-- *add item here*
+- Add temporary fix for a test failure within a Zope 4 environment.
+  [pbauer]
 
 
 1.2.6 (2014-10-20)
diff --git a/plone/supermodel/model.py b/plone/supermodel/model.py
index b693bb9..fc838a3 100644
--- a/plone/supermodel/model.py
+++ b/plone/supermodel/model.py
@@ -84,9 +84,23 @@ def finalizeSchemas(parent=Schema):
 
     def walk(schema):
         yield schema
-        for child in schema.dependents.keys():
-            for s in walk(child):
-                yield s
+        if getattr(schema, 'dependents', None) is None:
+            # This is just a temporary fix for a issue when running Plone-tests
+            # with zope4 (http://jenkins.plone.org/view/PLIPs/job/plip-zope4/).
+            # InterfaceClass
+            # plone.dexterity.schema.generated.plone_0_LockableType
+            # has zope.interface.adapter.VerifyingAdapterLookup as a
+            # dependent which again has no dependents.
+            # Maybe VerifyingAdapterLookup should not be here or it should have
+            # dependents (a weakref.WeakKeyDictionary())
+            # Maybe also related to the comment below which states that the
+            # first base class of a schema must be a SchemaClass.
+            logger.info(
+                'This should not happen: "%s" has no dependents!' % schema)
+        else:
+            for child in schema.dependents.keys():
+                for s in walk(child):
+                    yield s
     schemas = set(walk(parent))
     for schema in schemas:
         if hasattr(schema, '_SchemaClass_finalize'):


