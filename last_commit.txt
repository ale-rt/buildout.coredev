Repository: plone.uuid


Branch: refs/heads/master
Date: 2016-05-18T13:46:04+02:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.uuid/commit/805b71ef5762ab682e69c9f0ffb8c4ac9ce4c13f

Fixed issues preventing tests to pass on Python 3

Files changed:
M CHANGES.rst
M plone/uuid/adapter.py
M plone/uuid/browser.py
M plone/uuid/generator.py
M plone/uuid/tests.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 91530cb..c1022d3 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -9,6 +9,8 @@ Changelog
 - Update setup.py url to point to github.
   [esteele]
 
+- Fixed issues preventing tests passing on Python 3
+  [datakurre]
 
 1.0.3 (2012-05-31)
 ------------------
diff --git a/plone/uuid/adapter.py b/plone/uuid/adapter.py
index a3fe732..bd3cebf 100644
--- a/plone/uuid/adapter.py
+++ b/plone/uuid/adapter.py
@@ -10,9 +10,9 @@ def attributeUUID(context):
     return getattr(context, interfaces.ATTRIBUTE_NAME, None)
 
 
+@interface.implementer(interfaces.IMutableUUID)
+@component.adapter(interfaces.IAttributeUUID)
 class MutableAttributeUUID(object):
-    interface.implements(interfaces.IMutableUUID)
-    component.adapts(interfaces.IAttributeUUID)
 
     def __init__(self, context):
         self.context = context
diff --git a/plone/uuid/browser.py b/plone/uuid/browser.py
index 39769cc..5a24bd0 100644
--- a/plone/uuid/browser.py
+++ b/plone/uuid/browser.py
@@ -1,10 +1,16 @@
 from zope.publisher.browser import BrowserView
 from plone.uuid.interfaces import IUUID
 
+import sys
+if sys.version_info >= (3,):
+    text_type = str
+else:
+    text_type = unicode
+
 
 class UUIDView(BrowserView):
     """A simple browser view that renders the UUID of its context
     """
 
     def __call__(self):
-        return unicode(IUUID(self.context, u""))
+        return text_type(IUUID(self.context, u""))
diff --git a/plone/uuid/generator.py b/plone/uuid/generator.py
index da7c313..371ee70 100644
--- a/plone/uuid/generator.py
+++ b/plone/uuid/generator.py
@@ -1,16 +1,15 @@
 import uuid
 
-from zope.interface import implements
+from zope.interface import implementer
 from plone.uuid.interfaces import IUUIDGenerator
 
 
+@implementer(IUUIDGenerator)
 class UUID1Generator(object):
     """Default UUID implementation.
 
     Uses uuid.uuid4()
     """
 
-    implements(IUUIDGenerator)
-
     def __call__(self):
         return uuid.uuid4().hex
diff --git a/plone/uuid/tests.py b/plone/uuid/tests.py
index 863475d..0f603a4 100644
--- a/plone/uuid/tests.py
+++ b/plone/uuid/tests.py
@@ -1,5 +1,11 @@
 import unittest
 
+import sys
+if sys.version_info >= (3,):
+    text_type = str
+else:
+    text_type = unicode
+
 
 class TestUUID(unittest.TestCase):
 
@@ -32,13 +38,14 @@ def test_default_generator(self):
 
     def test_attribute_uuid_not_set(self):
 
-        from zope.interface import implements
+        from zope.interface import implementer
 
         from plone.uuid.interfaces import IAttributeUUID
         from plone.uuid.interfaces import IUUID
 
+        @implementer(IAttributeUUID)
         class Context(object):
-            implements(IAttributeUUID)
+            pass
 
         context = Context()
 
@@ -47,7 +54,7 @@ class Context(object):
 
     def test_attribute_uuid_create_handler(self):
 
-        from zope.interface import implements
+        from zope.interface import implementer
         from zope.event import notify
         from zope.lifecycleevent import ObjectCreatedEvent
         from zope.lifecycleevent import ObjectCopiedEvent
@@ -56,8 +63,9 @@ def test_attribute_uuid_create_handler(self):
         from plone.uuid.interfaces import IUUID
         from plone.uuid.interfaces import ATTRIBUTE_NAME
 
+        @implementer(IAttributeUUID)
         class Context(object):
-            implements(IAttributeUUID)
+            pass
 
         context = Context()
         notify(ObjectCreatedEvent(context))
@@ -81,14 +89,15 @@ class Context(object):
 
     def test_uuid_view_not_set(self):
 
-        from zope.interface import implements
+        from zope.interface import implementer
         from zope.component import getMultiAdapter
         from zope.publisher.browser import TestRequest
 
         from plone.uuid.interfaces import IAttributeUUID
 
+        @implementer(IAttributeUUID)
         class Context(object):
-            implements(IAttributeUUID)
+            pass
 
         context = Context()
 
@@ -97,11 +106,11 @@ class Context(object):
         response = view()
 
         self.assertEquals(u"", response)
-        self.assertTrue(isinstance(response, unicode))
+        self.assertTrue(isinstance(response, text_type))
 
     def test_uuid_view(self):
 
-        from zope.interface import implements
+        from zope.interface import implementer
         from zope.component import getMultiAdapter
         from zope.event import notify
         from zope.lifecycleevent import ObjectCreatedEvent
@@ -110,8 +119,9 @@ def test_uuid_view(self):
         from plone.uuid.interfaces import IAttributeUUID
         from plone.uuid.interfaces import IUUID
 
+        @implementer(IAttributeUUID)
         class Context(object):
-            implements(IAttributeUUID)
+            pass
 
         context = Context()
         notify(ObjectCreatedEvent(context))
@@ -122,8 +132,8 @@ class Context(object):
         view = getMultiAdapter((context, request), name=u"uuid")
         response = view()
 
-        self.assertEquals(unicode(uuid), response)
-        self.assertTrue(isinstance(response, unicode))
+        self.assertEquals(text_type(uuid), response)
+        self.assertTrue(isinstance(response, text_type))
 
     def test_uuid_mutable(self):
         from zope import interface
@@ -131,8 +141,9 @@ def test_uuid_mutable(self):
         from zope import event
         from plone.uuid import interfaces
 
+        @interface.implementer(interfaces.IAttributeUUID)
         class Context(object):
-            interface.implements(interfaces.IAttributeUUID)
+            pass
 
         context = Context()
         event.notify(lifecycleevent.ObjectCreatedEvent(context))
diff --git a/setup.py b/setup.py
index 60c924f..7a2b71c 100644
--- a/setup.py
+++ b/setup.py
@@ -22,6 +22,7 @@
         "License :: OSI Approved :: BSD License",
         "Programming Language :: Python :: 2.6",
         "Programming Language :: Python :: 2.7",
+        "Programming Language :: Python :: 3.5",
     ],
     keywords='plone uuid',
     author='Martin Aspeli',


Repository: plone.uuid


Branch: refs/heads/master
Date: 2016-05-31T21:44:45+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.uuid/commit/d53f2a5e16c6b17e094b6129ebbf2ba748b4035d

Merge pull request #3 from plone/pyrenees-python3

Fixed issues preventing tests to pass on Python 3

Files changed:
M CHANGES.rst
M plone/uuid/adapter.py
M plone/uuid/browser.py
M plone/uuid/generator.py
M plone/uuid/tests.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 91530cb..c1022d3 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -9,6 +9,8 @@ Changelog
 - Update setup.py url to point to github.
   [esteele]
 
+- Fixed issues preventing tests passing on Python 3
+  [datakurre]
 
 1.0.3 (2012-05-31)
 ------------------
diff --git a/plone/uuid/adapter.py b/plone/uuid/adapter.py
index a3fe732..bd3cebf 100644
--- a/plone/uuid/adapter.py
+++ b/plone/uuid/adapter.py
@@ -10,9 +10,9 @@ def attributeUUID(context):
     return getattr(context, interfaces.ATTRIBUTE_NAME, None)
 
 
+@interface.implementer(interfaces.IMutableUUID)
+@component.adapter(interfaces.IAttributeUUID)
 class MutableAttributeUUID(object):
-    interface.implements(interfaces.IMutableUUID)
-    component.adapts(interfaces.IAttributeUUID)
 
     def __init__(self, context):
         self.context = context
diff --git a/plone/uuid/browser.py b/plone/uuid/browser.py
index 39769cc..5a24bd0 100644
--- a/plone/uuid/browser.py
+++ b/plone/uuid/browser.py
@@ -1,10 +1,16 @@
 from zope.publisher.browser import BrowserView
 from plone.uuid.interfaces import IUUID
 
+import sys
+if sys.version_info >= (3,):
+    text_type = str
+else:
+    text_type = unicode
+
 
 class UUIDView(BrowserView):
     """A simple browser view that renders the UUID of its context
     """
 
     def __call__(self):
-        return unicode(IUUID(self.context, u""))
+        return text_type(IUUID(self.context, u""))
diff --git a/plone/uuid/generator.py b/plone/uuid/generator.py
index da7c313..371ee70 100644
--- a/plone/uuid/generator.py
+++ b/plone/uuid/generator.py
@@ -1,16 +1,15 @@
 import uuid
 
-from zope.interface import implements
+from zope.interface import implementer
 from plone.uuid.interfaces import IUUIDGenerator
 
 
+@implementer(IUUIDGenerator)
 class UUID1Generator(object):
     """Default UUID implementation.
 
     Uses uuid.uuid4()
     """
 
-    implements(IUUIDGenerator)
-
     def __call__(self):
         return uuid.uuid4().hex
diff --git a/plone/uuid/tests.py b/plone/uuid/tests.py
index 863475d..0f603a4 100644
--- a/plone/uuid/tests.py
+++ b/plone/uuid/tests.py
@@ -1,5 +1,11 @@
 import unittest
 
+import sys
+if sys.version_info >= (3,):
+    text_type = str
+else:
+    text_type = unicode
+
 
 class TestUUID(unittest.TestCase):
 
@@ -32,13 +38,14 @@ def test_default_generator(self):
 
     def test_attribute_uuid_not_set(self):
 
-        from zope.interface import implements
+        from zope.interface import implementer
 
         from plone.uuid.interfaces import IAttributeUUID
         from plone.uuid.interfaces import IUUID
 
+        @implementer(IAttributeUUID)
         class Context(object):
-            implements(IAttributeUUID)
+            pass
 
         context = Context()
 
@@ -47,7 +54,7 @@ class Context(object):
 
     def test_attribute_uuid_create_handler(self):
 
-        from zope.interface import implements
+        from zope.interface import implementer
         from zope.event import notify
         from zope.lifecycleevent import ObjectCreatedEvent
         from zope.lifecycleevent import ObjectCopiedEvent
@@ -56,8 +63,9 @@ def test_attribute_uuid_create_handler(self):
         from plone.uuid.interfaces import IUUID
         from plone.uuid.interfaces import ATTRIBUTE_NAME
 
+        @implementer(IAttributeUUID)
         class Context(object):
-            implements(IAttributeUUID)
+            pass
 
         context = Context()
         notify(ObjectCreatedEvent(context))
@@ -81,14 +89,15 @@ class Context(object):
 
     def test_uuid_view_not_set(self):
 
-        from zope.interface import implements
+        from zope.interface import implementer
         from zope.component import getMultiAdapter
         from zope.publisher.browser import TestRequest
 
         from plone.uuid.interfaces import IAttributeUUID
 
+        @implementer(IAttributeUUID)
         class Context(object):
-            implements(IAttributeUUID)
+            pass
 
         context = Context()
 
@@ -97,11 +106,11 @@ class Context(object):
         response = view()
 
         self.assertEquals(u"", response)
-        self.assertTrue(isinstance(response, unicode))
+        self.assertTrue(isinstance(response, text_type))
 
     def test_uuid_view(self):
 
-        from zope.interface import implements
+        from zope.interface import implementer
         from zope.component import getMultiAdapter
         from zope.event import notify
         from zope.lifecycleevent import ObjectCreatedEvent
@@ -110,8 +119,9 @@ def test_uuid_view(self):
         from plone.uuid.interfaces import IAttributeUUID
         from plone.uuid.interfaces import IUUID
 
+        @implementer(IAttributeUUID)
         class Context(object):
-            implements(IAttributeUUID)
+            pass
 
         context = Context()
         notify(ObjectCreatedEvent(context))
@@ -122,8 +132,8 @@ class Context(object):
         view = getMultiAdapter((context, request), name=u"uuid")
         response = view()
 
-        self.assertEquals(unicode(uuid), response)
-        self.assertTrue(isinstance(response, unicode))
+        self.assertEquals(text_type(uuid), response)
+        self.assertTrue(isinstance(response, text_type))
 
     def test_uuid_mutable(self):
         from zope import interface
@@ -131,8 +141,9 @@ def test_uuid_mutable(self):
         from zope import event
         from plone.uuid import interfaces
 
+        @interface.implementer(interfaces.IAttributeUUID)
         class Context(object):
-            interface.implements(interfaces.IAttributeUUID)
+            pass
 
         context = Context()
         event.notify(lifecycleevent.ObjectCreatedEvent(context))
diff --git a/setup.py b/setup.py
index 60c924f..7a2b71c 100644
--- a/setup.py
+++ b/setup.py
@@ -22,6 +22,7 @@
         "License :: OSI Approved :: BSD License",
         "Programming Language :: Python :: 2.6",
         "Programming Language :: Python :: 2.7",
+        "Programming Language :: Python :: 3.5",
     ],
     keywords='plone uuid',
     author='Martin Aspeli',


