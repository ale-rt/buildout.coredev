Repository: archetypes.multilingual


Branch: refs/heads/master
Date: 2016-07-05T23:10:26+02:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/archetypes.multilingual/commit/ca70c942512a05f694783de9ede3df0b9256572e

Use zope.interface decorator

This not only makes code more pleasent to read,
but also makes the code python 3 compatible
(while maintaining python 2 compatibility).

Files changed:
M CHANGES.rst
M archetypes/multilingual/cloner.py
M archetypes/multilingual/language.py
M archetypes/multilingual/utils.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 656aca1..a03c6be 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New:
 
 Fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 3.0.2 (2016-02-26)
diff --git a/archetypes/multilingual/cloner.py b/archetypes/multilingual/cloner.py
index 8a49bf4..55d2f9a 100644
--- a/archetypes/multilingual/cloner.py
+++ b/archetypes/multilingual/cloner.py
@@ -4,10 +4,9 @@
 from zope import interface
 
 
+@interface.implementer(ITranslationCloner)
 class Cloner(object):
 
-    interface.implements(ITranslationCloner)
-
     def __init__(self, context):
         self.context = context
 
diff --git a/archetypes/multilingual/language.py b/archetypes/multilingual/language.py
index ada603d..59f17d8 100644
--- a/archetypes/multilingual/language.py
+++ b/archetypes/multilingual/language.py
@@ -7,10 +7,9 @@
 from zope.component.hooks import getSite
 
 
+@interface.implementer(ILanguage)
 class ATLanguage(object):
 
-    interface.implements(ILanguage)
-
     def __init__(self, context):
         self.context = context
 
diff --git a/archetypes/multilingual/utils.py b/archetypes/multilingual/utils.py
index 0dea87f..2c4d53c 100644
--- a/archetypes/multilingual/utils.py
+++ b/archetypes/multilingual/utils.py
@@ -3,8 +3,8 @@
 from zope import interface
 
 
+@interface.implementer(ILanguageIndependentFieldsManager)
 class LanguageIndependentFieldsManager(object):
-    interface.implements(ILanguageIndependentFieldsManager)
 
     def __init__(self, context):
         self.context = context


Repository: archetypes.multilingual


Branch: refs/heads/master
Date: 2016-07-09T08:52:07+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/archetypes.multilingual/commit/51eb7761ed5dbae983ac8d156b231e04672c92bc

Merge pull request #21 from plone/gforcada-use-zope-decorators

Use zope.interface decorator

Files changed:
M CHANGES.rst
M archetypes/multilingual/cloner.py
M archetypes/multilingual/language.py
M archetypes/multilingual/utils.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 656aca1..a03c6be 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New:
 
 Fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 3.0.2 (2016-02-26)
diff --git a/archetypes/multilingual/cloner.py b/archetypes/multilingual/cloner.py
index 8a49bf4..55d2f9a 100644
--- a/archetypes/multilingual/cloner.py
+++ b/archetypes/multilingual/cloner.py
@@ -4,10 +4,9 @@
 from zope import interface
 
 
+@interface.implementer(ITranslationCloner)
 class Cloner(object):
 
-    interface.implements(ITranslationCloner)
-
     def __init__(self, context):
         self.context = context
 
diff --git a/archetypes/multilingual/language.py b/archetypes/multilingual/language.py
index ada603d..59f17d8 100644
--- a/archetypes/multilingual/language.py
+++ b/archetypes/multilingual/language.py
@@ -7,10 +7,9 @@
 from zope.component.hooks import getSite
 
 
+@interface.implementer(ILanguage)
 class ATLanguage(object):
 
-    interface.implements(ILanguage)
-
     def __init__(self, context):
         self.context = context
 
diff --git a/archetypes/multilingual/utils.py b/archetypes/multilingual/utils.py
index 0dea87f..2c4d53c 100644
--- a/archetypes/multilingual/utils.py
+++ b/archetypes/multilingual/utils.py
@@ -3,8 +3,8 @@
 from zope import interface
 
 
+@interface.implementer(ILanguageIndependentFieldsManager)
 class LanguageIndependentFieldsManager(object):
-    interface.implements(ILanguageIndependentFieldsManager)
 
     def __init__(self, context):
         self.context = context


