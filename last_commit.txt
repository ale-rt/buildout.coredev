Repository: plone.formwidget.autocomplete


Branch: refs/heads/master
Date: 2016-07-05T23:15:52+02:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.formwidget.autocomplete/commit/251a042c6a9df6054a01d8a5a8eb9b0427c69300

Use zope.interface decorator

This not only makes code more pleasent to read,
but also makes the code python 3 compatible
(while maintaining python 2 compatibility).

Files changed:
M CHANGES.rst
M plone/formwidget/autocomplete/demo.py
M plone/formwidget/autocomplete/widget.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 96184bb..58d1214 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -13,6 +13,8 @@ Fixes:
 - Update setup.py url to point to github.
   [esteele]
 
+- Use zope.interface decorator.
+  [gforcada]
 
 1.2.9 (2016-02-09)
 ------------------
diff --git a/plone/formwidget/autocomplete/demo.py b/plone/formwidget/autocomplete/demo.py
index 1186b06..f62b8b3 100644
--- a/plone/formwidget/autocomplete/demo.py
+++ b/plone/formwidget/autocomplete/demo.py
@@ -3,7 +3,7 @@
 from z3c.form import form, button, field
 from z3c.formwidget.query.interfaces import IQuerySource
 from zope.component import adapts
-from zope.interface import Interface, implements
+from zope.interface import Interface, implementer
 from zope import schema
 from zope.schema.interfaces import IContextSourceBinder
 from zope.schema.vocabulary import SimpleVocabulary
@@ -12,8 +12,8 @@
 from plone.formwidget.autocomplete import AutocompleteMultiFieldWidget
 
 
+@implementer(IQuerySource)
 class KeywordSource(object):
-    implements(IQuerySource)
 
     def __init__(self, context):
         self.context = context
@@ -42,8 +42,8 @@ def search(self, query_string):
         return [self.getTerm(kw) for kw in self.keywords if q in kw.lower()]
 
 
+@implementer(IContextSourceBinder)
 class KeywordSourceBinder(object):
-    implements(IContextSourceBinder)
 
     def __call__(self, context):
         return KeywordSource(context)
@@ -58,8 +58,8 @@ class ITestForm(Interface):
         title=u"Multiple", source=KeywordSourceBinder()), required=False)
 
 
+@implementer(ITestForm)
 class TestAdapter(object):
-    implements(ITestForm)
     adapts(Interface)
 
     def __init__(self, context):
diff --git a/plone/formwidget/autocomplete/widget.py b/plone/formwidget/autocomplete/widget.py
index ad39a12..677282c 100644
--- a/plone/formwidget/autocomplete/widget.py
+++ b/plone/formwidget/autocomplete/widget.py
@@ -10,7 +10,7 @@
 import z3c.form.util
 from z3c.formwidget.query.widget import QuerySourceRadioWidget
 from z3c.formwidget.query.widget import QuerySourceCheckboxWidget
-from zope.interface import implementsOnly, implementer
+from zope.interface import implementer_only, implementer
 
 from plone.formwidget.autocomplete.interfaces import IAutocompleteWidget
 
@@ -68,8 +68,8 @@ def __call__(self):
                             for t in sorted(terms, key=lambda t: t.title)])
 
 
+@implementer_only(IAutocompleteWidget)
 class AutocompleteBase(Explicit):
-    implementsOnly(IAutocompleteWidget)
 
     security = ClassSecurityInfo()
     security.declareObjectPublic()


Repository: plone.formwidget.autocomplete


Branch: refs/heads/master
Date: 2016-07-07T00:52:19+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.formwidget.autocomplete/commit/2b10987fb951d7103135acdf5a583dbe63cf9183

Merge pull request #18 from plone/gforcada-use-zope-decorators

Use zope.interface decorator

Files changed:
M CHANGES.rst
M plone/formwidget/autocomplete/demo.py
M plone/formwidget/autocomplete/widget.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 96184bb..58d1214 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -13,6 +13,8 @@ Fixes:
 - Update setup.py url to point to github.
   [esteele]
 
+- Use zope.interface decorator.
+  [gforcada]
 
 1.2.9 (2016-02-09)
 ------------------
diff --git a/plone/formwidget/autocomplete/demo.py b/plone/formwidget/autocomplete/demo.py
index 1186b06..f62b8b3 100644
--- a/plone/formwidget/autocomplete/demo.py
+++ b/plone/formwidget/autocomplete/demo.py
@@ -3,7 +3,7 @@
 from z3c.form import form, button, field
 from z3c.formwidget.query.interfaces import IQuerySource
 from zope.component import adapts
-from zope.interface import Interface, implements
+from zope.interface import Interface, implementer
 from zope import schema
 from zope.schema.interfaces import IContextSourceBinder
 from zope.schema.vocabulary import SimpleVocabulary
@@ -12,8 +12,8 @@
 from plone.formwidget.autocomplete import AutocompleteMultiFieldWidget
 
 
+@implementer(IQuerySource)
 class KeywordSource(object):
-    implements(IQuerySource)
 
     def __init__(self, context):
         self.context = context
@@ -42,8 +42,8 @@ def search(self, query_string):
         return [self.getTerm(kw) for kw in self.keywords if q in kw.lower()]
 
 
+@implementer(IContextSourceBinder)
 class KeywordSourceBinder(object):
-    implements(IContextSourceBinder)
 
     def __call__(self, context):
         return KeywordSource(context)
@@ -58,8 +58,8 @@ class ITestForm(Interface):
         title=u"Multiple", source=KeywordSourceBinder()), required=False)
 
 
+@implementer(ITestForm)
 class TestAdapter(object):
-    implements(ITestForm)
     adapts(Interface)
 
     def __init__(self, context):
diff --git a/plone/formwidget/autocomplete/widget.py b/plone/formwidget/autocomplete/widget.py
index ad39a12..677282c 100644
--- a/plone/formwidget/autocomplete/widget.py
+++ b/plone/formwidget/autocomplete/widget.py
@@ -10,7 +10,7 @@
 import z3c.form.util
 from z3c.formwidget.query.widget import QuerySourceRadioWidget
 from z3c.formwidget.query.widget import QuerySourceCheckboxWidget
-from zope.interface import implementsOnly, implementer
+from zope.interface import implementer_only, implementer
 
 from plone.formwidget.autocomplete.interfaces import IAutocompleteWidget
 
@@ -68,8 +68,8 @@ def __call__(self):
                             for t in sorted(terms, key=lambda t: t.title)])
 
 
+@implementer_only(IAutocompleteWidget)
 class AutocompleteBase(Explicit):
-    implementsOnly(IAutocompleteWidget)
 
     security = ClassSecurityInfo()
     security.declareObjectPublic()


