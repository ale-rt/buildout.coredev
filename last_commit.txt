Repository: Products.CMFPlone


Branch: refs/heads/5.0.x
Date: 2016-09-01T10:16:11+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/9368e1b14446d820cba48fb434fe71f74ea9c65d

Fixed tests in combination with CMFFormController that includes hotfix.

This is from PloneHotfix20160830.

Test in combination with https://github.com/plone/Products.CMFFormController/pull/9

Files changed:
M CHANGES.rst
M Products/CMFPlone/tests/testSSOLogin.py
M Products/CMFPlone/tests/testSecurity.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 5572190..512897a 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -19,6 +19,8 @@ New features:
 
 Bug fixes:
 
+- Fixed tests in combination with newer CMFFormController which has the hotfix.  [maurits]
+
 - Apply security hotfix 20160830 for ``@@plone-root-login``.  [maurits]
 
 - Apply security hotfix 20160830 for ``isURLInPortal``.  [maurits]
diff --git a/Products/CMFPlone/tests/testSSOLogin.py b/Products/CMFPlone/tests/testSSOLogin.py
index 7ab3692..0e908f9 100644
--- a/Products/CMFPlone/tests/testSSOLogin.py
+++ b/Products/CMFPlone/tests/testSSOLogin.py
@@ -35,11 +35,19 @@ def afterSetUp(self):
             portal.acl_users.portal_role_manager.doAssignRoleToPrincipal(
                 TEST_USER_ID, role)
 
-        registry = self.login_portal.portal_registry
-
         # Configure the login portal to allow logins from our sites.
-        registry['plone.allow_external_login_sites'] = (self.portal.absolute_url(),
-                                                        self.another_portal.absolute_url())
+        login_registry = self.login_portal.portal_registry
+        login_registry['plone.allow_external_login_sites'] = (
+            self.portal.absolute_url(),
+            self.another_portal.absolute_url())
+
+        # The normal portal needs to allow logins from the login portal,
+        # otherwise the redirect_to action on login or logout will refuse to
+        # redirect externally.  This may need to be done on another_portal too,
+        # but for the current tests this is not needed.
+        portal_registry = self.portal.portal_registry
+        portal_registry['plone.allow_external_login_sites'] = (
+            self.login_portal.absolute_url(), )
 
         # Configure our sites to use the login portal for logins and logouts
         login_portal_url = self.login_portal.absolute_url()
diff --git a/Products/CMFPlone/tests/testSecurity.py b/Products/CMFPlone/tests/testSecurity.py
index e31e15c..853a548 100644
--- a/Products/CMFPlone/tests/testSecurity.py
+++ b/Products/CMFPlone/tests/testSecurity.py
@@ -154,10 +154,20 @@ def test_atat_does_not_return_anything(self):
         self.assertEqual(404, res.status)
 
     def test_go_back(self):
-        res = self.publish('/plone/front-page/go_back?last_referer=http://${request}',
-                           basic=SITE_OWNER_NAME + ':' + SITE_OWNER_PASSWORD)
+        res = self.publish(
+            '/plone/front-page/go_back?last_referer=http://${request}',
+            basic=SITE_OWNER_NAME + ':' + SITE_OWNER_PASSWORD)
+        # This used to show the request as location, so something like:
+        # http://<h3>form</h3><table>... and then all kinds of data from the
+        # request.  This was fixed in PloneHotfix20121106.  For this request
+        # you then got redirected to url http://${request} which your browser
+        # obviously does not know how to handle.
+        #
+        # In PloneHotfix20160830 this fix was kept, but additionally Plone
+        # refuses to redirect to external sites by default.
         self.assertEqual(302, res.status)
-        self.assertEqual('http://${request}', res.headers['location'][:17])
+        self.assertEqual(res.headers['location'],
+                         self.portal.absolute_url() + '/front-page')
 
     def test_getFolderContents(self):
         res = self.publish('/plone/getFolderContents')


