Repository: plone.app.folder


Branch: refs/heads/master
Date: 2017-11-05T23:55:42-05:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.folder/commit/7edcb755f3f48f8e5dd39c8c64454f06fe9ae2ce

adjust ReplaceableWrapper to work in Zope 4

Files changed:
M CHANGES.rst
M src/plone/app/folder/base.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 35928ed..72755b6 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Fix webdav PUT of index_html to work in Zope 4.
+  [davisagli]
 
 
 1.2.3 (2017-03-27)
diff --git a/src/plone/app/folder/base.py b/src/plone/app/folder/base.py
index 3f09679..f39f199 100644
--- a/src/plone/app/folder/base.py
+++ b/src/plone/app/folder/base.py
@@ -12,12 +12,13 @@
 from webdav.NullResource import NullResource
 from zope.interface import implementer
 from App.class_init import InitializeClass
+import Acquisition
 
 # to keep backward compatibility
 has_btree = 1
 
 
-class ReplaceableWrapper:
+class ReplaceableWrapper(Acquisition.Implicit):
     """ a wrapper around an object to make it replaceable """
 
     def __init__(self, ob):
@@ -28,6 +29,9 @@ def __getattr__(self, name):
             return REPLACEABLE
         return getattr(self.__ob, name)
 
+    def __repr__(self):
+        return repr(aq_base(self.__ob))
+
 
 @implementer(IOrderedContainer)
 class BaseBTreeFolder(OrderedBTreeFolderBase, BaseFolder):
@@ -74,8 +78,9 @@ def index_html(self, REQUEST=None, RESPONSE=None):
                 else:
                     raise AttributeError('index_html')
         # Acquire from parent
-        target = aq_parent(aq_inner(self)).aq_acquire('index_html')
-        return ReplaceableWrapper(aq_base(target).__of__(self))
+        parent = aq_parent(aq_inner(self))
+        target = parent.aq_acquire('index_html')
+        return ReplaceableWrapper(aq_base(target)).__of__(parent).__of__(self)
 
     index_html = ComputedAttribute(index_html, 1)
 


Repository: plone.app.folder


Branch: refs/heads/master
Date: 2017-11-06T20:40:06-05:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.folder/commit/e6aca05eaa3944b91b04c94b7ab928747062560b

avoid recursion

Files changed:
M src/plone/app/folder/base.py

diff --git a/src/plone/app/folder/base.py b/src/plone/app/folder/base.py
index f39f199..0771ae2 100644
--- a/src/plone/app/folder/base.py
+++ b/src/plone/app/folder/base.py
@@ -71,7 +71,9 @@ def index_html(self, REQUEST=None, RESPONSE=None):
                 method = request['REQUEST_METHOD']
                 if method == 'PUT':
                     # Very likely a WebDAV client trying to create something
-                    return ReplaceableWrapper(NullResource(self, 'index_html'))
+                    nr = NullResource(self, 'index_html')
+                    nr.__replaceable__ = REPLACEABLE
+                    return nr
                 elif method in ('GET', 'HEAD', 'POST'):
                     # Do nothing, let it go and acquire.
                     pass


Repository: plone.app.folder


Branch: refs/heads/master
Date: 2017-11-13T23:45:11-05:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.folder/commit/c199b335b918a28762c38531d932b557023cc00b

Yo dawg, I put a wrapper in your wrapper so you can unwrap while you unwrap

Files changed:
M src/plone/app/folder/base.py

diff --git a/src/plone/app/folder/base.py b/src/plone/app/folder/base.py
index 0771ae2..d8c1aee 100644
--- a/src/plone/app/folder/base.py
+++ b/src/plone/app/folder/base.py
@@ -27,10 +27,11 @@ def __init__(self, ob):
     def __getattr__(self, name):
         if name == '__replaceable__':
             return REPLACEABLE
-        return getattr(self.__ob, name)
+        ob = object.__getattribute__(self, '_ReplaceableWrapper__ob')
+        return getattr(ob, name)
 
     def __repr__(self):
-        return repr(aq_base(self.__ob))
+        return repr(object.__getattribute__(self, '_ReplaceableWrapper__ob'))
 
 
 @implementer(IOrderedContainer)
@@ -82,7 +83,7 @@ def index_html(self, REQUEST=None, RESPONSE=None):
         # Acquire from parent
         parent = aq_parent(aq_inner(self))
         target = parent.aq_acquire('index_html')
-        return ReplaceableWrapper(aq_base(target)).__of__(parent).__of__(self)
+        return ReplaceableWrapper(target).__of__(parent).__of__(self)
 
     index_html = ComputedAttribute(index_html, 1)
 


Repository: plone.app.folder


Branch: refs/heads/master
Date: 2017-11-15T10:37:17-05:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.folder/commit/00c0822d9e5f35ff9bfbd2eb0776adb16dd5479f

fix double wrapping

Files changed:
M src/plone/app/folder/base.py

diff --git a/src/plone/app/folder/base.py b/src/plone/app/folder/base.py
index d8c1aee..8c9be0f 100644
--- a/src/plone/app/folder/base.py
+++ b/src/plone/app/folder/base.py
@@ -83,7 +83,7 @@ def index_html(self, REQUEST=None, RESPONSE=None):
         # Acquire from parent
         parent = aq_parent(aq_inner(self))
         target = parent.aq_acquire('index_html')
-        return ReplaceableWrapper(target).__of__(parent).__of__(self)
+        return ReplaceableWrapper(target.aq_base).__of__(parent).__of__(self)
 
     index_html = ComputedAttribute(index_html, 1)
 


Repository: plone.app.folder


Branch: refs/heads/master
Date: 2017-11-16T07:40:26-05:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.folder/commit/c1b3a950c53e3a68cf5fbf8f875a411a4bbc5305

duct tape and baling wire

Files changed:
M src/plone/app/folder/base.py

diff --git a/src/plone/app/folder/base.py b/src/plone/app/folder/base.py
index 8c9be0f..bc2419c 100644
--- a/src/plone/app/folder/base.py
+++ b/src/plone/app/folder/base.py
@@ -31,7 +31,8 @@ def __getattr__(self, name):
         return getattr(ob, name)
 
     def __repr__(self):
-        return repr(object.__getattribute__(self, '_ReplaceableWrapper__ob'))
+        return repr(
+            object.__getattribute__(self, '_ReplaceableWrapper__ob').aq_base)
 
 
 @implementer(IOrderedContainer)
@@ -83,7 +84,7 @@ def index_html(self, REQUEST=None, RESPONSE=None):
         # Acquire from parent
         parent = aq_parent(aq_inner(self))
         target = parent.aq_acquire('index_html')
-        return ReplaceableWrapper(target.aq_base).__of__(parent).__of__(self)
+        return ReplaceableWrapper(target).__of__(parent).__of__(self)
 
     index_html = ComputedAttribute(index_html, 1)
 


Repository: plone.app.folder


Branch: refs/heads/master
Date: 2017-11-16T21:29:21+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.folder/commit/cc988863a04fdb8df18659732507b6b74075f731

Merge pull request #14 from plone/davisagli-replaceable

adjust ReplaceableWrapper to work in Zope 4

Files changed:
M CHANGES.rst
M src/plone/app/folder/base.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 35928ed..72755b6 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Fix webdav PUT of index_html to work in Zope 4.
+  [davisagli]
 
 
 1.2.3 (2017-03-27)
diff --git a/src/plone/app/folder/base.py b/src/plone/app/folder/base.py
index 3f09679..bc2419c 100644
--- a/src/plone/app/folder/base.py
+++ b/src/plone/app/folder/base.py
@@ -12,12 +12,13 @@
 from webdav.NullResource import NullResource
 from zope.interface import implementer
 from App.class_init import InitializeClass
+import Acquisition
 
 # to keep backward compatibility
 has_btree = 1
 
 
-class ReplaceableWrapper:
+class ReplaceableWrapper(Acquisition.Implicit):
     """ a wrapper around an object to make it replaceable """
 
     def __init__(self, ob):
@@ -26,7 +27,12 @@ def __init__(self, ob):
     def __getattr__(self, name):
         if name == '__replaceable__':
             return REPLACEABLE
-        return getattr(self.__ob, name)
+        ob = object.__getattribute__(self, '_ReplaceableWrapper__ob')
+        return getattr(ob, name)
+
+    def __repr__(self):
+        return repr(
+            object.__getattribute__(self, '_ReplaceableWrapper__ob').aq_base)
 
 
 @implementer(IOrderedContainer)
@@ -67,15 +73,18 @@ def index_html(self, REQUEST=None, RESPONSE=None):
                 method = request['REQUEST_METHOD']
                 if method == 'PUT':
                     # Very likely a WebDAV client trying to create something
-                    return ReplaceableWrapper(NullResource(self, 'index_html'))
+                    nr = NullResource(self, 'index_html')
+                    nr.__replaceable__ = REPLACEABLE
+                    return nr
                 elif method in ('GET', 'HEAD', 'POST'):
                     # Do nothing, let it go and acquire.
                     pass
                 else:
                     raise AttributeError('index_html')
         # Acquire from parent
-        target = aq_parent(aq_inner(self)).aq_acquire('index_html')
-        return ReplaceableWrapper(aq_base(target).__of__(self))
+        parent = aq_parent(aq_inner(self))
+        target = parent.aq_acquire('index_html')
+        return ReplaceableWrapper(target).__of__(parent).__of__(self)
 
     index_html = ComputedAttribute(index_html, 1)
 


