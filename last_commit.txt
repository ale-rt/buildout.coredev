Repository: Products.CMFDiffTool


Branch: refs/heads/master
Date: 2016-04-04T15:27:17-07:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/Products.CMFDiffTool/commit/b85a4be5fbd70925940873b29653c01f55b9346f

add inline_diff for FieldDiff

Files changed:
M CHANGES.rst
M Products/CMFDiffTool/FieldDiff.py
M Products/CMFDiffTool/tests/testListDiff.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 5cfb5e1..f0ef369 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Incompatibilities:
 
 New:
 
-- *add item here*
+- Add generic `inline_diff` implementation for FieldDiff.
+  [davisagli]
 
 Fixes:
 
diff --git a/Products/CMFDiffTool/FieldDiff.py b/Products/CMFDiffTool/FieldDiff.py
index a66e04b..f9cb5c4 100644
--- a/Products/CMFDiffTool/FieldDiff.py
+++ b/Products/CMFDiffTool/FieldDiff.py
@@ -1,5 +1,6 @@
 # -*- coding: utf-8 -*-
 from App.class_init import InitializeClass
+from os import linesep
 from Products.CMFDiffTool.BaseDiff import _getValue
 from Products.CMFDiffTool.BaseDiff import BaseDiff
 
@@ -11,6 +12,12 @@ class FieldDiff(BaseDiff):
 
     meta_type = 'Field Diff'
 
+    same_fmt = """<div class="%s">%s</div>"""
+    inlinediff_fmt = """<div class="%s">
+    <div class="diff_sub">%s</div>
+    <div class="diff_add">%s</div>
+</div>"""
+
     def _parseField(self, value, filename=None):
         """Parse a field value in preparation for diffing"""
         if filename is None:
@@ -63,6 +70,33 @@ def ndiff(self):
                 raise ValueError('unknown tag %r', tag)
         return '\n'.join(r)
 
+    def inline_diff(self):
+        css_class = 'InlineDiff'
+        inlinediff_fmt = self.inlinediff_fmt
+        same_fmt = self.same_fmt
+        r=[]
+        a = self._parseField(self.oldValue, filename=self.oldFilename)
+        b = self._parseField(self.newValue, filename=self.newFilename)
+        for tag, alo, ahi, blo, bhi in self.getLineDiffs():
+            if tag == 'replace':
+                for i in xrange(alo, ahi):
+                    r.append(inlinediff_fmt % (css_class, a[i], ''))
+                for i in xrange(blo, bhi):
+                    r.append(inlinediff_fmt % (css_class, '', b[i]))
+            elif tag == 'delete':
+                for i in xrange(alo, ahi):
+                    r.append(inlinediff_fmt % (css_class, a[i], ''))
+            elif tag == 'insert':
+                for i in xrange(blo, bhi):
+                    r.append(inlinediff_fmt % (css_class, '', b[i]))
+            elif tag == 'equal':
+                for i in xrange(alo, ahi):
+                    r.append(same_fmt % (css_class, a[i]))
+            else:
+                raise ValueError('unknown tag ' + `tag`)
+        return '\n'.join(r)
+
+
 InitializeClass(FieldDiff)
 
 
diff --git a/Products/CMFDiffTool/tests/testListDiff.py b/Products/CMFDiffTool/tests/testListDiff.py
index 1119f8d..da32675 100644
--- a/Products/CMFDiffTool/tests/testListDiff.py
+++ b/Products/CMFDiffTool/tests/testListDiff.py
@@ -73,4 +73,15 @@ def testDiffText(self):
         diff = ListDiff(a, b, 'attribute')
         self.assertEqual(diff.ndiff(), expected)
 
-        # FIXME: need tests for other kinds of diffs
+    def test_inline_diff(self):
+        a = A()
+        b = B()
+        expected = """<div class="InlineDiff">1</div>
+<div class="InlineDiff">2</div>
+<div class="InlineDiff">3</div>
+<div class="InlineDiff">
+    <div class="diff_sub"></div>
+    <div class="diff_add">4</div>
+</div>"""
+        diff = ListDiff(a, b, 'attribute')
+        self.assertEqual(diff.inline_diff(), expected)


Repository: Products.CMFDiffTool


Branch: refs/heads/master
Date: 2016-04-05T11:19:53+02:00
Author: Eric BREHAULT (ebrehault) <ebrehault@gmail.com>
Commit: https://github.com/plone/Products.CMFDiffTool/commit/7dfcbb8f24efd1bbd034b9756207ec58accafb3f

Merge pull request #17 from plone/davisagli-inline-diff-p5

add inline_diff for FieldDiff

Files changed:
M CHANGES.rst
M Products/CMFDiffTool/FieldDiff.py
M Products/CMFDiffTool/tests/testListDiff.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 5cfb5e1..f0ef369 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Incompatibilities:
 
 New:
 
-- *add item here*
+- Add generic `inline_diff` implementation for FieldDiff.
+  [davisagli]
 
 Fixes:
 
diff --git a/Products/CMFDiffTool/FieldDiff.py b/Products/CMFDiffTool/FieldDiff.py
index a66e04b..f9cb5c4 100644
--- a/Products/CMFDiffTool/FieldDiff.py
+++ b/Products/CMFDiffTool/FieldDiff.py
@@ -1,5 +1,6 @@
 # -*- coding: utf-8 -*-
 from App.class_init import InitializeClass
+from os import linesep
 from Products.CMFDiffTool.BaseDiff import _getValue
 from Products.CMFDiffTool.BaseDiff import BaseDiff
 
@@ -11,6 +12,12 @@ class FieldDiff(BaseDiff):
 
     meta_type = 'Field Diff'
 
+    same_fmt = """<div class="%s">%s</div>"""
+    inlinediff_fmt = """<div class="%s">
+    <div class="diff_sub">%s</div>
+    <div class="diff_add">%s</div>
+</div>"""
+
     def _parseField(self, value, filename=None):
         """Parse a field value in preparation for diffing"""
         if filename is None:
@@ -63,6 +70,33 @@ def ndiff(self):
                 raise ValueError('unknown tag %r', tag)
         return '\n'.join(r)
 
+    def inline_diff(self):
+        css_class = 'InlineDiff'
+        inlinediff_fmt = self.inlinediff_fmt
+        same_fmt = self.same_fmt
+        r=[]
+        a = self._parseField(self.oldValue, filename=self.oldFilename)
+        b = self._parseField(self.newValue, filename=self.newFilename)
+        for tag, alo, ahi, blo, bhi in self.getLineDiffs():
+            if tag == 'replace':
+                for i in xrange(alo, ahi):
+                    r.append(inlinediff_fmt % (css_class, a[i], ''))
+                for i in xrange(blo, bhi):
+                    r.append(inlinediff_fmt % (css_class, '', b[i]))
+            elif tag == 'delete':
+                for i in xrange(alo, ahi):
+                    r.append(inlinediff_fmt % (css_class, a[i], ''))
+            elif tag == 'insert':
+                for i in xrange(blo, bhi):
+                    r.append(inlinediff_fmt % (css_class, '', b[i]))
+            elif tag == 'equal':
+                for i in xrange(alo, ahi):
+                    r.append(same_fmt % (css_class, a[i]))
+            else:
+                raise ValueError('unknown tag ' + `tag`)
+        return '\n'.join(r)
+
+
 InitializeClass(FieldDiff)
 
 
diff --git a/Products/CMFDiffTool/tests/testListDiff.py b/Products/CMFDiffTool/tests/testListDiff.py
index 1119f8d..da32675 100644
--- a/Products/CMFDiffTool/tests/testListDiff.py
+++ b/Products/CMFDiffTool/tests/testListDiff.py
@@ -73,4 +73,15 @@ def testDiffText(self):
         diff = ListDiff(a, b, 'attribute')
         self.assertEqual(diff.ndiff(), expected)
 
-        # FIXME: need tests for other kinds of diffs
+    def test_inline_diff(self):
+        a = A()
+        b = B()
+        expected = """<div class="InlineDiff">1</div>
+<div class="InlineDiff">2</div>
+<div class="InlineDiff">3</div>
+<div class="InlineDiff">
+    <div class="diff_sub"></div>
+    <div class="diff_add">4</div>
+</div>"""
+        diff = ListDiff(a, b, 'attribute')
+        self.assertEqual(diff.inline_diff(), expected)


