Repository: Products.CMFUid


Branch: refs/heads/2.2
Date: 2016-11-07T23:23:54+01:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/Products.CMFUid/commit/c689dfc1bef3eca06ef1d8e30584f2e4d7e6a9ac

Process indexing operations

Part of PLIP: https://github.com/plone/Products.CMFPlone/issues/1343

The utility that processes the indexing operations was not registered.

Files changed:
M Products/CMFUid/CHANGES.txt
M Products/CMFUid/tests/test_uidhandling.py

diff --git a/Products/CMFUid/CHANGES.txt b/Products/CMFUid/CHANGES.txt
index 863469e..1412343 100644
--- a/Products/CMFUid/CHANGES.txt
+++ b/Products/CMFUid/CHANGES.txt
@@ -4,6 +4,9 @@ Products.CMFUid Changelog
 2.2.2 (unreleased)
 ------------------
 
+- Adapt tests to the new indexing operations queueing.
+  Part of PLIP 1343: https://github.com/plone/Products.CMFPlone/issues/1343
+  [gforcada]
 
 2.2.1 (2010-07-04)
 ------------------
diff --git a/Products/CMFUid/tests/test_uidhandling.py b/Products/CMFUid/tests/test_uidhandling.py
index 3fd8aaf..f4f3949 100644
--- a/Products/CMFUid/tests/test_uidhandling.py
+++ b/Products/CMFUid/tests/test_uidhandling.py
@@ -29,6 +29,9 @@
 from Products.CMFUid.interfaces import IUniqueIdGenerator
 from Products.CMFUid.interfaces import IUniqueIdHandler
 
+from Products.CMFCore.indexing import PortalCatalogProcessor
+from Products.CMFCore.interfaces import IPortalCatalogQueueProcessor
+
 
 class DummyUid:
     """A dummy uid that surely is of different type of the generated ones.
@@ -71,6 +74,7 @@ def setUp(self):
                           , IUniqueIdAnnotationManagement
                           )
         sm.registerUtility(self.root.portal_uidgenerator, IUniqueIdGenerator)
+        sm.registerUtility(provided=IPortalCatalogQueueProcessor, factory=PortalCatalogProcessor)
 
         # Make sure we have our indices/columns
         uid_name = self.root.portal_uidhandler.UID_ATTRIBUTE_NAME


Repository: Products.CMFUid


Branch: refs/heads/2.2
Date: 2017-02-21T22:03:40+01:00
Author: Gil Forcada (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/Products.CMFUid/commit/f76c84c0a433010bc93f1f3858c98c1bd5d792b3

Conditional import

This way,
the package can be used in both 5.1 (with collective.indexing merged in CMFCore)
and with 5.0 without it.

Files changed:
M Products/CMFUid/tests/test_uidhandling.py

diff --git a/Products/CMFUid/tests/test_uidhandling.py b/Products/CMFUid/tests/test_uidhandling.py
index f4f3949..a23b2bb 100644
--- a/Products/CMFUid/tests/test_uidhandling.py
+++ b/Products/CMFUid/tests/test_uidhandling.py
@@ -29,8 +29,12 @@
 from Products.CMFUid.interfaces import IUniqueIdGenerator
 from Products.CMFUid.interfaces import IUniqueIdHandler
 
-from Products.CMFCore.indexing import PortalCatalogProcessor
-from Products.CMFCore.interfaces import IPortalCatalogQueueProcessor
+try:
+    from Products.CMFCore.indexing import PortalCatalogProcessor
+    from Products.CMFCore.interfaces import IPortalCatalogQueueProcessor
+    indexing = True
+except ImportError:
+    indexing = False
 
 
 class DummyUid:
@@ -74,7 +78,9 @@ def setUp(self):
                           , IUniqueIdAnnotationManagement
                           )
         sm.registerUtility(self.root.portal_uidgenerator, IUniqueIdGenerator)
-        sm.registerUtility(provided=IPortalCatalogQueueProcessor, factory=PortalCatalogProcessor)
+
+        if indexing:
+            sm.registerUtility(provided=IPortalCatalogQueueProcessor, factory=PortalCatalogProcessor)
 
         # Make sure we have our indices/columns
         uid_name = self.root.portal_uidhandler.UID_ATTRIBUTE_NAME


Repository: Products.CMFUid


Branch: refs/heads/2.2
Date: 2017-02-21T22:04:50+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/Products.CMFUid/commit/39b9ffa959542713c2846a9385380566073e740a

Merge pull request #3 from plone/merge-collective-indexing

Merge collective indexing

Files changed:
M Products/CMFUid/CHANGES.txt
M Products/CMFUid/tests/test_uidhandling.py

diff --git a/Products/CMFUid/CHANGES.txt b/Products/CMFUid/CHANGES.txt
index 863469e..1412343 100644
--- a/Products/CMFUid/CHANGES.txt
+++ b/Products/CMFUid/CHANGES.txt
@@ -4,6 +4,9 @@ Products.CMFUid Changelog
 2.2.2 (unreleased)
 ------------------
 
+- Adapt tests to the new indexing operations queueing.
+  Part of PLIP 1343: https://github.com/plone/Products.CMFPlone/issues/1343
+  [gforcada]
 
 2.2.1 (2010-07-04)
 ------------------
diff --git a/Products/CMFUid/tests/test_uidhandling.py b/Products/CMFUid/tests/test_uidhandling.py
index 3fd8aaf..a23b2bb 100644
--- a/Products/CMFUid/tests/test_uidhandling.py
+++ b/Products/CMFUid/tests/test_uidhandling.py
@@ -29,6 +29,13 @@
 from Products.CMFUid.interfaces import IUniqueIdGenerator
 from Products.CMFUid.interfaces import IUniqueIdHandler
 
+try:
+    from Products.CMFCore.indexing import PortalCatalogProcessor
+    from Products.CMFCore.interfaces import IPortalCatalogQueueProcessor
+    indexing = True
+except ImportError:
+    indexing = False
+
 
 class DummyUid:
     """A dummy uid that surely is of different type of the generated ones.
@@ -72,6 +79,9 @@ def setUp(self):
                           )
         sm.registerUtility(self.root.portal_uidgenerator, IUniqueIdGenerator)
 
+        if indexing:
+            sm.registerUtility(provided=IPortalCatalogQueueProcessor, factory=PortalCatalogProcessor)
+
         # Make sure we have our indices/columns
         uid_name = self.root.portal_uidhandler.UID_ATTRIBUTE_NAME
         self.root.portal_catalog.addIndex(uid_name, 'FieldIndex')


