Repository: Products.Archetypes


Branch: refs/heads/1.10.x
Date: 2017-05-23T17:15:36+02:00
Author: Godefroid Chapelle (gotcha) <gotcha@bubblenet.be>
Commit: https://github.com/plone/Products.Archetypes/commit/117e0d748e333088bf44cdf03b1ffdcc36262b07

Fix bug in BaseObject SearchableText when vocabulary key is uft8 encoded string

port from 1.9.x

Files changed:
M CHANGES.rst
M Products/Archetypes/BaseObject.py
M Products/Archetypes/tests/test_baseobject.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 88840dc5..903aaaca 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Fix bug in BaseObject SearchableText when vocabulary key is uft8 encoded string
+  [gotcha]
 
 
 1.10.16 (2016-09-14)
diff --git a/Products/Archetypes/BaseObject.py b/Products/Archetypes/BaseObject.py
index 20d4f0fc..77231d9d 100644
--- a/Products/Archetypes/BaseObject.py
+++ b/Products/Archetypes/BaseObject.py
@@ -567,6 +567,10 @@ def SearchableText(self):
                         # Unmangle vocabulary: we index key AND value
                         vocab_values = map(
                             lambda value, vocab=vocab: vocab.getValue(value, ''), datum)
+                        vocab_values = [
+                            v.encode('utf-8') if isinstance(v, unicode) else v
+                            for v in vocab_values
+                        ]
                         datum = list(datum)
                         datum.extend(vocab_values)
                         datum = ' '.join(datum)
diff --git a/Products/Archetypes/tests/test_baseobject.py b/Products/Archetypes/tests/test_baseobject.py
index 063a07b8..4939a989 100644
--- a/Products/Archetypes/tests/test_baseobject.py
+++ b/Products/Archetypes/tests/test_baseobject.py
@@ -42,6 +42,7 @@ def overrideDiscussionFor(self, content, allowDiscussion):
     (
         ('1', _(u'Option 1 : printemps')),
         ('2', unicode('Option 2 : \xc3\xa9t\xc3\xa9', 'utf-8')),  # e-acute t e-acute
+        ('\xc3\xa9t\xc3\xa9', unicode('Option 2 : \xc3\xa9t\xc3\xa9', 'utf-8')),  # e-acute t e-acute
         ('3', u'Option 3 : automne'),
         ('4', _(u'option3', default=u'Option 3 : hiver')),
     ))
@@ -84,15 +85,17 @@ def test_searchableText(self):
         dummy = self._dummy
 
         # Set a multiple field
-        dummy.setMULTIPLEFIELD(['1', '2'])
+        dummy.setMULTIPLEFIELD(['1', '2', '\xc3\xa9t\xc3\xa9'])
         searchable = dummy.SearchableText()
 
         self.assertTrue(isinstance(searchable, basestring))
         # Note: the vocabulary values used to get translated in some
         # cases, which during test runs would mean they would get
         # formatted as '[[plone][some value]]' instead of 'some value'.
-        self.assertEqual(searchable,
-                         '1 2 Option 1 : printemps Option 2 : \xc3\xa9t\xc3\xa9')
+        self.assertEqual(
+            searchable,
+            '1 2 \xc3\xa9t\xc3\xa9 Option 1 : printemps Option 2 : \xc3\xa9t\xc3\xa9 Option 2 : \xc3\xa9t\xc3\xa9'
+        )
 
         dummy.setMULTIPLEFIELD(['3', '4'])
         searchable = dummy.SearchableText()


