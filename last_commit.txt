Repository: plone.app.linkintegrity


Branch: refs/heads/1.5.x
Date: 2016-01-21T17:00:24+01:00
Author: tschorr (tschorr) <t_schorr@gmx.de>
Commit: https://github.com/plone/plone.app.linkintegrity/commit/16639ddff0849653abc33a9bc0d3b22ae3d34266

fix findObjects for the case where the webserver rewrites the portal name

Files changed:
M CHANGES.rst
M plone/app/linkintegrity/handlers.py
M plone/app/linkintegrity/tests/test_handlers.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 779b21d..52cedcd 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -12,7 +12,8 @@ New:
 Fixes:
 
 - *add item here*
-
+- make handler.findObject() work when the webserver rewrites the portal name
+  [tschorr]
 
 1.5.7 (2015-11-17)
 ------------------
diff --git a/plone/app/linkintegrity/handlers.py b/plone/app/linkintegrity/handlers.py
index 2841dbc..b1f4426 100644
--- a/plone/app/linkintegrity/handlers.py
+++ b/plone/app/linkintegrity/handlers.py
@@ -65,7 +65,7 @@ def findObject(base, path):
     if path.startswith('/'):
         # Make an absolute path relative to the portal root
         obj = getToolByName(base, 'portal_url').getPortalObject()
-        portal_path = '/'.join(obj.getPhysicalPath()) + '/'
+        portal_path = obj.absolute_url_path() + '/'
         if path.startswith(portal_path):
             path = path[len(portal_path):]
         else:
diff --git a/plone/app/linkintegrity/tests/test_handlers.py b/plone/app/linkintegrity/tests/test_handlers.py
index 79652ff..9891837 100644
--- a/plone/app/linkintegrity/tests/test_handlers.py
+++ b/plone/app/linkintegrity/tests/test_handlers.py
@@ -23,3 +23,14 @@ def test_relative_to_portal_root_2(self):
         obj, components = findObject(self.portal.doc1, '/doc2')
         self.assertEqual(obj.absolute_url_path(), '/plone/doc2')
         self.assertEqual(components, '')
+
+    def test_webserver_rewrites_portal_name(self):
+        # test the case where a webserver rewrites the portal name, e.g. for Apache:
+        # RewriteRule ^/wssitename(.*)$ http://localhost:8080/VirtualHostBase/http/my.domain.com:80/plonesitename/VirtualHostRoot/_vh_wssitename$1
+        self.portal.REQUEST.other['VirtualRootPhysicalPath'] = ('', 'plone')
+        self.portal.REQUEST._script = ['plone_foo']
+        obj, components = findObject(self.portal.doc1, '/plone_foo/doc2')
+        self.assertEqual(obj.absolute_url_path(), '/plone_foo/doc2')
+        self.assertEqual(obj.getPhysicalPath(), ('','plone', 'doc2'))
+        self.assertEqual(components, '')
+


Repository: plone.app.linkintegrity


Branch: refs/heads/1.5.x
Date: 2016-01-22T12:12:40+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.linkintegrity/commit/564b676f0e6d3347939a7d4fa7d4549f1a047ff4

Merge pull request #34 from plone/rewritten_portal_name_1.5.x_pr

Make findObject work if the webserver rewrites the portal name

Files changed:
M CHANGES.rst
M plone/app/linkintegrity/handlers.py
M plone/app/linkintegrity/tests/test_handlers.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 779b21d..52cedcd 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -12,7 +12,8 @@ New:
 Fixes:
 
 - *add item here*
-
+- make handler.findObject() work when the webserver rewrites the portal name
+  [tschorr]
 
 1.5.7 (2015-11-17)
 ------------------
diff --git a/plone/app/linkintegrity/handlers.py b/plone/app/linkintegrity/handlers.py
index 2841dbc..b1f4426 100644
--- a/plone/app/linkintegrity/handlers.py
+++ b/plone/app/linkintegrity/handlers.py
@@ -65,7 +65,7 @@ def findObject(base, path):
     if path.startswith('/'):
         # Make an absolute path relative to the portal root
         obj = getToolByName(base, 'portal_url').getPortalObject()
-        portal_path = '/'.join(obj.getPhysicalPath()) + '/'
+        portal_path = obj.absolute_url_path() + '/'
         if path.startswith(portal_path):
             path = path[len(portal_path):]
         else:
diff --git a/plone/app/linkintegrity/tests/test_handlers.py b/plone/app/linkintegrity/tests/test_handlers.py
index 79652ff..9891837 100644
--- a/plone/app/linkintegrity/tests/test_handlers.py
+++ b/plone/app/linkintegrity/tests/test_handlers.py
@@ -23,3 +23,14 @@ def test_relative_to_portal_root_2(self):
         obj, components = findObject(self.portal.doc1, '/doc2')
         self.assertEqual(obj.absolute_url_path(), '/plone/doc2')
         self.assertEqual(components, '')
+
+    def test_webserver_rewrites_portal_name(self):
+        # test the case where a webserver rewrites the portal name, e.g. for Apache:
+        # RewriteRule ^/wssitename(.*)$ http://localhost:8080/VirtualHostBase/http/my.domain.com:80/plonesitename/VirtualHostRoot/_vh_wssitename$1
+        self.portal.REQUEST.other['VirtualRootPhysicalPath'] = ('', 'plone')
+        self.portal.REQUEST._script = ['plone_foo']
+        obj, components = findObject(self.portal.doc1, '/plone_foo/doc2')
+        self.assertEqual(obj.absolute_url_path(), '/plone_foo/doc2')
+        self.assertEqual(obj.getPhysicalPath(), ('','plone', 'doc2'))
+        self.assertEqual(components, '')
+


