Repository: collective.monkeypatcher


Branch: refs/heads/master
Date: 2017-09-07T21:12:25+02:00
Author: Harald Friessnegger (frisi) <harald@webmeisterei.com>
Commit: https://github.com/plone/collective.monkeypatcher/commit/c7ae353b01bbb9c251be40be5158af1b63a62868

document problems with patching module functions

this took me hours to figure out and it's not documented properly.

don't think this needs a changelog. but probably a simple update of the docs at pypy or a new release so it is visible for others asap.

Files changed:
M README.rst

diff --git a/README.rst b/README.rst
index fd1fdbd..978009a 100644
--- a/README.rst
+++ b/README.rst
@@ -63,7 +63,7 @@ name of the function to replace, and `replacement` is the replacement function.
 Full list of options:
 
 - ``class``  The class being patched
-- ``module`` The module being patched
+- ``module`` The module being patched (see `Patching module level functions`_)
 - ``handler`` A function to perform the patching. Must take three parameters: class/module, original (string), and replacement
 - ``original`` Method or function to replace
 - ``replacement`` Method or function to replace with
@@ -94,3 +94,33 @@ And add such Python::
       """see collective.monkeypatcher.interfaces.IMonkeyPatchEvent"""
       ...
 
+
+Patching module level functions
+===============================
+
+
+.. ATTENTION:: Be aware that patching module level functions will likely not work.
+
+
+If you want to patch the method `do_something` located in `patched.package.utils` which is imported in a package like this
+
+::
+
+    from patched.package.utils import do_something
+
+the reference to this function is loaded *before* `collective.monkeypatcher` will patch the original method.
+
+See also `this related thread on the plone mailing list <http://plone.293351.n2.nabble.com/Monkey-Patch-Module-Level-td7557725.html>`_.
+
+Workaround
+----------
+
+
+Do the patching in `__init__.py` of your package::
+
+    from patched.package import utils
+
+    def do_it_different():
+        return 'foo'
+
+    utils.do_something = do_it_different


Repository: collective.monkeypatcher


Branch: refs/heads/master
Date: 2017-09-08T13:56:11+02:00
Author: Harald Friessnegger (frisi) <harald@webmeisterei.com>
Commit: https://github.com/plone/collective.monkeypatcher/commit/b056b360f1c6130e553bd9fb7b3bb8ab9f68f886

add changelog enty

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 8dd92c0..915e962 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Document possible problems when patching module level functions
+  [frisi]
 
 Bug fixes:
 


Repository: collective.monkeypatcher


Branch: refs/heads/master
Date: 2017-09-11T19:11:20+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/collective.monkeypatcher/commit/65f193f606ebad202a485814065abe768d5269ac

Merge pull request #7 from plone/document-gotcha

document problems with patching module functions

Files changed:
M CHANGES.rst
M README.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 8dd92c0..915e962 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Document possible problems when patching module level functions
+  [frisi]
 
 Bug fixes:
 
diff --git a/README.rst b/README.rst
index fd1fdbd..978009a 100644
--- a/README.rst
+++ b/README.rst
@@ -63,7 +63,7 @@ name of the function to replace, and `replacement` is the replacement function.
 Full list of options:
 
 - ``class``  The class being patched
-- ``module`` The module being patched
+- ``module`` The module being patched (see `Patching module level functions`_)
 - ``handler`` A function to perform the patching. Must take three parameters: class/module, original (string), and replacement
 - ``original`` Method or function to replace
 - ``replacement`` Method or function to replace with
@@ -94,3 +94,33 @@ And add such Python::
       """see collective.monkeypatcher.interfaces.IMonkeyPatchEvent"""
       ...
 
+
+Patching module level functions
+===============================
+
+
+.. ATTENTION:: Be aware that patching module level functions will likely not work.
+
+
+If you want to patch the method `do_something` located in `patched.package.utils` which is imported in a package like this
+
+::
+
+    from patched.package.utils import do_something
+
+the reference to this function is loaded *before* `collective.monkeypatcher` will patch the original method.
+
+See also `this related thread on the plone mailing list <http://plone.293351.n2.nabble.com/Monkey-Patch-Module-Level-td7557725.html>`_.
+
+Workaround
+----------
+
+
+Do the patching in `__init__.py` of your package::
+
+    from patched.package import utils
+
+    def do_it_different():
+        return 'foo'
+
+    utils.do_something = do_it_different


