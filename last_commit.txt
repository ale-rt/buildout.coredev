Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2016-02-22T13:33:58+01:00
Author: Vivian Antoine (DieKatze) <vivian.antoine@imio.be>
Commit: https://github.com/plone/Products.PlonePAS/commit/c44e655f782b8a978862b1575658a8aad5b30f2f

Notify new IGroupDeletedEvent when deleting a group.

Files changed:
M CHANGES.rst
M src/Products/PlonePAS/tests/test_groupstool.py
M src/Products/PlonePAS/tools/groups.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 7152180..be3cfeb 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -6,7 +6,8 @@ Changelog
 
 New:
 
-- *add item here*
+- Notify new IGroupDeletedEvent when deleting a group.  
+  [DieKatze]
 
 Fixes:
 
diff --git a/src/Products/PlonePAS/tests/test_groupstool.py b/src/Products/PlonePAS/tests/test_groupstool.py
index dba2052..3ac297f 100644
--- a/src/Products/PlonePAS/tests/test_groupstool.py
+++ b/src/Products/PlonePAS/tests/test_groupstool.py
@@ -8,7 +8,11 @@
 from Products.PlonePAS.plugins.group import PloneGroup
 from Products.PlonePAS.tests import base
 from Products.PlonePAS.tools.groupdata import GroupData
+from Products.PluggableAuthService.interfaces.events import \
+    IGroupDeletedEvent
 from plone.app.testing import TEST_USER_ID
+from zope.component import adapter
+from zope.component import getGlobalSiteManager
 
 
 def sortTuple(t):
@@ -177,6 +181,21 @@ def testRemoveGroups(self):
         self.groups.removeGroups(['foo'])
         self.assertEqual(len(self.groups.listGroupIds()), 0)
 
+    def testRemoveGroupDelEvent(self):
+        eventsFired = []
+
+        @adapter(IGroupDeletedEvent)
+        def gotDeletion(event):
+            eventsFired.append(event)
+
+        gsm = getGlobalSiteManager()
+        gsm.registerHandler(gotDeletion)
+        self.groups.addGroup('foo', [], [])
+        self.groups.removeGroups(['foo'])
+        self.assertEqual(len(eventsFired), 1)
+        self.assertEqual(eventsFired[0].principal, 'foo')
+        gsm.unregisterHandler(gotDeletion)
+
     def testListGroupIds(self):
         self.groups.addGroup('foo', [], [])
         self.groups.addGroup('bar', [], [])
diff --git a/src/Products/PlonePAS/tools/groups.py b/src/Products/PlonePAS/tools/groups.py
index 1e1d5e1..a22c805 100644
--- a/src/Products/PlonePAS/tools/groups.py
+++ b/src/Products/PlonePAS/tools/groups.py
@@ -15,12 +15,14 @@
 from Products.PlonePAS.permissions import SetGroupOwnership
 from Products.PlonePAS.permissions import ViewGroups
 from Products.PlonePAS.utils import getGroupsForPrincipal
+from Products.PluggableAuthService.events import GroupDeleted
 from Products.PluggableAuthService.PluggableAuthService import \
     _SWALLOWABLE_PLUGIN_EXCEPTIONS
 from Products.PluggableAuthService.interfaces.plugins import \
     IRoleAssignerPlugin
 from ZODB.POSException import ConflictError
 from zope.interface import implementer
+from zope.event import notify
 import logging
 
 logger = logging.getLogger('PluggableAuthService')
@@ -160,6 +162,7 @@ def removeGroup(self, group_id, REQUEST=None):
 
         for mid, manager in managers:
             if manager.removeGroup(group_id):
+                notify(GroupDeleted(group_id))
                 retval = True
 
         return retval


Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2016-03-01T16:48:32+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.PlonePAS/commit/3ed0d6de7c1ef510479cc76127efcbb4f42d988f

Merge pull request #16 from IMIO/master

Notify new IGroupDeletedEvent when deleting a group.

Files changed:
M CHANGES.rst
M src/Products/PlonePAS/tests/test_groupstool.py
M src/Products/PlonePAS/tools/groups.py

diff --git a/CHANGES.rst b/CHANGES.rst
index c6d9b68..b3bd03e 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -6,7 +6,8 @@ Changelog
 
 New:
 
-- *add item here*
+- Notify new IGroupDeletedEvent when deleting a group.  
+  [DieKatze]
 
 Fixes:
 
diff --git a/src/Products/PlonePAS/tests/test_groupstool.py b/src/Products/PlonePAS/tests/test_groupstool.py
index dba2052..3ac297f 100644
--- a/src/Products/PlonePAS/tests/test_groupstool.py
+++ b/src/Products/PlonePAS/tests/test_groupstool.py
@@ -8,7 +8,11 @@
 from Products.PlonePAS.plugins.group import PloneGroup
 from Products.PlonePAS.tests import base
 from Products.PlonePAS.tools.groupdata import GroupData
+from Products.PluggableAuthService.interfaces.events import \
+    IGroupDeletedEvent
 from plone.app.testing import TEST_USER_ID
+from zope.component import adapter
+from zope.component import getGlobalSiteManager
 
 
 def sortTuple(t):
@@ -177,6 +181,21 @@ def testRemoveGroups(self):
         self.groups.removeGroups(['foo'])
         self.assertEqual(len(self.groups.listGroupIds()), 0)
 
+    def testRemoveGroupDelEvent(self):
+        eventsFired = []
+
+        @adapter(IGroupDeletedEvent)
+        def gotDeletion(event):
+            eventsFired.append(event)
+
+        gsm = getGlobalSiteManager()
+        gsm.registerHandler(gotDeletion)
+        self.groups.addGroup('foo', [], [])
+        self.groups.removeGroups(['foo'])
+        self.assertEqual(len(eventsFired), 1)
+        self.assertEqual(eventsFired[0].principal, 'foo')
+        gsm.unregisterHandler(gotDeletion)
+
     def testListGroupIds(self):
         self.groups.addGroup('foo', [], [])
         self.groups.addGroup('bar', [], [])
diff --git a/src/Products/PlonePAS/tools/groups.py b/src/Products/PlonePAS/tools/groups.py
index 1e1d5e1..a22c805 100644
--- a/src/Products/PlonePAS/tools/groups.py
+++ b/src/Products/PlonePAS/tools/groups.py
@@ -15,12 +15,14 @@
 from Products.PlonePAS.permissions import SetGroupOwnership
 from Products.PlonePAS.permissions import ViewGroups
 from Products.PlonePAS.utils import getGroupsForPrincipal
+from Products.PluggableAuthService.events import GroupDeleted
 from Products.PluggableAuthService.PluggableAuthService import \
     _SWALLOWABLE_PLUGIN_EXCEPTIONS
 from Products.PluggableAuthService.interfaces.plugins import \
     IRoleAssignerPlugin
 from ZODB.POSException import ConflictError
 from zope.interface import implementer
+from zope.event import notify
 import logging
 
 logger = logging.getLogger('PluggableAuthService')
@@ -160,6 +162,7 @@ def removeGroup(self, group_id, REQUEST=None):
 
         for mid, manager in managers:
             if manager.removeGroup(group_id):
+                notify(GroupDeleted(group_id))
                 retval = True
 
         return retval


