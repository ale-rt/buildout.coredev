Repository: plone.api


Branch: refs/heads/master
Date: 2016-10-31T23:44:15+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.api/commit/7f8c7958b0a6f8e761711e240c00cc57c8c3dc5b

Add failing test

Files changed:
M src/plone/api/tests/test_group.py

diff --git a/src/plone/api/tests/test_group.py b/src/plone/api/tests/test_group.py
index 24deca4..27283b3 100644
--- a/src/plone/api/tests/test_group.py
+++ b/src/plone/api/tests/test_group.py
@@ -143,6 +143,19 @@ def test_get_groups_nonexistant_user(self):
         with self.assertRaises(UserNotFoundError):
             api.group.get_groups(username='theurbanspaceman')
 
+    def test_get_groups_anonymous(self):
+        from AccessControl.users import nobody
+        # In test the anonymous user is aq wrapped in /plone/acl_users
+        # > self.portal.acl_users in api.user.get_current().aq_chain
+        # >>> True
+        # In practice is is aq wrapped in /acl_users
+        # > self.context.acl_users in api.user.get_current().aq_chain
+        # >>> False
+        # We'll force the user into /acl_users, which has no portal_groups.
+        user = nobody.__of__(api.portal.get().__parent__.acl_users)
+        groups = api.group.get_groups(user=user)
+        self.assertEqual(groups, [])  # should be empty
+
     def test_delete_contraints(self):
         """Test deleting a group without passing parameters."""
         from plone.api.exc import MissingParameterError


Repository: plone.api


Branch: refs/heads/master
Date: 2016-10-31T23:44:15+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.api/commit/217660927446b0ecb1dc25bef2154e30deb59409

Add fix

Files changed:
M src/plone/api/group.py

diff --git a/src/plone/api/group.py b/src/plone/api/group.py
index 40622c7..824529a 100644
--- a/src/plone/api/group.py
+++ b/src/plone/api/group.py
@@ -88,6 +88,8 @@ def get_groups(username=None, user=None):
     group_tool = portal.get_tool('portal_groups')
 
     if user:
+        if not getattr(user, 'portal_groups', None):
+            return []
         groups = group_tool.getGroupsForPrincipal(user)
         return [get(groupname=group) for group in groups]
 


Repository: plone.api


Branch: refs/heads/master
Date: 2016-10-31T23:44:15+01:00
Author: Roel Bruggink (jaroel) <roel@jaroel.nl>
Commit: https://github.com/plone/plone.api/commit/943b224753acf0c43d83ec7a02d833c1549289b0

Allow plone.api.group.get_groups for Anonymous user.

portal_groups doesn't exist in root acl_usres

Files changed:
M docs/CHANGES.rst

diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index d6ea069..9e065f3 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -5,6 +5,10 @@ Changelog
 ------------------
 
 Fixes:
+
+- Allow plone.api.group.get_groups for Anonymous user. Refs #290
+  [jaroel]
+
 - Allow adopting to a Special User. Fixes #320 - checking permissions for Anonymous User.
   [jaroel]
 


Repository: plone.api


Branch: refs/heads/master
Date: 2016-11-01T00:27:13+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.api/commit/3b61d41331bbfc68473c698628cdf4220021c706

Merge pull request #328 from plone/fix-290-anonymous-get_groups

Fix 290 anonymous get groups

Files changed:
M docs/CHANGES.rst
M src/plone/api/group.py
M src/plone/api/tests/test_group.py

diff --git a/docs/CHANGES.rst b/docs/CHANGES.rst
index d6ea069..9e065f3 100644
--- a/docs/CHANGES.rst
+++ b/docs/CHANGES.rst
@@ -5,6 +5,10 @@ Changelog
 ------------------
 
 Fixes:
+
+- Allow plone.api.group.get_groups for Anonymous user. Refs #290
+  [jaroel]
+
 - Allow adopting to a Special User. Fixes #320 - checking permissions for Anonymous User.
   [jaroel]
 
diff --git a/src/plone/api/group.py b/src/plone/api/group.py
index 40622c7..824529a 100644
--- a/src/plone/api/group.py
+++ b/src/plone/api/group.py
@@ -88,6 +88,8 @@ def get_groups(username=None, user=None):
     group_tool = portal.get_tool('portal_groups')
 
     if user:
+        if not getattr(user, 'portal_groups', None):
+            return []
         groups = group_tool.getGroupsForPrincipal(user)
         return [get(groupname=group) for group in groups]
 
diff --git a/src/plone/api/tests/test_group.py b/src/plone/api/tests/test_group.py
index 24deca4..27283b3 100644
--- a/src/plone/api/tests/test_group.py
+++ b/src/plone/api/tests/test_group.py
@@ -143,6 +143,19 @@ def test_get_groups_nonexistant_user(self):
         with self.assertRaises(UserNotFoundError):
             api.group.get_groups(username='theurbanspaceman')
 
+    def test_get_groups_anonymous(self):
+        from AccessControl.users import nobody
+        # In test the anonymous user is aq wrapped in /plone/acl_users
+        # > self.portal.acl_users in api.user.get_current().aq_chain
+        # >>> True
+        # In practice is is aq wrapped in /acl_users
+        # > self.context.acl_users in api.user.get_current().aq_chain
+        # >>> False
+        # We'll force the user into /acl_users, which has no portal_groups.
+        user = nobody.__of__(api.portal.get().__parent__.acl_users)
+        groups = api.group.get_groups(user=user)
+        self.assertEqual(groups, [])  # should be empty
+
     def test_delete_contraints(self):
         """Test deleting a group without passing parameters."""
         from plone.api.exc import MissingParameterError


