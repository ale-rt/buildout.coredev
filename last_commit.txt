Repository: plone.api


Branch: refs/heads/master
Date: 2017-05-09T16:59:34+02:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/plone.api/commit/2e193c1778e5802ddc65a6cf401bd2f3c0099dcb

add disable_acquire_local_roles and enable_acquire_local_roles to api.content

Files changed:
M CHANGES.rst
M docs/content.rst
M src/plone/api/content.py
M src/plone/api/tests/test_content.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 67e0619..fbe36bd 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Add disable_acquire_local_roles and enable_acquire_local_roles to api.content
+  [MrTango]
 
 Bug fixes:
 
diff --git a/docs/content.rst b/docs/content.rst
index 31acde1..63cc682 100644
--- a/docs/content.rst
+++ b/docs/content.rst
@@ -462,6 +462,47 @@ These arguments can be saved to your transition using custom workflow variables
 
 .. invisible-code-block: python
 
+.. _content_disable_acquire_local_roles_example:
+
+Disable local roles acquisition
+===============================
+
+To disable the acquisition of local roles for an object, use the :meth:`api.content.disable_acquire_local_roles` method.
+
+.. code-block:: python
+
+    from plone import api
+    portal = api.portal.get()
+    api.content.disable_acquire_local_roles(obj=portal['about'])
+
+.. invisible-code-block: python
+
+    ac_flag = getattr(portal['about'], '__ac_local_roles_block__', None)
+    self.assertTrue(ac_flag)
+
+.. _content_enable_acquire_local_roles_example:
+
+Enable local roles acquisition
+==============================
+
+To enable the acquisition of local roles for an object, use the :meth:`api.content.enable_acquire_local_roles` method.
+
+.. code-block:: python
+
+    from plone import api
+    portal = api.portal.get()
+    api.content.enable_acquire_local_roles(obj=portal['about'])
+
+.. invisible-code-block: python
+
+    # As __ac_local_roles_block__ is None by default, we have to set it,
+    # before we can test the enabling method.
+    portal['about'].__ac_local_roles_block__ = 1
+
+    api.content.enable_acquire_local_roles(obj=portal['about'])
+    ac_flag = getattr(portal['about'], '__ac_local_roles_block__', None)
+    self.assertFalse(ac_flag)
+
 .. _content_get_view_example:
 
 Get view
diff --git a/src/plone/api/content.py b/src/plone/api/content.py
index f219a80..40c1c09 100644
--- a/src/plone/api/content.py
+++ b/src/plone/api/content.py
@@ -485,6 +485,32 @@ def transition(obj=None, transition=None, to_state=None, **kwargs):
             )
 
 
+@required_parameters('obj')
+def disable_acquire_local_roles(obj=None):
+    """Disable acquisition of local roles on given obj.
+    Set __ac_local_roles_block__ = 1 on obj.
+
+    :param obj: [required] Context object to block the acquisition on.
+    :type obj: Content object
+    :Example: :ref:`content_disable_acquire_local_roles_example`
+    """
+    plone_utils = portal.get_tool('plone_utils')
+    plone_utils.acquireLocalRoles(obj, status=0)
+
+
+@required_parameters('obj')
+def enable_acquire_local_roles(obj=None):
+    """Enable acquisition of local roles on given obj.
+    Set __ac_local_roles_block__ = 0 on obj.
+
+    :param obj: [required] Context object to enable the acquisition on.
+    :type obj: Content object
+    :Example: :ref:`content_enable_acquire_local_roles_example`
+    """
+    plone_utils = portal.get_tool('plone_utils')
+    plone_utils.acquireLocalRoles(obj, status=1)
+
+
 @required_parameters('name', 'context', 'request')
 def get_view(name=None, context=None, request=None):
     """Get a BrowserView object.
diff --git a/src/plone/api/tests/test_content.py b/src/plone/api/tests/test_content.py
index 47bca78..9c14b12 100644
--- a/src/plone/api/tests/test_content.py
+++ b/src/plone/api/tests/test_content.py
@@ -934,6 +934,34 @@ def test_transition(self):
             'internally_published',
         )
 
+    def test_diable_acquire_local_roles(self):
+        """ Test disabling local roles acquisition.
+        """
+        # This should fail because an content item is mandatory
+        from plone.api.exc import MissingParameterError
+        with self.assertRaises(MissingParameterError):
+            api.content.disable_acquire_local_roles()
+
+        api.content.disable_acquire_local_roles(obj=self.blog)
+        blog_ac_flag = getattr(self.blog, '__ac_local_roles_block__', None)
+        self.assertTrue(blog_ac_flag)
+
+    def test_enable_acquire_local_roles(self):
+        """ Test enabling local roles acquisition.
+        """
+        # This should fail because an content item is mandatory
+        from plone.api.exc import MissingParameterError
+        with self.assertRaises(MissingParameterError):
+            api.content.enable_acquire_local_roles()
+
+        # As __ac_local_roles_block__ is None by default, we have to set it,
+        # before we can test the enabling method.
+        self.blog.__ac_local_roles_block__ = 1
+
+        api.content.enable_acquire_local_roles(obj=self.blog)
+        blog_ac_flag = getattr(self.blog, '__ac_local_roles_block__', None)
+        self.assertFalse(blog_ac_flag)
+
     def test_get_view_constraints(self):
         """Test the constraints for deleting content."""
         from plone.api.exc import MissingParameterError


Repository: plone.api


Branch: refs/heads/master
Date: 2017-05-11T10:47:06+02:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/plone.api/commit/a1f7326ed489fe9377e3bd906aab154ed8c7e5c0

changed the naming to disable/enable_roles_acquisition

Files changed:
M docs/content.rst
M src/plone/api/content.py
M src/plone/api/tests/test_content.py

diff --git a/docs/content.rst b/docs/content.rst
index 63cc682..9c6e021 100644
--- a/docs/content.rst
+++ b/docs/content.rst
@@ -462,36 +462,36 @@ These arguments can be saved to your transition using custom workflow variables
 
 .. invisible-code-block: python
 
-.. _content_disable_acquire_local_roles_example:
+.. _content_disable_roles_acquisition_example:
 
 Disable local roles acquisition
 ===============================
 
-To disable the acquisition of local roles for an object, use the :meth:`api.content.disable_acquire_local_roles` method.
+To disable the acquisition of local roles for an object, use the :meth:`api.content.disable_roles_acquisition` method.
 
 .. code-block:: python
 
     from plone import api
     portal = api.portal.get()
-    api.content.disable_acquire_local_roles(obj=portal['about'])
+    api.content.disable_roles_acquisition(obj=portal['about'])
 
 .. invisible-code-block: python
 
     ac_flag = getattr(portal['about'], '__ac_local_roles_block__', None)
     self.assertTrue(ac_flag)
 
-.. _content_enable_acquire_local_roles_example:
+.. _content_enable_roles_acquisition_example:
 
 Enable local roles acquisition
 ==============================
 
-To enable the acquisition of local roles for an object, use the :meth:`api.content.enable_acquire_local_roles` method.
+To enable the acquisition of local roles for an object, use the :meth:`api.content.enable_roles_acquisition` method.
 
 .. code-block:: python
 
     from plone import api
     portal = api.portal.get()
-    api.content.enable_acquire_local_roles(obj=portal['about'])
+    api.content.enable_roles_acquisition(obj=portal['about'])
 
 .. invisible-code-block: python
 
@@ -499,7 +499,7 @@ To enable the acquisition of local roles for an object, use the :meth:`api.conte
     # before we can test the enabling method.
     portal['about'].__ac_local_roles_block__ = 1
 
-    api.content.enable_acquire_local_roles(obj=portal['about'])
+    api.content.enable_roles_acquisition(obj=portal['about'])
     ac_flag = getattr(portal['about'], '__ac_local_roles_block__', None)
     self.assertFalse(ac_flag)
 
diff --git a/src/plone/api/content.py b/src/plone/api/content.py
index 40c1c09..1e26b39 100644
--- a/src/plone/api/content.py
+++ b/src/plone/api/content.py
@@ -486,26 +486,26 @@ def transition(obj=None, transition=None, to_state=None, **kwargs):
 
 
 @required_parameters('obj')
-def disable_acquire_local_roles(obj=None):
+def disable_roles_acquisition(obj=None):
     """Disable acquisition of local roles on given obj.
     Set __ac_local_roles_block__ = 1 on obj.
 
     :param obj: [required] Context object to block the acquisition on.
     :type obj: Content object
-    :Example: :ref:`content_disable_acquire_local_roles_example`
+    :Example: :ref:`content_disable_roles_acquisition_example`
     """
     plone_utils = portal.get_tool('plone_utils')
     plone_utils.acquireLocalRoles(obj, status=0)
 
 
 @required_parameters('obj')
-def enable_acquire_local_roles(obj=None):
+def enable_roles_acquisition(obj=None):
     """Enable acquisition of local roles on given obj.
     Set __ac_local_roles_block__ = 0 on obj.
 
     :param obj: [required] Context object to enable the acquisition on.
     :type obj: Content object
-    :Example: :ref:`content_enable_acquire_local_roles_example`
+    :Example: :ref:`content_enable_roles_acquisition_example`
     """
     plone_utils = portal.get_tool('plone_utils')
     plone_utils.acquireLocalRoles(obj, status=1)
diff --git a/src/plone/api/tests/test_content.py b/src/plone/api/tests/test_content.py
index 9c14b12..6bb53a1 100644
--- a/src/plone/api/tests/test_content.py
+++ b/src/plone/api/tests/test_content.py
@@ -934,31 +934,31 @@ def test_transition(self):
             'internally_published',
         )
 
-    def test_diable_acquire_local_roles(self):
+    def test_diable_roles_acquisition(self):
         """ Test disabling local roles acquisition.
         """
         # This should fail because an content item is mandatory
         from plone.api.exc import MissingParameterError
         with self.assertRaises(MissingParameterError):
-            api.content.disable_acquire_local_roles()
+            api.content.disable_roles_acquisition()
 
-        api.content.disable_acquire_local_roles(obj=self.blog)
+        api.content.disable_roles_acquisition(obj=self.blog)
         blog_ac_flag = getattr(self.blog, '__ac_local_roles_block__', None)
         self.assertTrue(blog_ac_flag)
 
-    def test_enable_acquire_local_roles(self):
+    def test_enable_roles_acquisition(self):
         """ Test enabling local roles acquisition.
         """
         # This should fail because an content item is mandatory
         from plone.api.exc import MissingParameterError
         with self.assertRaises(MissingParameterError):
-            api.content.enable_acquire_local_roles()
+            api.content.enable_roles_acquisition()
 
         # As __ac_local_roles_block__ is None by default, we have to set it,
         # before we can test the enabling method.
         self.blog.__ac_local_roles_block__ = 1
 
-        api.content.enable_acquire_local_roles(obj=self.blog)
+        api.content.enable_roles_acquisition(obj=self.blog)
         blog_ac_flag = getattr(self.blog, '__ac_local_roles_block__', None)
         self.assertFalse(blog_ac_flag)
 


Repository: plone.api


Branch: refs/heads/master
Date: 2017-05-12T14:59:57+02:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/plone.api/commit/55af458fb4412e54a3186ad83e1eeb70703203d8

Merge pull request #370 from plone/MrTango_acquire_local_roles

Add disable/enable acquire_local_roles methods to api.content

Files changed:
M CHANGES.rst
M docs/content.rst
M src/plone/api/content.py
M src/plone/api/tests/test_content.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 67e0619..fbe36bd 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Add disable_acquire_local_roles and enable_acquire_local_roles to api.content
+  [MrTango]
 
 Bug fixes:
 
diff --git a/docs/content.rst b/docs/content.rst
index 31acde1..9c6e021 100644
--- a/docs/content.rst
+++ b/docs/content.rst
@@ -462,6 +462,47 @@ These arguments can be saved to your transition using custom workflow variables
 
 .. invisible-code-block: python
 
+.. _content_disable_roles_acquisition_example:
+
+Disable local roles acquisition
+===============================
+
+To disable the acquisition of local roles for an object, use the :meth:`api.content.disable_roles_acquisition` method.
+
+.. code-block:: python
+
+    from plone import api
+    portal = api.portal.get()
+    api.content.disable_roles_acquisition(obj=portal['about'])
+
+.. invisible-code-block: python
+
+    ac_flag = getattr(portal['about'], '__ac_local_roles_block__', None)
+    self.assertTrue(ac_flag)
+
+.. _content_enable_roles_acquisition_example:
+
+Enable local roles acquisition
+==============================
+
+To enable the acquisition of local roles for an object, use the :meth:`api.content.enable_roles_acquisition` method.
+
+.. code-block:: python
+
+    from plone import api
+    portal = api.portal.get()
+    api.content.enable_roles_acquisition(obj=portal['about'])
+
+.. invisible-code-block: python
+
+    # As __ac_local_roles_block__ is None by default, we have to set it,
+    # before we can test the enabling method.
+    portal['about'].__ac_local_roles_block__ = 1
+
+    api.content.enable_roles_acquisition(obj=portal['about'])
+    ac_flag = getattr(portal['about'], '__ac_local_roles_block__', None)
+    self.assertFalse(ac_flag)
+
 .. _content_get_view_example:
 
 Get view
diff --git a/src/plone/api/content.py b/src/plone/api/content.py
index f219a80..1e26b39 100644
--- a/src/plone/api/content.py
+++ b/src/plone/api/content.py
@@ -485,6 +485,32 @@ def transition(obj=None, transition=None, to_state=None, **kwargs):
             )
 
 
+@required_parameters('obj')
+def disable_roles_acquisition(obj=None):
+    """Disable acquisition of local roles on given obj.
+    Set __ac_local_roles_block__ = 1 on obj.
+
+    :param obj: [required] Context object to block the acquisition on.
+    :type obj: Content object
+    :Example: :ref:`content_disable_roles_acquisition_example`
+    """
+    plone_utils = portal.get_tool('plone_utils')
+    plone_utils.acquireLocalRoles(obj, status=0)
+
+
+@required_parameters('obj')
+def enable_roles_acquisition(obj=None):
+    """Enable acquisition of local roles on given obj.
+    Set __ac_local_roles_block__ = 0 on obj.
+
+    :param obj: [required] Context object to enable the acquisition on.
+    :type obj: Content object
+    :Example: :ref:`content_enable_roles_acquisition_example`
+    """
+    plone_utils = portal.get_tool('plone_utils')
+    plone_utils.acquireLocalRoles(obj, status=1)
+
+
 @required_parameters('name', 'context', 'request')
 def get_view(name=None, context=None, request=None):
     """Get a BrowserView object.
diff --git a/src/plone/api/tests/test_content.py b/src/plone/api/tests/test_content.py
index 47bca78..6bb53a1 100644
--- a/src/plone/api/tests/test_content.py
+++ b/src/plone/api/tests/test_content.py
@@ -934,6 +934,34 @@ def test_transition(self):
             'internally_published',
         )
 
+    def test_diable_roles_acquisition(self):
+        """ Test disabling local roles acquisition.
+        """
+        # This should fail because an content item is mandatory
+        from plone.api.exc import MissingParameterError
+        with self.assertRaises(MissingParameterError):
+            api.content.disable_roles_acquisition()
+
+        api.content.disable_roles_acquisition(obj=self.blog)
+        blog_ac_flag = getattr(self.blog, '__ac_local_roles_block__', None)
+        self.assertTrue(blog_ac_flag)
+
+    def test_enable_roles_acquisition(self):
+        """ Test enabling local roles acquisition.
+        """
+        # This should fail because an content item is mandatory
+        from plone.api.exc import MissingParameterError
+        with self.assertRaises(MissingParameterError):
+            api.content.enable_roles_acquisition()
+
+        # As __ac_local_roles_block__ is None by default, we have to set it,
+        # before we can test the enabling method.
+        self.blog.__ac_local_roles_block__ = 1
+
+        api.content.enable_roles_acquisition(obj=self.blog)
+        blog_ac_flag = getattr(self.blog, '__ac_local_roles_block__', None)
+        self.assertFalse(blog_ac_flag)
+
     def test_get_view_constraints(self):
         """Test the constraints for deleting content."""
         from plone.api.exc import MissingParameterError


