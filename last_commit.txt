Repository: plone.app.i18n


Branch: refs/heads/master
Date: 2016-07-05T23:12:15+02:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.app.i18n/commit/e2c59c64b122b0c3ae39e6c27a7aa268172fd318

Use zope.interface decorator

This not only makes code more pleasent to read,
but also makes the code python 3 compatible
(while maintaining python 2 compatibility).

Files changed:
M CHANGES.rst
M plone/app/i18n/locales/browser/selector.py
M plone/app/i18n/locales/countries.py
M plone/app/i18n/locales/languages.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 2c272ff..7ff9603 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ New:
 
 Fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 3.0.2 (2016-02-18)
diff --git a/plone/app/i18n/locales/browser/selector.py b/plone/app/i18n/locales/browser/selector.py
index efb8e75..bd019b6 100644
--- a/plone/app/i18n/locales/browser/selector.py
+++ b/plone/app/i18n/locales/browser/selector.py
@@ -1,10 +1,11 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.viewlet.interfaces import IViewlet
 
 from Products.CMFCore.utils import getToolByName
 from Products.Five.browser import BrowserView
 
 
+@implementer(IViewlet)
 class LanguageSelector(BrowserView):
     """Language selector.
 
@@ -80,7 +81,6 @@ class LanguageSelector(BrowserView):
       >>> ls.portal_url()
       'absolute url'
     """
-    implements(IViewlet)
 
     def __init__(self, context, request, view, manager):
         super(LanguageSelector, self).__init__(context, request)
diff --git a/plone/app/i18n/locales/countries.py b/plone/app/i18n/locales/countries.py
index 20d7dd9..0d45f7a 100644
--- a/plone/app/i18n/locales/countries.py
+++ b/plone/app/i18n/locales/countries.py
@@ -3,11 +3,12 @@
 from plone.app.i18n.locales.interfaces import ICountries
 from plone.i18n.locales.countries import CountryAvailability
 
-from zope.interface import implements
+from zope.interface import implementer
 
 from OFS.SimpleItem import SimpleItem
 
 
+@implementer(ICountries)
 class Countries(SimpleItem, CountryAvailability):
     """A local utility storing a list of available countries.
 
@@ -17,7 +18,6 @@ class Countries(SimpleItem, CountryAvailability):
       >>> verifyClass(ICountries, Countries)
       True
     """
-    implements(ICountries)
 
     id = 'plone_app_countries'
     title = 'Manages available countries'
diff --git a/plone/app/i18n/locales/languages.py b/plone/app/i18n/locales/languages.py
index aadeb71..3ef5be6 100644
--- a/plone/app/i18n/locales/languages.py
+++ b/plone/app/i18n/locales/languages.py
@@ -8,11 +8,12 @@
 from plone.i18n.locales.languages import MetadataLanguageAvailability
 from plone.i18n.locales.languages import LanguageAvailability
 
-from zope.interface import implements
+from zope.interface import implementer
 
 from OFS.SimpleItem import SimpleItem
 
 
+@implementer(IModifiableLanguageAvailability)
 class Languages(SimpleItem, LanguageAvailability):
     """ A base implementation for persistent utilities implementing
     IModifiableLanguageAvailability.
@@ -23,7 +24,6 @@ class Languages(SimpleItem, LanguageAvailability):
       >>> verifyClass(IModifiableLanguageAvailability, Languages)
       True
     """
-    implements(IModifiableLanguageAvailability)
 
     def __init__(self):
         self.languages = ['en']
@@ -49,6 +49,7 @@ def setAvailableLanguages(self, languages, combined=False):
             self.languages = languages
 
 
+@implementer(IContentLanguages)
 class ContentLanguages(Languages, ContentLanguageAvailability):
     """A local utility storing a list of available content languages.
 
@@ -58,13 +59,13 @@ class ContentLanguages(Languages, ContentLanguageAvailability):
       >>> verifyClass(IContentLanguages, ContentLanguages)
       True
     """
-    implements(IContentLanguages)
 
     id = 'plone_app_content_languages'
     title = 'Manages available content languages'
     meta_type = 'Plone App I18N Content Languages'
 
 
+@implementer(IMetadataLanguages)
 class MetadataLanguages(Languages, MetadataLanguageAvailability):
     """A local utility storing a list of available metadata languages.
 
@@ -74,7 +75,6 @@ class MetadataLanguages(Languages, MetadataLanguageAvailability):
       >>> verifyClass(IMetadataLanguages, MetadataLanguages)
       True
     """
-    implements(IMetadataLanguages)
 
     id = 'plone_app_metadata_languages'
     title = 'Manages available metadata languages'


Repository: plone.app.i18n


Branch: refs/heads/master
Date: 2016-07-09T08:50:49+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.i18n/commit/0fe6bf7c733b0cecafa68d0e63bbe861212c4bcd

Merge pull request #5 from plone/gforcada-use-zope-decorators

Use zope.interface decorator

Files changed:
M CHANGES.rst
M plone/app/i18n/locales/browser/selector.py
M plone/app/i18n/locales/countries.py
M plone/app/i18n/locales/languages.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 2c272ff..7ff9603 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ New:
 
 Fixes:
 
-- *add item here*
+- Use zope.interface decorator.
+  [gforcada]
 
 
 3.0.2 (2016-02-18)
diff --git a/plone/app/i18n/locales/browser/selector.py b/plone/app/i18n/locales/browser/selector.py
index efb8e75..bd019b6 100644
--- a/plone/app/i18n/locales/browser/selector.py
+++ b/plone/app/i18n/locales/browser/selector.py
@@ -1,10 +1,11 @@
-from zope.interface import implements
+from zope.interface import implementer
 from zope.viewlet.interfaces import IViewlet
 
 from Products.CMFCore.utils import getToolByName
 from Products.Five.browser import BrowserView
 
 
+@implementer(IViewlet)
 class LanguageSelector(BrowserView):
     """Language selector.
 
@@ -80,7 +81,6 @@ class LanguageSelector(BrowserView):
       >>> ls.portal_url()
       'absolute url'
     """
-    implements(IViewlet)
 
     def __init__(self, context, request, view, manager):
         super(LanguageSelector, self).__init__(context, request)
diff --git a/plone/app/i18n/locales/countries.py b/plone/app/i18n/locales/countries.py
index 20d7dd9..0d45f7a 100644
--- a/plone/app/i18n/locales/countries.py
+++ b/plone/app/i18n/locales/countries.py
@@ -3,11 +3,12 @@
 from plone.app.i18n.locales.interfaces import ICountries
 from plone.i18n.locales.countries import CountryAvailability
 
-from zope.interface import implements
+from zope.interface import implementer
 
 from OFS.SimpleItem import SimpleItem
 
 
+@implementer(ICountries)
 class Countries(SimpleItem, CountryAvailability):
     """A local utility storing a list of available countries.
 
@@ -17,7 +18,6 @@ class Countries(SimpleItem, CountryAvailability):
       >>> verifyClass(ICountries, Countries)
       True
     """
-    implements(ICountries)
 
     id = 'plone_app_countries'
     title = 'Manages available countries'
diff --git a/plone/app/i18n/locales/languages.py b/plone/app/i18n/locales/languages.py
index aadeb71..3ef5be6 100644
--- a/plone/app/i18n/locales/languages.py
+++ b/plone/app/i18n/locales/languages.py
@@ -8,11 +8,12 @@
 from plone.i18n.locales.languages import MetadataLanguageAvailability
 from plone.i18n.locales.languages import LanguageAvailability
 
-from zope.interface import implements
+from zope.interface import implementer
 
 from OFS.SimpleItem import SimpleItem
 
 
+@implementer(IModifiableLanguageAvailability)
 class Languages(SimpleItem, LanguageAvailability):
     """ A base implementation for persistent utilities implementing
     IModifiableLanguageAvailability.
@@ -23,7 +24,6 @@ class Languages(SimpleItem, LanguageAvailability):
       >>> verifyClass(IModifiableLanguageAvailability, Languages)
       True
     """
-    implements(IModifiableLanguageAvailability)
 
     def __init__(self):
         self.languages = ['en']
@@ -49,6 +49,7 @@ def setAvailableLanguages(self, languages, combined=False):
             self.languages = languages
 
 
+@implementer(IContentLanguages)
 class ContentLanguages(Languages, ContentLanguageAvailability):
     """A local utility storing a list of available content languages.
 
@@ -58,13 +59,13 @@ class ContentLanguages(Languages, ContentLanguageAvailability):
       >>> verifyClass(IContentLanguages, ContentLanguages)
       True
     """
-    implements(IContentLanguages)
 
     id = 'plone_app_content_languages'
     title = 'Manages available content languages'
     meta_type = 'Plone App I18N Content Languages'
 
 
+@implementer(IMetadataLanguages)
 class MetadataLanguages(Languages, MetadataLanguageAvailability):
     """A local utility storing a list of available metadata languages.
 
@@ -74,7 +75,6 @@ class MetadataLanguages(Languages, MetadataLanguageAvailability):
       >>> verifyClass(IMetadataLanguages, MetadataLanguages)
       True
     """
-    implements(IMetadataLanguages)
 
     id = 'plone_app_metadata_languages'
     title = 'Manages available metadata languages'


