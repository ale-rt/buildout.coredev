Repository: plone.contentrules


Branch: refs/heads/master
Date: 2015-12-13T21:38:16+01:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.contentrules/commit/80e1e66cb8e1e0b273090029dc0e8ea458deea2b

Fix a write on read situation

If the context gets its first annotation it need to be marked as
safe to write.

The same goes for the annotations on the object.

Files changed:
M CHANGES.rst
M plone/contentrules/engine/assignments.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 4b8d987..e2e3c25 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -12,6 +12,8 @@ Fixes:
 
 - *add item here*
 
+- CSRF fix: safe write on read.
+  [gforcada]
 
 2.0.4 (2014-01-27)
 ------------------
diff --git a/plone/contentrules/engine/assignments.py b/plone/contentrules/engine/assignments.py
index 7918fca..b316a7c 100644
--- a/plone/contentrules/engine/assignments.py
+++ b/plone/contentrules/engine/assignments.py
@@ -16,6 +16,12 @@
 
 from BTrees.OOBTree import OOBTree
 
+try:
+    from plone.protect.auto import safeWrite
+except ImportError:
+    def safeWrite(*args):
+        pass
+
 
 def check_rules_with_dotted_name_moved(rule):
     """Migrate on-the-fly added event dotted name
@@ -85,6 +91,10 @@ def ruleAssignmentManagerAdapterFactory(context):
     annotations = IAnnotations(context)
     manager = annotations.get(KEY, None)
     if manager is None:
-        manager = annotations[KEY] = RuleAssignmentManager()
+        annotations[KEY] = RuleAssignmentManager()
+        manager = annotations[KEY]
+        # protect both context and its annotations from a write on read error
+        safeWrite(context)
+        safeWrite(context.__annotations__)
 
     return manager


Repository: plone.contentrules


Branch: refs/heads/master
Date: 2015-12-13T21:38:33+01:00
Author: Gil Forcada (gforcada) <gforcada@gnome.org>
Commit: https://github.com/plone/plone.contentrules/commit/c637f42ba6ea8e479ac17b470ac94c0d6999a580

Merge branch 'write-on-read'

Files changed:
M CHANGES.rst
M plone/contentrules/engine/assignments.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 4b8d987..e2e3c25 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -12,6 +12,8 @@ Fixes:
 
 - *add item here*
 
+- CSRF fix: safe write on read.
+  [gforcada]
 
 2.0.4 (2014-01-27)
 ------------------
diff --git a/plone/contentrules/engine/assignments.py b/plone/contentrules/engine/assignments.py
index 7918fca..b316a7c 100644
--- a/plone/contentrules/engine/assignments.py
+++ b/plone/contentrules/engine/assignments.py
@@ -16,6 +16,12 @@
 
 from BTrees.OOBTree import OOBTree
 
+try:
+    from plone.protect.auto import safeWrite
+except ImportError:
+    def safeWrite(*args):
+        pass
+
 
 def check_rules_with_dotted_name_moved(rule):
     """Migrate on-the-fly added event dotted name
@@ -85,6 +91,10 @@ def ruleAssignmentManagerAdapterFactory(context):
     annotations = IAnnotations(context)
     manager = annotations.get(KEY, None)
     if manager is None:
-        manager = annotations[KEY] = RuleAssignmentManager()
+        annotations[KEY] = RuleAssignmentManager()
+        manager = annotations[KEY]
+        # protect both context and its annotations from a write on read error
+        safeWrite(context)
+        safeWrite(context.__annotations__)
 
     return manager


