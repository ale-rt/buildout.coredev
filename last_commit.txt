Repository: Products.LinguaPlone


Branch: refs/heads/master
Date: 2017-02-27T17:11:27+01:00
Author: Mikel Larreategi (erral) <mlarreategi@codesyntax.com>
Commit: https://github.com/plone/Products.LinguaPlone/commit/d6bf610ffe7ab04b0e579484cf008d9ee348df40

remove duplicated call

Files changed:
M Products/LinguaPlone/browser/menu.py

diff --git a/Products/LinguaPlone/browser/menu.py b/Products/LinguaPlone/browser/menu.py
index a49b23a..d022db7 100644
--- a/Products/LinguaPlone/browser/menu.py
+++ b/Products/LinguaPlone/browser/menu.py
@@ -48,7 +48,6 @@ def getMenuItems(self, context, request):
         langs = self.getUntranslatedLanguages(context)
         if can_translate:
             showflags = lt.showFlags()
-            langs = self.getUntranslatedLanguages(context)
 
             for (lang_id, lang_name) in langs:
                 icon=showflags and lt.getFlagForLanguageCode(lang_id) or None


Repository: Products.LinguaPlone


Branch: refs/heads/master
Date: 2017-02-27T17:11:27+01:00
Author: Mikel Larreategi (erral) <mlarreategi@codesyntax.com>
Commit: https://github.com/plone/Products.LinguaPlone/commit/f43c682ad864afcd8a1a235cfc15e6f01c28eb83

show native language in the 'translate into' menu

Files changed:
M Products/LinguaPlone/browser/menu.py

diff --git a/Products/LinguaPlone/browser/menu.py b/Products/LinguaPlone/browser/menu.py
index d022db7..414aab3 100644
--- a/Products/LinguaPlone/browser/menu.py
+++ b/Products/LinguaPlone/browser/menu.py
@@ -1,5 +1,6 @@
 from plone.browserlayer.utils import registered_layers
 from zope.interface import implementer
+from zope.component import queryUtility
 from Products.CMFCore.permissions import AddPortalContent, ModifyPortalContent,\
     DeleteObjects
 
@@ -17,7 +18,7 @@
 from Products.LinguaPlone.browser.interfaces import ITranslateMenu
 from Products.LinguaPlone.browser.interfaces import ITranslateSubMenuItem
 from Products.LinguaPlone.interfaces import ILinguaPloneProductLayer
-
+from plone.i18n.locales.interfaces import IContentLanguageAvailability
 
 @implementer(ITranslateMenu)
 class TranslateMenu(BrowserMenu):
@@ -45,11 +46,19 @@ def getMenuItems(self, context, request):
         if not (can_translate or can_set_language or can_delete):
             return []
 
+        lang_util = queryUtility(IContentLanguageAvailability)        
+        if lang_util is not None:
+            all_languages_dict = lang_util.getLanguages()
+
         langs = self.getUntranslatedLanguages(context)
         if can_translate:
             showflags = lt.showFlags()
 
             for (lang_id, lang_name) in langs:
+                if lang_util is not None:                    
+                    lang_info = all_languages_dict.get(lang_id, {})
+                    lang_name = lang_info.get('native', '') or lang_info.get('name')
+
                 icon=showflags and lt.getFlagForLanguageCode(lang_id) or None
                 item={
                     "title": lang_name,


Repository: Products.LinguaPlone


Branch: refs/heads/master
Date: 2017-02-27T17:11:27+01:00
Author: Mikel Larreategi (erral) <mlarreategi@codesyntax.com>
Commit: https://github.com/plone/Products.LinguaPlone/commit/d242728160544f43624e43f9cb2d1d04a7920681

change the menu test to check for native language names

Files changed:
M Products/LinguaPlone/tests/test_menu.py

diff --git a/Products/LinguaPlone/tests/test_menu.py b/Products/LinguaPlone/tests/test_menu.py
index 993c525..c06d22e 100644
--- a/Products/LinguaPlone/tests/test_menu.py
+++ b/Products/LinguaPlone/tests/test_menu.py
@@ -14,10 +14,10 @@ def testLanguageSpecificContentCanBeTranslatedIntoOtherLanguages(self):
         self.assertEqual(doc.getLanguage(), 'en')
         menu = TranslateMenu('translations')
         self.assertEqual([i['title'] for i in menu.getMenuItems(doc, None)],
-            [u'German', u'label_manage_translations'])
+            [u'Deutsch', u'label_manage_translations'])
         self.addLanguage('no')
         self.assertEqual([i['title'] for i in menu.getMenuItems(doc, None)],
-            [u'German', u'Norwegian', u'label_manage_translations'])
+            [u'Deutsch', u'Norsk', u'label_manage_translations'])
 
     def testNeutralContentCannotBeTranslatedDirectly(self):
         self.folder.setLanguage('')


Repository: Products.LinguaPlone


Branch: refs/heads/master
Date: 2017-02-27T17:32:03+01:00
Author: Mikel Larreategi (erral) <mlarreategi@codesyntax.com>
Commit: https://github.com/plone/Products.LinguaPlone/commit/4b30cadc047dbfe917b7a06de3c4e0b04734852c

add changelog entry

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index fbd028a..95b5980 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Show the native language name on the "Translate into..." menu
+  [erral]
 
 Bug fixes:
 


Repository: Products.LinguaPlone


Branch: refs/heads/master
Date: 2017-02-28T17:45:59+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.LinguaPlone/commit/04531fbd0e78060e60b49b76d5ec8c8828d86a2c

Merge pull request #24 from erral/translated-menu

Show native language name in "Translate into..." menu

Files changed:
M CHANGES.rst
M Products/LinguaPlone/browser/menu.py
M Products/LinguaPlone/tests/test_menu.py

diff --git a/CHANGES.rst b/CHANGES.rst
index fbd028a..95b5980 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Show the native language name on the "Translate into..." menu
+  [erral]
 
 Bug fixes:
 
diff --git a/Products/LinguaPlone/browser/menu.py b/Products/LinguaPlone/browser/menu.py
index a49b23a..414aab3 100644
--- a/Products/LinguaPlone/browser/menu.py
+++ b/Products/LinguaPlone/browser/menu.py
@@ -1,5 +1,6 @@
 from plone.browserlayer.utils import registered_layers
 from zope.interface import implementer
+from zope.component import queryUtility
 from Products.CMFCore.permissions import AddPortalContent, ModifyPortalContent,\
     DeleteObjects
 
@@ -17,7 +18,7 @@
 from Products.LinguaPlone.browser.interfaces import ITranslateMenu
 from Products.LinguaPlone.browser.interfaces import ITranslateSubMenuItem
 from Products.LinguaPlone.interfaces import ILinguaPloneProductLayer
-
+from plone.i18n.locales.interfaces import IContentLanguageAvailability
 
 @implementer(ITranslateMenu)
 class TranslateMenu(BrowserMenu):
@@ -45,12 +46,19 @@ def getMenuItems(self, context, request):
         if not (can_translate or can_set_language or can_delete):
             return []
 
+        lang_util = queryUtility(IContentLanguageAvailability)        
+        if lang_util is not None:
+            all_languages_dict = lang_util.getLanguages()
+
         langs = self.getUntranslatedLanguages(context)
         if can_translate:
             showflags = lt.showFlags()
-            langs = self.getUntranslatedLanguages(context)
 
             for (lang_id, lang_name) in langs:
+                if lang_util is not None:                    
+                    lang_info = all_languages_dict.get(lang_id, {})
+                    lang_name = lang_info.get('native', '') or lang_info.get('name')
+
                 icon=showflags and lt.getFlagForLanguageCode(lang_id) or None
                 item={
                     "title": lang_name,
diff --git a/Products/LinguaPlone/tests/test_menu.py b/Products/LinguaPlone/tests/test_menu.py
index 993c525..c06d22e 100644
--- a/Products/LinguaPlone/tests/test_menu.py
+++ b/Products/LinguaPlone/tests/test_menu.py
@@ -14,10 +14,10 @@ def testLanguageSpecificContentCanBeTranslatedIntoOtherLanguages(self):
         self.assertEqual(doc.getLanguage(), 'en')
         menu = TranslateMenu('translations')
         self.assertEqual([i['title'] for i in menu.getMenuItems(doc, None)],
-            [u'German', u'label_manage_translations'])
+            [u'Deutsch', u'label_manage_translations'])
         self.addLanguage('no')
         self.assertEqual([i['title'] for i in menu.getMenuItems(doc, None)],
-            [u'German', u'Norwegian', u'label_manage_translations'])
+            [u'Deutsch', u'Norsk', u'label_manage_translations'])
 
     def testNeutralContentCannotBeTranslatedDirectly(self):
         self.folder.setLanguage('')


