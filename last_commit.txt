Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2017-10-27T09:09:59+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.upgrade/commit/3672a0a5b19cf4393dbcc48c17d93bce88927777

Add upgrade step for 5.2 to register tools as utilities

Files changed:
A plone/app/upgrade/v52/profiles/to_alpha1/componentregistry.xml
M CHANGES.rst
M plone/app/upgrade/v50/testing.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 84076bb4..fe8fca67 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,9 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Add upgrade step for 5.2 to register tools as utilities.
+  Run it before testing the zexp-import.
+  [pbauer]
 
 Bug fixes:
 
diff --git a/plone/app/upgrade/v50/testing.py b/plone/app/upgrade/v50/testing.py
index d52f8e5f..aa0d9e2a 100644
--- a/plone/app/upgrade/v50/testing.py
+++ b/plone/app/upgrade/v50/testing.py
@@ -1,5 +1,7 @@
+# -*- coding: utf-8 -*-
 from plone.app.testing import PloneSandboxLayer
 from plone.app.testing import PLONE_FIXTURE
+from plone.app.upgrade.utils import loadMigrationProfile
 from plone.testing.z2 import FunctionalTesting, login
 from zope.component.hooks import setSite
 from zope.configuration import xmlconfig
@@ -38,6 +40,10 @@ def setUpPloneSite(self, portal):
             # run upgrades
             self['portal'] = portal = app.test
             setSite(portal)
+            loadMigrationProfile(
+                portal.portal_setup,
+                'profile-plone.app.upgrade.v52:to52alpha1',
+                steps=['componentregistry'])
             portal.portal_migration.upgrade(swallow_errors=False)
             setSite(None)
 
diff --git a/plone/app/upgrade/v52/profiles/to_alpha1/componentregistry.xml b/plone/app/upgrade/v52/profiles/to_alpha1/componentregistry.xml
new file mode 100644
index 00000000..71432cc7
--- /dev/null
+++ b/plone/app/upgrade/v52/profiles/to_alpha1/componentregistry.xml
@@ -0,0 +1,51 @@
+<?xml version="1.0"?>
+<componentregistry>
+ <adapters/>
+ <utilities>
+  <utility
+     interface="Products.CMFCore.interfaces.ITypesTool"
+     object="portal_types"/>
+  <utility
+     interface="Products.CMFCore.interfaces.IActionsTool"
+     object="portal_actions"/>
+  <utility
+     interface="Products.CMFCore.interfaces.ISkinsTool"
+     object="portal_skins"/>
+  <utility
+     interface="Products.CMFCore.interfaces.IWorkflowTool"
+     object="portal_workflow"/>
+  <utility
+     interface="Products.CMFCore.interfaces.ICachingPolicyManager"
+     object="caching_policy_manager"/>
+  <utility
+     interface="Products.CMFCore.interfaces.ICatalogTool"
+     object="portal_catalog"/>
+  <utility
+     interface="Products.CMFCore.interfaces.IContentTypeRegistry"
+     object="content_type_registry"/>
+  <utility
+     interface="Products.MailHost.interfaces.IMailHost"
+     object="MailHost"/>
+  <utility
+     interface="Products.CMFCore.interfaces.IMemberDataTool"
+     object="portal_memberdata"/>
+  <utility
+     interface="Products.CMFCore.interfaces.IMembershipTool"
+     object="portal_membership"/>
+  <utility
+     interface="Products.CMFCore.interfaces.IURLTool"
+     object="portal_url"/>
+  <utility
+     interface="Products.CMFCore.interfaces.IMetadataTool"
+     object="portal_metadata"/>
+  <utility
+     interface="Products.CMFCore.interfaces.IRegistrationTool"
+     object="portal_registration"/>
+  <utility
+     interface="Products.CMFCore.interfaces.ISyndicationTool"
+     object="portal_syndication"/>
+  <utility
+     interface="Products.CMFCore.interfaces.IUndoTool"
+     object="portal_undo"/>
+ </utilities>
+</componentregistry>


